/*
 * RWSubTaskDecideToReadIncommingData.cpp
 *
 *  Created on: 21-05-2012
 *      Author: root
 */

// =================================================

#include "RWSubTaskDecideToReadIncommingData.h"

// =================================================

RWSubTaskDecideToReadIncommingData::RWSubTaskDecideToReadIncommingData( AnyBuffer< byte , byte >* _inputBuffer , RWSubTask* _subTaskIfReadIncommingData , RWSubTask* _subTaskIfNotReadIncommingData ) : dp( PSTR( "RWSubTaskDecideToReadIncommingData" ) , DEBUG_LEVEL_ALL )
{
	inputBuffer = _inputBuffer;
	subTaskIfReadIncommingData = _subTaskIfReadIncommingData;
	subTaskIfNotReadIncommingData = _subTaskIfNotReadIncommingData;
}

// =================================================

char* RWSubTaskDecideToReadIncommingData::getSubTaskName()
{
	return "DecideToReadIncommingData";
}

// =================================================

void RWSubTaskDecideToReadIncommingData::resetInternalState()
{

}

// =================================================

unsigned long RWSubTaskDecideToReadIncommingData::getStateTimeout()
{
	return 0;
}

// =================================================

RWSubTask* RWSubTaskDecideToReadIncommingData::getStateAfterTimeout()
{
	return NULL;
}

// =================================================

RWSubTask* RWSubTaskDecideToReadIncommingData::executeSubTask()
{
	if( inputBuffer->position == inputBuffer->limit == inputBuffer->capacity ) inputBuffer->setPositionAndLimit( 0 , 0 );

	return inputBuffer->getUnusedSpace() > 0 ? subTaskIfReadIncommingData : subTaskIfNotReadIncommingData;
}

// =================================================


