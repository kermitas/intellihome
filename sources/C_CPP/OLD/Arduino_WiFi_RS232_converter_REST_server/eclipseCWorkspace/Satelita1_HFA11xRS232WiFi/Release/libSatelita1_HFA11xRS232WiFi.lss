In archive libSatelita1_HFA11xRS232WiFi.a:

HFA11xRS232WiFiCRC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000a2c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000036e0  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN18HFA11xRS232WiFiCRCC2Ev 0000001e  00000000  00000000  00004140  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN18HFA11xRS232WiFiCRC5resetEv 0000000e  00000000  00000000  0000415e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN18HFA11xRS232WiFiCRC11processByteEh 00000036  00000000  00000000  0000416c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN18HFA11xRS232WiFiCRC12processBytesEPhh 0000008a  00000000  00000000  000041a2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN18HFA11xRS232WiFiCRC13getCRCLowByteEj 00000004  00000000  00000000  0000422c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .text._ZN18HFA11xRS232WiFiCRC14getCRCHighByteEj 00000004  00000000  00000000  00004230  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text._ZN18HFA11xRS232WiFiCRC9getCRCSumEv 000000d0  00000000  00000000  00004234  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream 000000c8  00000000  00000000  00004304  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .progmem.data 000000c0  00000000  00000000  000043cc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN18HFA11xRS232WiFiCRCC2Ev:

00000000 <_ZN18HFA11xRS232WiFiCRCC1Ev>:
}

// =================================================

bool HFA11xRS232WiFiCRC::writeCRCBytesToStream( Stream* stream )
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	60 e0       	ldi	r22, 0x00	; 0
   8:	70 e0       	ldi	r23, 0x00	; 0
   a:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRCC1Ev>
   e:	1e 82       	std	Y+6, r1	; 0x06
	static const PROGMEM prog_char functionName[] = "writeCRCBytesToStream";

	unsigned int crcSum = getCRCSum();
  10:	1f 82       	std	Y+7, r1	; 0x07
  12:	18 86       	std	Y+8, r1	; 0x08
  14:	19 86       	std	Y+9, r1	; 0x09
  16:	1d 82       	std	Y+5, r1	; 0x05
	unsigned char highByte = getCRCHighByte( crcSum );
	unsigned char lowByte = getCRCLowByte( crcSum );

	aln( "writing to stream crc highByte = %u, lowByte = %u (in order: first LOW %u, then HIGH byte %u)" , highByte , lowByte , lowByte , highByte )
  18:	df 91       	pop	r29
  1a:	cf 91       	pop	r28
  1c:	08 95       	ret

Disassembly of section .text._ZN18HFA11xRS232WiFiCRC5resetEv:

00000000 <_ZN18HFA11xRS232WiFiCRC5resetEv>:
}

// =================================================

bool HFA11xRS232WiFiCRC::writeCRCBytesToStream( Stream* stream )
{
   0:	fc 01       	movw	r30, r24
   2:	16 82       	std	Z+6, r1	; 0x06
   4:	17 82       	std	Z+7, r1	; 0x07
   6:	10 86       	std	Z+8, r1	; 0x08
   8:	11 86       	std	Z+9, r1	; 0x09
   a:	15 82       	std	Z+5, r1	; 0x05
   c:	08 95       	ret

Disassembly of section .text._ZN18HFA11xRS232WiFiCRC11processByteEh:

00000000 <_ZN18HFA11xRS232WiFiCRC11processByteEh>:
   0:	fc 01       	movw	r30, r24
   2:	85 81       	ldd	r24, Z+5	; 0x05
   4:	88 23       	and	r24, r24
   6:	01 f4       	brne	.+0      	; 0x8 <_ZN18HFA11xRS232WiFiCRC11processByteEh+0x8>
   8:	63 83       	std	Z+3, r22	; 0x03
   a:	81 e0       	ldi	r24, 0x01	; 1
   c:	85 83       	std	Z+5, r24	; 0x05
   e:	08 95       	ret
	static const PROGMEM prog_char functionName[] = "writeCRCBytesToStream";

	unsigned int crcSum = getCRCSum();
  10:	64 83       	std	Z+4, r22	; 0x04
  12:	83 81       	ldd	r24, Z+3	; 0x03
  14:	94 81       	ldd	r25, Z+4	; 0x04
  16:	a0 e0       	ldi	r26, 0x00	; 0
	unsigned char highByte = getCRCHighByte( crcSum );
	unsigned char lowByte = getCRCLowByte( crcSum );

	aln( "writing to stream crc highByte = %u, lowByte = %u (in order: first LOW %u, then HIGH byte %u)" , highByte , lowByte , lowByte , highByte )
  18:	b0 e0       	ldi	r27, 0x00	; 0
  1a:	46 81       	ldd	r20, Z+6	; 0x06
  1c:	57 81       	ldd	r21, Z+7	; 0x07
  1e:	60 85       	ldd	r22, Z+8	; 0x08
  20:	71 85       	ldd	r23, Z+9	; 0x09
  22:	48 0f       	add	r20, r24
  24:	59 1f       	adc	r21, r25
  26:	6a 1f       	adc	r22, r26
  28:	7b 1f       	adc	r23, r27
  2a:	46 83       	std	Z+6, r20	; 0x06
  2c:	57 83       	std	Z+7, r21	; 0x07
  2e:	60 87       	std	Z+8, r22	; 0x08
  30:	71 87       	std	Z+9, r23	; 0x09
  32:	15 82       	std	Z+5, r1	; 0x05
  34:	08 95       	ret

Disassembly of section .text._ZN18HFA11xRS232WiFiCRC12processBytesEPhh:

00000000 <_ZN18HFA11xRS232WiFiCRC12processBytesEPhh>:
}

// =================================================

bool HFA11xRS232WiFiCRC::writeCRCBytesToStream( Stream* stream )
{
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	8c 01       	movw	r16, r24
	static const PROGMEM prog_char functionName[] = "writeCRCBytesToStream";

	unsigned int crcSum = getCRCSum();
  10:	c4 2f       	mov	r28, r20
  12:	fc 01       	movw	r30, r24
  14:	85 81       	ldd	r24, Z+5	; 0x05
  16:	88 23       	and	r24, r24
	unsigned char highByte = getCRCHighByte( crcSum );
	unsigned char lowByte = getCRCLowByte( crcSum );

	aln( "writing to stream crc highByte = %u, lowByte = %u (in order: first LOW %u, then HIGH byte %u)" , highByte , lowByte , lowByte , highByte )
  18:	01 f0       	breq	.+0      	; 0x1a <_ZN18HFA11xRS232WiFiCRC12processBytesEPhh+0x1a>
  1a:	c8 01       	movw	r24, r16
  1c:	fb 01       	movw	r30, r22
  1e:	61 91       	ld	r22, Z+
  20:	7f 01       	movw	r14, r30
  22:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRC12processBytesEPhh>
  26:	c1 50       	subi	r28, 0x01	; 1
  28:	00 c0       	rjmp	.+0      	; 0x2a <_ZN18HFA11xRS232WiFiCRC12processBytesEPhh+0x2a>
  2a:	7b 01       	movw	r14, r22
  2c:	67 01       	movw	r12, r14
  2e:	2c 2f       	mov	r18, r28
  30:	00 c0       	rjmp	.+0      	; 0x32 <_ZN18HFA11xRS232WiFiCRC12processBytesEPhh+0x32>
  32:	f6 01       	movw	r30, r12
  34:	41 91       	ld	r20, Z+
  36:	51 91       	ld	r21, Z+
  38:	6f 01       	movw	r12, r30
  3a:	60 e0       	ldi	r22, 0x00	; 0
  3c:	70 e0       	ldi	r23, 0x00	; 0
  3e:	f8 01       	movw	r30, r16
  40:	86 81       	ldd	r24, Z+6	; 0x06
  42:	97 81       	ldd	r25, Z+7	; 0x07
  44:	a0 85       	ldd	r26, Z+8	; 0x08
  46:	b1 85       	ldd	r27, Z+9	; 0x09
  48:	84 0f       	add	r24, r20
  4a:	95 1f       	adc	r25, r21
  4c:	a6 1f       	adc	r26, r22
  4e:	b7 1f       	adc	r27, r23
  50:	86 83       	std	Z+6, r24	; 0x06
  52:	97 83       	std	Z+7, r25	; 0x07
  54:	a0 87       	std	Z+8, r26	; 0x08
  56:	b1 87       	std	Z+9, r27	; 0x09
  58:	22 50       	subi	r18, 0x02	; 2
  5a:	22 30       	cpi	r18, 0x02	; 2
  5c:	00 f4       	brcc	.+0      	; 0x5e <_ZN18HFA11xRS232WiFiCRC12processBytesEPhh+0x5e>
  5e:	ec 2f       	mov	r30, r28
  60:	e6 95       	lsr	r30
  62:	f0 e0       	ldi	r31, 0x00	; 0
  64:	ee 0f       	add	r30, r30
  66:	ff 1f       	adc	r31, r31
  68:	ee 0d       	add	r30, r14
  6a:	ff 1d       	adc	r31, r15
  6c:	c0 ff       	sbrs	r28, 0
  6e:	00 c0       	rjmp	.+0      	; 0x70 <_ZN18HFA11xRS232WiFiCRC12processBytesEPhh+0x70>
  70:	80 81       	ld	r24, Z
  72:	f8 01       	movw	r30, r16
  74:	83 83       	std	Z+3, r24	; 0x03
  76:	81 e0       	ldi	r24, 0x01	; 1
  78:	85 83       	std	Z+5, r24	; 0x05
  7a:	cf 91       	pop	r28
  7c:	1f 91       	pop	r17
  7e:	0f 91       	pop	r16
  80:	ff 90       	pop	r15
  82:	ef 90       	pop	r14
  84:	df 90       	pop	r13

	//stream->write( lowByte );
	//stream->write( highByte );

	return stream->write( lowByte ) + stream->write( highByte ) == 2;
  86:	cf 90       	pop	r12
  88:	08 95       	ret

Disassembly of section .text._ZN18HFA11xRS232WiFiCRC13getCRCLowByteEj:

00000000 <_ZN18HFA11xRS232WiFiCRC13getCRCLowByteEj>:
}

// =================================================

bool HFA11xRS232WiFiCRC::writeCRCBytesToStream( Stream* stream )
{
   0:	86 2f       	mov	r24, r22
   2:	08 95       	ret

Disassembly of section .text._ZN18HFA11xRS232WiFiCRC14getCRCHighByteEj:

00000000 <_ZN18HFA11xRS232WiFiCRC14getCRCHighByteEj>:
   0:	87 2f       	mov	r24, r23
   2:	08 95       	ret

Disassembly of section .text._ZN18HFA11xRS232WiFiCRC9getCRCSumEv:

00000000 <_ZN18HFA11xRS232WiFiCRC9getCRCSumEv>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	fc 01       	movw	r30, r24
   e:	86 81       	ldd	r24, Z+6	; 0x06
	static const PROGMEM prog_char functionName[] = "writeCRCBytesToStream";

	unsigned int crcSum = getCRCSum();
  10:	97 81       	ldd	r25, Z+7	; 0x07
  12:	a0 85       	ldd	r26, Z+8	; 0x08
  14:	b1 85       	ldd	r27, Z+9	; 0x09
  16:	25 81       	ldd	r18, Z+5	; 0x05
	unsigned char highByte = getCRCHighByte( crcSum );
	unsigned char lowByte = getCRCLowByte( crcSum );

	aln( "writing to stream crc highByte = %u, lowByte = %u (in order: first LOW %u, then HIGH byte %u)" , highByte , lowByte , lowByte , highByte )
  18:	22 23       	and	r18, r18
  1a:	01 f0       	breq	.+0      	; 0x1c <_ZN18HFA11xRS232WiFiCRC9getCRCSumEv+0x1c>
  1c:	43 81       	ldd	r20, Z+3	; 0x03
  1e:	55 27       	eor	r21, r21
  20:	47 fd       	sbrc	r20, 7
  22:	50 95       	com	r21
  24:	65 2f       	mov	r22, r21
  26:	75 2f       	mov	r23, r21
  28:	84 0f       	add	r24, r20
  2a:	95 1f       	adc	r25, r21
  2c:	a6 1f       	adc	r26, r22
  2e:	b7 1f       	adc	r27, r23
  30:	ad 01       	movw	r20, r26
  32:	66 27       	eor	r22, r22
  34:	77 27       	eor	r23, r23
  36:	a0 70       	andi	r26, 0x00	; 0
  38:	b0 70       	andi	r27, 0x00	; 0
  3a:	84 0f       	add	r24, r20
  3c:	95 1f       	adc	r25, r21
  3e:	a6 1f       	adc	r26, r22
  40:	b7 1f       	adc	r27, r23
  42:	6d 01       	movw	r12, r26
  44:	ee 24       	eor	r14, r14
  46:	ff 24       	eor	r15, r15
  48:	c8 0e       	add	r12, r24
  4a:	d9 1e       	adc	r13, r25
  4c:	ea 1e       	adc	r14, r26
  4e:	fb 1e       	adc	r15, r27
  50:	e6 01       	movw	r28, r12
  52:	c0 95       	com	r28
  54:	d0 95       	com	r29
  56:	82 81       	ldd	r24, Z+2	; 0x02
  58:	8b 30       	cpi	r24, 0x0B	; 11
  5a:	00 f4       	brcc	.+0      	; 0x5c <_ZN18HFA11xRS232WiFiCRC9getCRCSumEv+0x5c>
  5c:	cf 01       	movw	r24, r30
  5e:	60 e0       	ldi	r22, 0x00	; 0
  60:	70 e0       	ldi	r23, 0x00	; 0
  62:	40 e0       	ldi	r20, 0x00	; 0
  64:	50 e0       	ldi	r21, 0x00	; 0
  66:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRC9getCRCSumEv>
  6a:	8d b7       	in	r24, 0x3d	; 61
  6c:	9e b7       	in	r25, 0x3e	; 62
  6e:	08 97       	sbiw	r24, 0x08	; 8
  70:	0f b6       	in	r0, 0x3f	; 63
  72:	f8 94       	cli
  74:	9e bf       	out	0x3e, r25	; 62
  76:	0f be       	out	0x3f, r0	; 63
  78:	8d bf       	out	0x3d, r24	; 61
  7a:	ed b7       	in	r30, 0x3d	; 61
  7c:	fe b7       	in	r31, 0x3e	; 62
  7e:	31 96       	adiw	r30, 0x01	; 1
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	ad b7       	in	r26, 0x3d	; 61

	//stream->write( lowByte );
	//stream->write( highByte );

	return stream->write( lowByte ) + stream->write( highByte ) == 2;
  86:	be b7       	in	r27, 0x3e	; 62
  88:	12 96       	adiw	r26, 0x02	; 2
  8a:	9c 93       	st	X, r25
  8c:	8e 93       	st	-X, r24
  8e:	11 97       	sbiw	r26, 0x01	; 1
  90:	d3 83       	std	Z+3, r29	; 0x03
  92:	c2 83       	std	Z+2, r28	; 0x02
  94:	c4 82       	std	Z+4, r12	; 0x04
  96:	d5 82       	std	Z+5, r13	; 0x05
  98:	e6 82       	std	Z+6, r14	; 0x06
  9a:	f7 82       	std	Z+7, r15	; 0x07
  9c:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRC9getCRCSumEv>
  a0:	ed b7       	in	r30, 0x3d	; 61
  a2:	fe b7       	in	r31, 0x3e	; 62
  a4:	36 96       	adiw	r30, 0x06	; 6
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	f8 94       	cli
  aa:	fe bf       	out	0x3e, r31	; 62
  ac:	0f be       	out	0x3f, r0	; 63
  ae:	ed bf       	out	0x3d, r30	; 61
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	92 83       	std	Z+2, r25	; 0x02
  b6:	81 83       	std	Z+1, r24	; 0x01
  b8:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRC9getCRCSumEv>
}
  bc:	0f 90       	pop	r0
  be:	0f 90       	pop	r0
  c0:	ce 01       	movw	r24, r28
  c2:	df 91       	pop	r29
  c4:	cf 91       	pop	r28
  c6:	ff 90       	pop	r15
  c8:	ef 90       	pop	r14
  ca:	df 90       	pop	r13
  cc:	cf 90       	pop	r12
  ce:	08 95       	ret

Disassembly of section .text._ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream:

00000000 <_ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream>:
}

// =================================================

bool HFA11xRS232WiFiCRC::writeCRCBytesToStream( Stream* stream )
{
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	7b 01       	movw	r14, r22
	static const PROGMEM prog_char functionName[] = "writeCRCBytesToStream";

	unsigned int crcSum = getCRCSum();
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream>
  14:	18 2f       	mov	r17, r24
  16:	09 2f       	mov	r16, r25
	unsigned char highByte = getCRCHighByte( crcSum );
	unsigned char lowByte = getCRCLowByte( crcSum );

	aln( "writing to stream crc highByte = %u, lowByte = %u (in order: first LOW %u, then HIGH byte %u)" , highByte , lowByte , lowByte , highByte )
  18:	8a 81       	ldd	r24, Y+2	; 0x02
  1a:	8b 30       	cpi	r24, 0x0B	; 11
  1c:	00 f4       	brcc	.+0      	; 0x1e <_ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream+0x1e>
  1e:	ce 01       	movw	r24, r28
  20:	60 e0       	ldi	r22, 0x00	; 0
  22:	70 e0       	ldi	r23, 0x00	; 0
  24:	40 e0       	ldi	r20, 0x00	; 0
  26:	50 e0       	ldi	r21, 0x00	; 0
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream>
  2c:	8d b7       	in	r24, 0x3d	; 61
  2e:	9e b7       	in	r25, 0x3e	; 62
  30:	0a 97       	sbiw	r24, 0x0a	; 10
  32:	0f b6       	in	r0, 0x3f	; 63
  34:	f8 94       	cli
  36:	9e bf       	out	0x3e, r25	; 62
  38:	0f be       	out	0x3f, r0	; 63
  3a:	8d bf       	out	0x3d, r24	; 61
  3c:	ed b7       	in	r30, 0x3d	; 61
  3e:	fe b7       	in	r31, 0x3e	; 62
  40:	31 96       	adiw	r30, 0x01	; 1
  42:	80 e0       	ldi	r24, 0x00	; 0
  44:	90 e0       	ldi	r25, 0x00	; 0
  46:	ad b7       	in	r26, 0x3d	; 61
  48:	be b7       	in	r27, 0x3e	; 62
  4a:	12 96       	adiw	r26, 0x02	; 2
  4c:	9c 93       	st	X, r25
  4e:	8e 93       	st	-X, r24
  50:	11 97       	sbiw	r26, 0x01	; 1
  52:	02 83       	std	Z+2, r16	; 0x02
  54:	13 82       	std	Z+3, r1	; 0x03
  56:	14 83       	std	Z+4, r17	; 0x04
  58:	15 82       	std	Z+5, r1	; 0x05
  5a:	16 83       	std	Z+6, r17	; 0x06
  5c:	17 82       	std	Z+7, r1	; 0x07
  5e:	00 87       	std	Z+8, r16	; 0x08
  60:	11 86       	std	Z+9, r1	; 0x09
  62:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream>
  66:	ed b7       	in	r30, 0x3d	; 61
  68:	fe b7       	in	r31, 0x3e	; 62
  6a:	38 96       	adiw	r30, 0x08	; 8
  6c:	0f b6       	in	r0, 0x3f	; 63
  6e:	f8 94       	cli
  70:	fe bf       	out	0x3e, r31	; 62
  72:	0f be       	out	0x3f, r0	; 63
  74:	ed bf       	out	0x3d, r30	; 61
  76:	80 e0       	ldi	r24, 0x00	; 0
  78:	90 e0       	ldi	r25, 0x00	; 0
  7a:	92 83       	std	Z+2, r25	; 0x02
  7c:	81 83       	std	Z+1, r24	; 0x01
  7e:	0e 94 00 00 	call	0	; 0x0 <_ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream>
  82:	0f 90       	pop	r0
  84:	0f 90       	pop	r0

	//stream->write( lowByte );
	//stream->write( highByte );

	return stream->write( lowByte ) + stream->write( highByte ) == 2;
  86:	d7 01       	movw	r26, r14
  88:	ed 91       	ld	r30, X+
  8a:	fc 91       	ld	r31, X
  8c:	01 90       	ld	r0, Z+
  8e:	f0 81       	ld	r31, Z
  90:	e0 2d       	mov	r30, r0
  92:	c7 01       	movw	r24, r14
  94:	61 2f       	mov	r22, r17
  96:	19 95       	eicall
  98:	ec 01       	movw	r28, r24
  9a:	d7 01       	movw	r26, r14
  9c:	ed 91       	ld	r30, X+
  9e:	fc 91       	ld	r31, X
  a0:	01 90       	ld	r0, Z+
  a2:	f0 81       	ld	r31, Z
  a4:	e0 2d       	mov	r30, r0
  a6:	c7 01       	movw	r24, r14
  a8:	60 2f       	mov	r22, r16
  aa:	19 95       	eicall
  ac:	c8 0f       	add	r28, r24
  ae:	d9 1f       	adc	r29, r25
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	c2 30       	cpi	r28, 0x02	; 2
  b4:	d1 05       	cpc	r29, r1
  b6:	01 f0       	breq	.+0      	; 0xb8 <_ZN18HFA11xRS232WiFiCRC21writeCRCBytesToStreamEP6Stream+0xb8>
  b8:	80 e0       	ldi	r24, 0x00	; 0
}
  ba:	df 91       	pop	r29
  bc:	cf 91       	pop	r28
  be:	1f 91       	pop	r17
  c0:	0f 91       	pop	r16
  c2:	ff 90       	pop	r15
  c4:	ef 90       	pop	r14
  c6:	08 95       	ret

RWCommandSerialNumber.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         000005d0  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00002d43  00000000  00000000  00000604  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN21RWCommandSerialNumberC2Ev 00000006  00000000  00000000  00003347  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text._ZN21RWCommandSerialNumberC2Ev:

00000000 <_ZN21RWCommandSerialNumberC1Ev>:

// =================================================

RWCommandSerialNumber::RWCommandSerialNumber()
{
	commandSerialNumber = 0;
   0:	fc 01       	movw	r30, r24
   2:	10 82       	st	Z, r1
}
   4:	08 95       	ret

RWStateMachine.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000007  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000003b  2**0
                  ALLOC
  3 .stab         00000b94  00000000  00000000  0000003c  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00004b83  00000000  00000000  00000bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN14RWStateMachine9goToStateEP9RWSubTask 00000086  00000000  00000000  00005753  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask 000001a4  00000000  00000000  000057d9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN14RWStateMachine3runEv 00000168  00000000  00000000  0000597d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN14RWStateMachineC2EP9AnyBufferIhhES2_P6Stream 000001b4  00000000  00000000  00005ae5  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN14RWStateMachine15doFullReadCycleEv 0000007a  00000000  00000000  00005c99  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN14RWStateMachine15doFullSendCycleEv 0000007a  00000000  00000000  00005d13  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .rodata._ZTV14RWStateMachine 00000006  00000000  00000000  00005d8d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .rodata._ZTV8Runnable 00000006  00000000  00000000  00005d93  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .progmem.data 000000e5  00000000  00000000  00005d99  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  00005e7e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN14RWStateMachine9goToStateEP9RWSubTask:

00000000 <_ZN14RWStateMachine9goToStateEP9RWSubTask>:
}

// =================================================

void RWStateMachine::doFullSendCycle()
{
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	8c 01       	movw	r16, r24
  12:	cb 01       	movw	r24, r22
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;
  14:	e8 01       	movw	r28, r16
  16:	c7 54       	subi	r28, 0x47	; 71
  18:	df 4f       	sbci	r29, 0xFF	; 255
  1a:	79 83       	std	Y+1, r23	; 0x01
  1c:	68 83       	st	Y, r22
  1e:	db 01       	movw	r26, r22
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  20:	ed 91       	ld	r30, X+
  22:	fc 91       	ld	r31, X
  24:	02 80       	ldd	r0, Z+2	; 0x02
  26:	f3 81       	ldd	r31, Z+3	; 0x03
  28:	e0 2d       	mov	r30, r0

	while( true )
	{
		if( !isCycleOpen )
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
  2a:	19 95       	eicall
  2c:	88 81       	ld	r24, Y
  2e:	99 81       	ldd	r25, Y+1	; 0x01
  30:	dc 01       	movw	r26, r24
  32:	ed 91       	ld	r30, X+

	bool isCycleOpen = false;

	while( true )
	{
		if( !isCycleOpen )
  34:	fc 91       	ld	r31, X
  36:	04 80       	ldd	r0, Z+4	; 0x04
	}
}

// =================================================

void RWStateMachine::doFullSendCycle()
  38:	f5 81       	ldd	r31, Z+5	; 0x05
  3a:	e0 2d       	mov	r30, r0
  3c:	19 95       	eicall
  3e:	6b 01       	movw	r12, r22
  40:	7c 01       	movw	r14, r24
  42:	e8 01       	movw	r28, r16
  44:	c5 54       	subi	r28, 0x45	; 69
  46:	df 4f       	sbci	r29, 0xFF	; 255
  48:	61 15       	cp	r22, r1
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  4a:	71 05       	cpc	r23, r1
  4c:	81 05       	cpc	r24, r1
  4e:	91 05       	cpc	r25, r1
  50:	01 f0       	breq	.+0      	; 0x52 <_ZN14RWStateMachine9goToStateEP9RWSubTask+0x52>
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine9goToStateEP9RWSubTask>
		}

		run();
  56:	dc 01       	movw	r26, r24
  58:	cb 01       	movw	r24, r22
  5a:	8c 0d       	add	r24, r12
  5c:	9d 1d       	adc	r25, r13
  5e:	ae 1d       	adc	r26, r14
  60:	bf 1d       	adc	r27, r15
  62:	88 83       	st	Y, r24
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;

	while( true )
  64:	99 83       	std	Y+1, r25	; 0x01
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
		}

		run();
	}
}
  66:	aa 83       	std	Y+2, r26	; 0x02
  68:	bb 83       	std	Y+3, r27	; 0x03
  6a:	00 c0       	rjmp	.+0      	; 0x6c <_ZN14RWStateMachine9goToStateEP9RWSubTask+0x6c>
  6c:	18 82       	st	Y, r1
  6e:	19 82       	std	Y+1, r1	; 0x01
  70:	1a 82       	std	Y+2, r1	; 0x02
  72:	1b 82       	std	Y+3, r1	; 0x03
  74:	df 91       	pop	r29
  76:	cf 91       	pop	r28
  78:	1f 91       	pop	r17
  7a:	0f 91       	pop	r16
  7c:	ff 90       	pop	r15
  7e:	ef 90       	pop	r14
  80:	df 90       	pop	r13
  82:	cf 90       	pop	r12
  84:	08 95       	ret

Disassembly of section .text._ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask:

00000000 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask>:
}

// =================================================

void RWStateMachine::doFullSendCycle()
{
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;
  14:	ec 01       	movw	r28, r24
  16:	8b 01       	movw	r16, r22
  18:	8c 81       	ldd	r24, Y+4	; 0x04
  1a:	8b 30       	cpi	r24, 0x0B	; 11
  1c:	00 f4       	brcc	.+0      	; 0x1e <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0x1e>
  1e:	ce 01       	movw	r24, r28
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  20:	02 96       	adiw	r24, 0x02	; 2
  22:	60 e0       	ldi	r22, 0x00	; 0
  24:	70 e0       	ldi	r23, 0x00	; 0
  26:	40 e0       	ldi	r20, 0x00	; 0
  28:	50 e0       	ldi	r21, 0x00	; 0

	while( true )
	{
		if( !isCycleOpen )
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
  2a:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask>
  2e:	fe 01       	movw	r30, r28
  30:	e7 54       	subi	r30, 0x47	; 71
  32:	ff 4f       	sbci	r31, 0xFF	; 255

	bool isCycleOpen = false;

	while( true )
	{
		if( !isCycleOpen )
  34:	80 81       	ld	r24, Z
  36:	91 81       	ldd	r25, Z+1	; 0x01
	}
}

// =================================================

void RWStateMachine::doFullSendCycle()
  38:	dc 01       	movw	r26, r24
  3a:	ed 91       	ld	r30, X+
  3c:	fc 91       	ld	r31, X
  3e:	01 90       	ld	r0, Z+
  40:	f0 81       	ld	r31, Z
  42:	e0 2d       	mov	r30, r0
  44:	19 95       	eicall
  46:	6c 01       	movw	r12, r24
  48:	d8 01       	movw	r26, r16
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  4a:	ed 91       	ld	r30, X+
  4c:	fc 91       	ld	r31, X
  4e:	01 90       	ld	r0, Z+
  50:	f0 81       	ld	r31, Z
  52:	e0 2d       	mov	r30, r0
  54:	c8 01       	movw	r24, r16
		}

		run();
  56:	19 95       	eicall
  58:	00 d0       	rcall	.+0      	; 0x5a <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0x5a>
  5a:	00 d0       	rcall	.+0      	; 0x5c <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0x5c>
  5c:	ed b7       	in	r30, 0x3d	; 61
  5e:	fe b7       	in	r31, 0x3e	; 62
  60:	31 96       	adiw	r30, 0x01	; 1
  62:	20 e0       	ldi	r18, 0x00	; 0
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;

	while( true )
  64:	30 e0       	ldi	r19, 0x00	; 0
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
		}

		run();
	}
}
  66:	ad b7       	in	r26, 0x3d	; 61
  68:	be b7       	in	r27, 0x3e	; 62
  6a:	12 96       	adiw	r26, 0x02	; 2
  6c:	3c 93       	st	X, r19
  6e:	2e 93       	st	-X, r18
  70:	11 97       	sbiw	r26, 0x01	; 1
  72:	d3 82       	std	Z+3, r13	; 0x03
  74:	c2 82       	std	Z+2, r12	; 0x02
  76:	95 83       	std	Z+5, r25	; 0x05
  78:	84 83       	std	Z+4, r24	; 0x04
  7a:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask>
  7e:	0f 90       	pop	r0
  80:	0f 90       	pop	r0
  82:	0f 90       	pop	r0
  84:	0f 90       	pop	r0
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	ed b7       	in	r30, 0x3d	; 61
  8c:	fe b7       	in	r31, 0x3e	; 62
  8e:	92 83       	std	Z+2, r25	; 0x02
  90:	81 83       	std	Z+1, r24	; 0x01
  92:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask>
  96:	0f 90       	pop	r0
  98:	0f 90       	pop	r0
  9a:	ce 01       	movw	r24, r28
  9c:	b8 01       	movw	r22, r16
  9e:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask>
  a2:	fe 01       	movw	r30, r28
  a4:	e5 54       	subi	r30, 0x45	; 69
  a6:	ff 4f       	sbci	r31, 0xFF	; 255
  a8:	80 81       	ld	r24, Z
  aa:	91 81       	ldd	r25, Z+1	; 0x01
  ac:	a2 81       	ldd	r26, Z+2	; 0x02
  ae:	b3 81       	ldd	r27, Z+3	; 0x03
  b0:	00 97       	sbiw	r24, 0x00	; 0
  b2:	a1 05       	cpc	r26, r1
  b4:	b1 05       	cpc	r27, r1
  b6:	01 f4       	brne	.+0      	; 0xb8 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0xb8>
  b8:	00 c0       	rjmp	.+0      	; 0xba <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0xba>
  ba:	8e 01       	movw	r16, r28
  bc:	07 54       	subi	r16, 0x47	; 71
  be:	1f 4f       	sbci	r17, 0xFF	; 255
  c0:	d8 01       	movw	r26, r16
  c2:	8d 91       	ld	r24, X+
  c4:	9c 91       	ld	r25, X
  c6:	dc 01       	movw	r26, r24
  c8:	ed 91       	ld	r30, X+
  ca:	fc 91       	ld	r31, X
  cc:	06 80       	ldd	r0, Z+6	; 0x06
  ce:	f7 81       	ldd	r31, Z+7	; 0x07
  d0:	e0 2d       	mov	r30, r0
  d2:	19 95       	eicall
  d4:	5c 01       	movw	r10, r24
  d6:	8c 81       	ldd	r24, Y+4	; 0x04
  d8:	8b 30       	cpi	r24, 0x0B	; 11
  da:	00 f0       	brcs	.+0      	; 0xdc <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0xdc>
  dc:	00 c0       	rjmp	.+0      	; 0xde <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0xde>
  de:	ce 01       	movw	r24, r28
  e0:	02 96       	adiw	r24, 0x02	; 2
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	40 e0       	ldi	r20, 0x00	; 0
  e8:	50 e0       	ldi	r21, 0x00	; 0
  ea:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask>
  ee:	f8 01       	movw	r30, r16
  f0:	80 81       	ld	r24, Z
  f2:	91 81       	ldd	r25, Z+1	; 0x01
  f4:	dc 01       	movw	r26, r24
  f6:	ed 91       	ld	r30, X+
  f8:	fc 91       	ld	r31, X
  fa:	01 90       	ld	r0, Z+
  fc:	f0 81       	ld	r31, Z
  fe:	e0 2d       	mov	r30, r0
 100:	19 95       	eicall
 102:	ec 01       	movw	r28, r24
 104:	f8 01       	movw	r30, r16
 106:	80 81       	ld	r24, Z
 108:	91 81       	ldd	r25, Z+1	; 0x01
 10a:	dc 01       	movw	r26, r24
 10c:	ed 91       	ld	r30, X+
 10e:	fc 91       	ld	r31, X
 110:	04 80       	ldd	r0, Z+4	; 0x04
 112:	f5 81       	ldd	r31, Z+5	; 0x05
 114:	e0 2d       	mov	r30, r0
 116:	19 95       	eicall
 118:	6b 01       	movw	r12, r22
 11a:	7c 01       	movw	r14, r24
 11c:	a1 14       	cp	r10, r1
 11e:	b1 04       	cpc	r11, r1
 120:	01 f0       	breq	.+0      	; 0x122 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0x122>
 122:	d5 01       	movw	r26, r10
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	01 90       	ld	r0, Z+
 12a:	f0 81       	ld	r31, Z
 12c:	e0 2d       	mov	r30, r0
 12e:	c5 01       	movw	r24, r10
 130:	19 95       	eicall
 132:	00 c0       	rjmp	.+0      	; 0x134 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask+0x134>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	ed b7       	in	r30, 0x3d	; 61
 13a:	fe b7       	in	r31, 0x3e	; 62
 13c:	3a 97       	sbiw	r30, 0x0a	; 10
 13e:	0f b6       	in	r0, 0x3f	; 63
 140:	f8 94       	cli
 142:	fe bf       	out	0x3e, r31	; 62
 144:	0f be       	out	0x3f, r0	; 63
 146:	ed bf       	out	0x3d, r30	; 61
 148:	31 96       	adiw	r30, 0x01	; 1
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	ad b7       	in	r26, 0x3d	; 61
 150:	be b7       	in	r27, 0x3e	; 62
 152:	12 96       	adiw	r26, 0x02	; 2
 154:	3c 93       	st	X, r19
 156:	2e 93       	st	-X, r18
 158:	11 97       	sbiw	r26, 0x01	; 1
 15a:	d3 83       	std	Z+3, r29	; 0x03
 15c:	c2 83       	std	Z+2, r28	; 0x02
 15e:	c4 82       	std	Z+4, r12	; 0x04
 160:	d5 82       	std	Z+5, r13	; 0x05
 162:	e6 82       	std	Z+6, r14	; 0x06
 164:	f7 82       	std	Z+7, r15	; 0x07
 166:	91 87       	std	Z+9, r25	; 0x09
 168:	80 87       	std	Z+8, r24	; 0x08
 16a:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask>
 16e:	ed b7       	in	r30, 0x3d	; 61
 170:	fe b7       	in	r31, 0x3e	; 62
 172:	38 96       	adiw	r30, 0x08	; 8
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	f8 94       	cli
 178:	fe bf       	out	0x3e, r31	; 62
 17a:	0f be       	out	0x3f, r0	; 63
 17c:	ed bf       	out	0x3d, r30	; 61
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	92 83       	std	Z+2, r25	; 0x02
 184:	81 83       	std	Z+1, r24	; 0x01
 186:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine20goToStateWithVerboseEP9RWSubTask>
 18a:	0f 90       	pop	r0
 18c:	0f 90       	pop	r0
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	1f 91       	pop	r17
 194:	0f 91       	pop	r16
 196:	ff 90       	pop	r15
 198:	ef 90       	pop	r14
 19a:	df 90       	pop	r13
 19c:	cf 90       	pop	r12
 19e:	bf 90       	pop	r11
 1a0:	af 90       	pop	r10
 1a2:	08 95       	ret

Disassembly of section .text._ZN14RWStateMachine3runEv:

00000000 <_ZN14RWStateMachine3runEv>:
}

// =================================================

void RWStateMachine::doFullSendCycle()
{
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	ec 01       	movw	r28, r24
   c:	c5 54       	subi	r28, 0x45	; 69
   e:	df 4f       	sbci	r29, 0xFF	; 255
  10:	88 81       	ld	r24, Y
  12:	99 81       	ldd	r25, Y+1	; 0x01
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;
  14:	aa 81       	ldd	r26, Y+2	; 0x02
  16:	bb 81       	ldd	r27, Y+3	; 0x03
  18:	00 97       	sbiw	r24, 0x00	; 0
  1a:	a1 05       	cpc	r26, r1
  1c:	b1 05       	cpc	r27, r1
  1e:	01 f4       	brne	.+0      	; 0x20 <_ZN14RWStateMachine3runEv+0x20>
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  20:	00 c0       	rjmp	.+0      	; 0x22 <_ZN14RWStateMachine3runEv+0x22>
  22:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine3runEv>
  26:	dc 01       	movw	r26, r24
  28:	cb 01       	movw	r24, r22

	while( true )
	{
		if( !isCycleOpen )
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
  2a:	48 81       	ld	r20, Y
  2c:	59 81       	ldd	r21, Y+1	; 0x01
  2e:	6a 81       	ldd	r22, Y+2	; 0x02
  30:	7b 81       	ldd	r23, Y+3	; 0x03
  32:	84 17       	cp	r24, r20

	bool isCycleOpen = false;

	while( true )
	{
		if( !isCycleOpen )
  34:	95 07       	cpc	r25, r21
  36:	a6 07       	cpc	r26, r22
	}
}

// =================================================

void RWStateMachine::doFullSendCycle()
  38:	b7 07       	cpc	r27, r23
  3a:	00 f4       	brcc	.+0      	; 0x3c <_ZN14RWStateMachine3runEv+0x3c>
  3c:	00 c0       	rjmp	.+0      	; 0x3e <_ZN14RWStateMachine3runEv+0x3e>
  3e:	d8 01       	movw	r26, r16
  40:	14 96       	adiw	r26, 0x04	; 4
  42:	8c 91       	ld	r24, X
  44:	14 97       	sbiw	r26, 0x04	; 4
  46:	8f 31       	cpi	r24, 0x1F	; 31
  48:	00 f4       	brcc	.+0      	; 0x4a <_ZN14RWStateMachine3runEv+0x4a>
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  4a:	c8 01       	movw	r24, r16
  4c:	02 96       	adiw	r24, 0x02	; 2
  4e:	60 e0       	ldi	r22, 0x00	; 0
  50:	70 e0       	ldi	r23, 0x00	; 0
  52:	40 e0       	ldi	r20, 0x00	; 0
  54:	50 e0       	ldi	r21, 0x00	; 0
		}

		run();
  56:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine3runEv>
  5a:	f8 01       	movw	r30, r16
  5c:	e7 54       	subi	r30, 0x47	; 71
  5e:	ff 4f       	sbci	r31, 0xFF	; 255
  60:	80 81       	ld	r24, Z
  62:	91 81       	ldd	r25, Z+1	; 0x01
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;

	while( true )
  64:	dc 01       	movw	r26, r24
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
		}

		run();
	}
}
  66:	ed 91       	ld	r30, X+
  68:	fc 91       	ld	r31, X
  6a:	01 90       	ld	r0, Z+
  6c:	f0 81       	ld	r31, Z
  6e:	e0 2d       	mov	r30, r0
  70:	19 95       	eicall
  72:	00 d0       	rcall	.+0      	; 0x74 <_ZN14RWStateMachine3runEv+0x74>
  74:	0f 92       	push	r0
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	30 e0       	ldi	r19, 0x00	; 0
  7a:	ed b7       	in	r30, 0x3d	; 61
  7c:	fe b7       	in	r31, 0x3e	; 62
  7e:	32 83       	std	Z+2, r19	; 0x02
  80:	21 83       	std	Z+1, r18	; 0x01
  82:	94 83       	std	Z+4, r25	; 0x04
  84:	83 83       	std	Z+3, r24	; 0x03
  86:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine3runEv>
  8a:	0f 90       	pop	r0
  8c:	0f 90       	pop	r0
  8e:	80 e0       	ldi	r24, 0x00	; 0
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	ad b7       	in	r26, 0x3d	; 61
  94:	be b7       	in	r27, 0x3e	; 62
  96:	12 96       	adiw	r26, 0x02	; 2
  98:	9c 93       	st	X, r25
  9a:	8e 93       	st	-X, r24
  9c:	11 97       	sbiw	r26, 0x01	; 1
  9e:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine3runEv>
  a2:	0f 90       	pop	r0
  a4:	0f 90       	pop	r0
  a6:	f8 01       	movw	r30, r16
  a8:	e7 54       	subi	r30, 0x47	; 71
  aa:	ff 4f       	sbci	r31, 0xFF	; 255
  ac:	80 81       	ld	r24, Z
  ae:	91 81       	ldd	r25, Z+1	; 0x01
  b0:	dc 01       	movw	r26, r24
  b2:	ed 91       	ld	r30, X+
  b4:	fc 91       	ld	r31, X
  b6:	06 80       	ldd	r0, Z+6	; 0x06
  b8:	f7 81       	ldd	r31, Z+7	; 0x07
  ba:	e0 2d       	mov	r30, r0
  bc:	19 95       	eicall
  be:	bc 01       	movw	r22, r24
  c0:	00 97       	sbiw	r24, 0x00	; 0
  c2:	01 f0       	breq	.+0      	; 0xc4 <_ZN14RWStateMachine3runEv+0xc4>
  c4:	c8 01       	movw	r24, r16
  c6:	8b 96       	adiw	r24, 0x2b	; 43
  c8:	68 17       	cp	r22, r24
  ca:	79 07       	cpc	r23, r25
  cc:	01 f4       	brne	.+0      	; 0xce <_ZN14RWStateMachine3runEv+0xce>
  ce:	b8 01       	movw	r22, r16
  d0:	62 55       	subi	r22, 0x52	; 82
  d2:	7f 4f       	sbci	r23, 0xFF	; 255
  d4:	c8 01       	movw	r24, r16
  d6:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine3runEv>
  da:	00 c0       	rjmp	.+0      	; 0xdc <_ZN14RWStateMachine3runEv+0xdc>
  dc:	f8 01       	movw	r30, r16
  de:	84 81       	ldd	r24, Z+4	; 0x04
  e0:	8b 30       	cpi	r24, 0x0B	; 11
  e2:	00 f4       	brcc	.+0      	; 0xe4 <_ZN14RWStateMachine3runEv+0xe4>
  e4:	c8 01       	movw	r24, r16
  e6:	02 96       	adiw	r24, 0x02	; 2
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	40 e0       	ldi	r20, 0x00	; 0
  ee:	50 e0       	ldi	r21, 0x00	; 0
  f0:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine3runEv>
  f4:	88 81       	ld	r24, Y
  f6:	99 81       	ldd	r25, Y+1	; 0x01
  f8:	dc 01       	movw	r26, r24
  fa:	ed 91       	ld	r30, X+
  fc:	fc 91       	ld	r31, X
  fe:	01 90       	ld	r0, Z+
 100:	f0 81       	ld	r31, Z
 102:	e0 2d       	mov	r30, r0
 104:	19 95       	eicall
 106:	00 d0       	rcall	.+0      	; 0x108 <_ZN14RWStateMachine3runEv+0x108>
 108:	0f 92       	push	r0
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	ed b7       	in	r30, 0x3d	; 61
 110:	fe b7       	in	r31, 0x3e	; 62
 112:	32 83       	std	Z+2, r19	; 0x02
 114:	21 83       	std	Z+1, r18	; 0x01
 116:	94 83       	std	Z+4, r25	; 0x04
 118:	83 83       	std	Z+3, r24	; 0x03
 11a:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine3runEv>
 11e:	0f 90       	pop	r0
 120:	0f 90       	pop	r0
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	ad b7       	in	r26, 0x3d	; 61
 128:	be b7       	in	r27, 0x3e	; 62
 12a:	12 96       	adiw	r26, 0x02	; 2
 12c:	9c 93       	st	X, r25
 12e:	8e 93       	st	-X, r24
 130:	11 97       	sbiw	r26, 0x01	; 1
 132:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachine3runEv>
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	00 c0       	rjmp	.+0      	; 0x13c <_ZN14RWStateMachine3runEv+0x13c>
 13c:	e8 01       	movw	r28, r16
 13e:	c7 54       	subi	r28, 0x47	; 71
 140:	df 4f       	sbci	r29, 0xFF	; 255
 142:	88 81       	ld	r24, Y
 144:	99 81       	ldd	r25, Y+1	; 0x01
 146:	dc 01       	movw	r26, r24
 148:	ed 91       	ld	r30, X+
 14a:	fc 91       	ld	r31, X
 14c:	00 84       	ldd	r0, Z+8	; 0x08
 14e:	f1 85       	ldd	r31, Z+9	; 0x09
 150:	e0 2d       	mov	r30, r0
 152:	19 95       	eicall
 154:	bc 01       	movw	r22, r24
 156:	00 97       	sbiw	r24, 0x00	; 0
 158:	01 f0       	breq	.+0      	; 0x15a <_ZN14RWStateMachine3runEv+0x15a>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <_ZN14RWStateMachine3runEv+0x15c>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <_ZN14RWStateMachine3runEv+0x15e>
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	1f 91       	pop	r17
 164:	0f 91       	pop	r16
 166:	08 95       	ret

Disassembly of section .text._ZN14RWStateMachineC2EP9AnyBufferIhhES2_P6Stream:

00000000 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>:
}

// =================================================

void RWStateMachine::doFullSendCycle()
{
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
  1e:	1f 93       	push	r17
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	cd b7       	in	r28, 0x3d	; 61
  26:	de b7       	in	r29, 0x3e	; 62
  28:	28 97       	sbiw	r28, 0x08	; 8

	while( true )
	{
		if( !isCycleOpen )
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
  2a:	0f b6       	in	r0, 0x3f	; 63
  2c:	f8 94       	cli
  2e:	de bf       	out	0x3e, r29	; 62
  30:	0f be       	out	0x3f, r0	; 63
  32:	cd bf       	out	0x3d, r28	; 61

	bool isCycleOpen = false;

	while( true )
	{
		if( !isCycleOpen )
  34:	5c 01       	movw	r10, r24
  36:	7c 83       	std	Y+4, r23	; 0x04
	}
}

// =================================================

void RWStateMachine::doFullSendCycle()
  38:	6b 83       	std	Y+3, r22	; 0x03
  3a:	5e 83       	std	Y+6, r21	; 0x06
  3c:	4d 83       	std	Y+5, r20	; 0x05
  3e:	89 01       	movw	r16, r18
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	30 e0       	ldi	r19, 0x00	; 0
  44:	fc 01       	movw	r30, r24
  46:	21 93       	st	Z+, r18
  48:	31 93       	st	Z+, r19
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  4a:	cf 01       	movw	r24, r30
  4c:	60 e0       	ldi	r22, 0x00	; 0
  4e:	70 e0       	ldi	r23, 0x00	; 0
  50:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
  54:	a5 e0       	ldi	r26, 0x05	; 5
		}

		run();
  56:	2a 2e       	mov	r2, r26
  58:	31 2c       	mov	r3, r1
  5a:	2a 0c       	add	r2, r10
  5c:	3b 1c       	adc	r3, r11
  5e:	c1 01       	movw	r24, r2
  60:	b8 01       	movw	r22, r16
  62:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
	}
}
  66:	c5 01       	movw	r24, r10
  68:	8a 96       	adiw	r24, 0x2a	; 42
  6a:	9a 83       	std	Y+2, r25	; 0x02
  6c:	89 83       	std	Y+1, r24	; 0x01
  6e:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
  72:	80 e0       	ldi	r24, 0x00	; 0
  74:	90 e0       	ldi	r25, 0x00	; 0
  76:	f5 01       	movw	r30, r10
  78:	94 a7       	std	Z+44, r25	; 0x2c
  7a:	83 a7       	std	Z+43, r24	; 0x2b
  7c:	bd e2       	ldi	r27, 0x2D	; 45
  7e:	6b 2e       	mov	r6, r27
  80:	71 2c       	mov	r7, r1
  82:	6a 0c       	add	r6, r10
  84:	7b 1c       	adc	r7, r11
  86:	c3 01       	movw	r24, r6
  88:	b8 01       	movw	r22, r16
  8a:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
  8e:	ae e3       	ldi	r26, 0x3E	; 62
  90:	8a 2e       	mov	r8, r26
  92:	91 2c       	mov	r9, r1
  94:	8a 0c       	add	r8, r10
  96:	9b 1c       	adc	r9, r11
  98:	bb e2       	ldi	r27, 0x2B	; 43
  9a:	4b 2e       	mov	r4, r27
  9c:	51 2c       	mov	r5, r1
  9e:	4a 0c       	add	r4, r10
  a0:	5b 1c       	adc	r5, r11
  a2:	c4 01       	movw	r24, r8
  a4:	6d 81       	ldd	r22, Y+5	; 0x05
  a6:	7e 81       	ldd	r23, Y+6	; 0x06
  a8:	a1 01       	movw	r20, r2
  aa:	29 81       	ldd	r18, Y+1	; 0x01
  ac:	3a 81       	ldd	r19, Y+2	; 0x02
  ae:	82 01       	movw	r16, r4
  b0:	72 01       	movw	r14, r4
  b2:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
  b6:	c5 01       	movw	r24, r10
  b8:	80 5b       	subi	r24, 0xB0	; 176
  ba:	9f 4f       	sbci	r25, 0xFF	; 255
  bc:	98 87       	std	Y+8, r25	; 0x08
  be:	8f 83       	std	Y+7, r24	; 0x07
  c0:	6d 81       	ldd	r22, Y+5	; 0x05
  c2:	7e 81       	ldd	r23, Y+6	; 0x06
  c4:	a1 01       	movw	r20, r2
  c6:	29 81       	ldd	r18, Y+1	; 0x01
  c8:	3a 81       	ldd	r19, Y+2	; 0x02
  ca:	83 01       	movw	r16, r6
  cc:	74 01       	movw	r14, r8
  ce:	62 01       	movw	r12, r4
  d0:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
  d4:	a9 e6       	ldi	r26, 0x69	; 105
  d6:	8a 2e       	mov	r8, r26
  d8:	91 2c       	mov	r9, r1
  da:	8a 0c       	add	r8, r10
  dc:	9b 1c       	adc	r9, r11
  de:	c4 01       	movw	r24, r8
  e0:	6d 81       	ldd	r22, Y+5	; 0x05
  e2:	7e 81       	ldd	r23, Y+6	; 0x06
  e4:	4f 81       	ldd	r20, Y+7	; 0x07
  e6:	58 85       	ldd	r21, Y+8	; 0x08
  e8:	92 01       	movw	r18, r4
  ea:	0f e0       	ldi	r16, 0x0F	; 15
  ec:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
  f0:	b5 e7       	ldi	r27, 0x75	; 117
  f2:	cb 2e       	mov	r12, r27
  f4:	d1 2c       	mov	r13, r1
  f6:	ca 0c       	add	r12, r10
  f8:	db 1c       	adc	r13, r11
  fa:	c6 01       	movw	r24, r12
  fc:	6b 81       	ldd	r22, Y+3	; 0x03
  fe:	7c 81       	ldd	r23, Y+4	; 0x04
 100:	a1 01       	movw	r20, r2
 102:	29 81       	ldd	r18, Y+1	; 0x01
 104:	3a 81       	ldd	r19, Y+2	; 0x02
 106:	84 01       	movw	r16, r8
 108:	74 01       	movw	r14, r8
 10a:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
 10e:	a6 e8       	ldi	r26, 0x86	; 134
 110:	4a 2e       	mov	r4, r26
 112:	51 2c       	mov	r5, r1
 114:	4a 0c       	add	r4, r10
 116:	5b 1c       	adc	r5, r11
 118:	c2 01       	movw	r24, r4
 11a:	6b 81       	ldd	r22, Y+3	; 0x03
 11c:	7c 81       	ldd	r23, Y+4	; 0x04
 11e:	a1 01       	movw	r20, r2
 120:	29 81       	ldd	r18, Y+1	; 0x01
 122:	3a 81       	ldd	r19, Y+2	; 0x02
 124:	83 01       	movw	r16, r6
 126:	76 01       	movw	r14, r12
 128:	64 01       	movw	r12, r8
 12a:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
 12e:	f5 01       	movw	r30, r10
 130:	e9 56       	subi	r30, 0x69	; 105
 132:	ff 4f       	sbci	r31, 0xFF	; 255
 134:	f8 87       	std	Y+8, r31	; 0x08
 136:	ef 83       	std	Y+7, r30	; 0x07
 138:	cf 01       	movw	r24, r30
 13a:	6b 81       	ldd	r22, Y+3	; 0x03
 13c:	7c 81       	ldd	r23, Y+4	; 0x04
 13e:	a1 01       	movw	r20, r2
 140:	29 81       	ldd	r18, Y+1	; 0x01
 142:	3a 81       	ldd	r19, Y+2	; 0x02
 144:	72 01       	movw	r14, r4
 146:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
 14a:	85 01       	movw	r16, r10
 14c:	02 55       	subi	r16, 0x52	; 82
 14e:	1f 4f       	sbci	r17, 0xFF	; 255
 150:	c8 01       	movw	r24, r16
 152:	6b 81       	ldd	r22, Y+3	; 0x03
 154:	7c 81       	ldd	r23, Y+4	; 0x04
 156:	4f 81       	ldd	r20, Y+7	; 0x07
 158:	58 85       	ldd	r21, Y+8	; 0x08
 15a:	94 01       	movw	r18, r8
 15c:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
 160:	eb 81       	ldd	r30, Y+3	; 0x03
 162:	fc 81       	ldd	r31, Y+4	; 0x04
 164:	14 82       	std	Z+4, r1	; 0x04
 166:	13 82       	std	Z+3, r1	; 0x03
 168:	ed 81       	ldd	r30, Y+5	; 0x05
 16a:	fe 81       	ldd	r31, Y+6	; 0x06
 16c:	14 82       	std	Z+4, r1	; 0x04
 16e:	13 82       	std	Z+3, r1	; 0x03
 170:	f5 01       	movw	r30, r10
 172:	e7 54       	subi	r30, 0x47	; 71
 174:	ff 4f       	sbci	r31, 0xFF	; 255
 176:	11 83       	std	Z+1, r17	; 0x01
 178:	00 83       	st	Z, r16
 17a:	c5 01       	movw	r24, r10
 17c:	b8 01       	movw	r22, r16
 17e:	0e 94 00 00 	call	0	; 0x0 <_ZN14RWStateMachineC1EP9AnyBufferIhhES2_P6Stream>
 182:	28 96       	adiw	r28, 0x08	; 8
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	f8 94       	cli
 188:	de bf       	out	0x3e, r29	; 62
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	cd bf       	out	0x3d, r28	; 61
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	1f 91       	pop	r17
 194:	0f 91       	pop	r16
 196:	ff 90       	pop	r15
 198:	ef 90       	pop	r14
 19a:	df 90       	pop	r13
 19c:	cf 90       	pop	r12
 19e:	bf 90       	pop	r11
 1a0:	af 90       	pop	r10
 1a2:	9f 90       	pop	r9
 1a4:	8f 90       	pop	r8
 1a6:	7f 90       	pop	r7
 1a8:	6f 90       	pop	r6
 1aa:	5f 90       	pop	r5
 1ac:	4f 90       	pop	r4
 1ae:	3f 90       	pop	r3
 1b0:	2f 90       	pop	r2
 1b2:	08 95       	ret

Disassembly of section .text._ZN14RWStateMachine15doFullReadCycleEv:

00000000 <_ZN14RWStateMachine15doFullReadCycleEv>:
}

// =================================================

void RWStateMachine::doFullSendCycle()
{
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	1f 93       	push	r17
   e:	cf 93       	push	r28
  10:	df 93       	push	r29
  12:	ec 01       	movw	r28, r24
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;
  14:	10 e0       	ldi	r17, 0x00	; 0
  16:	b9 eb       	ldi	r27, 0xB9	; 185
  18:	eb 2e       	mov	r14, r27
  1a:	f1 2c       	mov	r15, r1
  1c:	e8 0e       	add	r14, r24
  1e:	f9 1e       	adc	r15, r25
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  20:	29 e6       	ldi	r18, 0x69	; 105
  22:	c2 2e       	mov	r12, r18
  24:	d1 2c       	mov	r13, r1
  26:	c8 0e       	add	r12, r24
  28:	d9 1e       	adc	r13, r25

	while( true )
	{
		if( !isCycleOpen )
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
  2a:	3e ea       	ldi	r19, 0xAE	; 174
  2c:	a3 2e       	mov	r10, r19
  2e:	b1 2c       	mov	r11, r1
  30:	a8 0e       	add	r10, r24
  32:	b9 1e       	adc	r11, r25

	bool isCycleOpen = false;

	while( true )
	{
		if( !isCycleOpen )
  34:	11 23       	and	r17, r17
  36:	01 f4       	brne	.+0      	; 0x38 <_ZN14RWStateMachine15doFullReadCycleEv+0x38>
	}
}

// =================================================

void RWStateMachine::doFullSendCycle()
  38:	11 e0       	ldi	r17, 0x01	; 1
  3a:	f7 01       	movw	r30, r14
  3c:	80 81       	ld	r24, Z
  3e:	91 81       	ldd	r25, Z+1	; 0x01
  40:	8a 15       	cp	r24, r10
  42:	9b 05       	cpc	r25, r11
  44:	01 f0       	breq	.+0      	; 0x46 <_ZN14RWStateMachine15doFullReadCycleEv+0x46>
  46:	10 e0       	ldi	r17, 0x00	; 0
  48:	00 c0       	rjmp	.+0      	; 0x4a <_ZN14RWStateMachine15doFullReadCycleEv+0x4a>
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  4a:	f7 01       	movw	r30, r14
  4c:	80 81       	ld	r24, Z
  4e:	91 81       	ldd	r25, Z+1	; 0x01
  50:	8c 15       	cp	r24, r12
  52:	9d 05       	cpc	r25, r13
  54:	01 f0       	breq	.+0      	; 0x56 <_ZN14RWStateMachine15doFullReadCycleEv+0x56>
		}

		run();
  56:	e8 81       	ld	r30, Y
  58:	f9 81       	ldd	r31, Y+1	; 0x01
  5a:	01 90       	ld	r0, Z+
  5c:	f0 81       	ld	r31, Z
  5e:	e0 2d       	mov	r30, r0
  60:	ce 01       	movw	r24, r28
  62:	19 95       	eicall
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;

	while( true )
  64:	00 c0       	rjmp	.+0      	; 0x66 <_ZN14RWStateMachine15doFullReadCycleEv+0x66>
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
		}

		run();
	}
}
  66:	df 91       	pop	r29
  68:	cf 91       	pop	r28
  6a:	1f 91       	pop	r17
  6c:	ff 90       	pop	r15
  6e:	ef 90       	pop	r14
  70:	df 90       	pop	r13
  72:	cf 90       	pop	r12
  74:	bf 90       	pop	r11
  76:	af 90       	pop	r10
  78:	08 95       	ret

Disassembly of section .text._ZN14RWStateMachine15doFullSendCycleEv:

00000000 <_ZN14RWStateMachine15doFullSendCycleEv>:
}

// =================================================

void RWStateMachine::doFullSendCycle()
{
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	1f 93       	push	r17
   e:	cf 93       	push	r28
  10:	df 93       	push	r29
  12:	ec 01       	movw	r28, r24
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;
  14:	10 e0       	ldi	r17, 0x00	; 0
  16:	49 eb       	ldi	r20, 0xB9	; 185
  18:	e4 2e       	mov	r14, r20
  1a:	f1 2c       	mov	r15, r1
  1c:	e8 0e       	add	r14, r24
  1e:	f9 1e       	adc	r15, r25
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  20:	5e ea       	ldi	r21, 0xAE	; 174
  22:	c5 2e       	mov	r12, r21
  24:	d1 2c       	mov	r13, r1
  26:	c8 0e       	add	r12, r24
  28:	d9 1e       	adc	r13, r25

	while( true )
	{
		if( !isCycleOpen )
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
  2a:	69 e6       	ldi	r22, 0x69	; 105
  2c:	a6 2e       	mov	r10, r22
  2e:	b1 2c       	mov	r11, r1
  30:	a8 0e       	add	r10, r24
  32:	b9 1e       	adc	r11, r25

	bool isCycleOpen = false;

	while( true )
	{
		if( !isCycleOpen )
  34:	11 23       	and	r17, r17
  36:	01 f4       	brne	.+0      	; 0x38 <_ZN14RWStateMachine15doFullSendCycleEv+0x38>
	}
}

// =================================================

void RWStateMachine::doFullSendCycle()
  38:	11 e0       	ldi	r17, 0x01	; 1
  3a:	f7 01       	movw	r30, r14
  3c:	80 81       	ld	r24, Z
  3e:	91 81       	ldd	r25, Z+1	; 0x01
  40:	8a 15       	cp	r24, r10
  42:	9b 05       	cpc	r25, r11
  44:	01 f0       	breq	.+0      	; 0x46 <_ZN14RWStateMachine15doFullSendCycleEv+0x46>
  46:	10 e0       	ldi	r17, 0x00	; 0
  48:	00 c0       	rjmp	.+0      	; 0x4a <_ZN14RWStateMachine15doFullSendCycleEv+0x4a>
		{
			if( currentState == &rwSubTaskDecideToSendOutgoingData ) isCycleOpen = true;
		}
		else
		{
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
  4a:	f7 01       	movw	r30, r14
  4c:	80 81       	ld	r24, Z
  4e:	91 81       	ldd	r25, Z+1	; 0x01
  50:	8c 15       	cp	r24, r12
  52:	9d 05       	cpc	r25, r13
  54:	01 f0       	breq	.+0      	; 0x56 <_ZN14RWStateMachine15doFullSendCycleEv+0x56>
		}

		run();
  56:	e8 81       	ld	r30, Y
  58:	f9 81       	ldd	r31, Y+1	; 0x01
  5a:	01 90       	ld	r0, Z+
  5c:	f0 81       	ld	r31, Z
  5e:	e0 2d       	mov	r30, r0
  60:	ce 01       	movw	r24, r28
  62:	19 95       	eicall
	// to jest pelny cykl wysylajacy
	// otwarty jest od rwSubTaskDecideToSendOutgoingData do rwSubTaskDecideToReadIncommingData

	bool isCycleOpen = false;

	while( true )
  64:	00 c0       	rjmp	.+0      	; 0x66 <_ZN14RWStateMachine15doFullSendCycleEv+0x66>
			if( currentState == &rwSubTaskDecideToReadIncommingData ) return;
		}

		run();
	}
}
  66:	df 91       	pop	r29
  68:	cf 91       	pop	r28
  6a:	1f 91       	pop	r17
  6c:	ff 90       	pop	r15
  6e:	ef 90       	pop	r14
  70:	df 90       	pop	r13
  72:	cf 90       	pop	r12
  74:	bf 90       	pop	r11
  76:	af 90       	pop	r10
  78:	08 95       	ret

RWSubTaskDecideToReadIncommingData.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000004e  2**0
                  ALLOC
  3 .stab         0000084c  00000000  00000000  00000050  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      0000428c  00000000  00000000  0000089c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN34RWSubTaskDecideToReadIncommingData14getSubTaskNameEv 00000006  00000000  00000000  00004b28  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN34RWSubTaskDecideToReadIncommingData18resetInternalStateEv 00000002  00000000  00000000  00004b2e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN34RWSubTaskDecideToReadIncommingData15getStateTimeoutEv 0000000a  00000000  00000000  00004b30  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN34RWSubTaskDecideToReadIncommingData20getStateAfterTimeoutEv 00000006  00000000  00000000  00004b3a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN34RWSubTaskDecideToReadIncommingData14executeSubTaskEv 0000004a  00000000  00000000  00004b40  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN34RWSubTaskDecideToReadIncommingDataC2EP9AnyBufferIhhEP9RWSubTaskS4_ 0000004c  00000000  00000000  00004b8a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .rodata._ZTV34RWSubTaskDecideToReadIncommingData 0000000e  00000000  00000000  00004bd6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  00004be4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .progmem.data 00000023  00000000  00000000  00004bf2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN34RWSubTaskDecideToReadIncommingData14getSubTaskNameEv:

00000000 <_ZN34RWSubTaskDecideToReadIncommingData14getSubTaskNameEv>:

#include "RWSubTaskDecideToReadIncommingData.h"

// =================================================

RWSubTaskDecideToReadIncommingData::RWSubTaskDecideToReadIncommingData( AnyBuffer< byte , byte >* _inputBuffer , RWSubTask* _subTaskIfReadIncommingData , RWSubTask* _subTaskIfNotReadIncommingData ) : dp( PSTR( "RWSubTaskDecideToReadIncommingData" ) , DEBUG_LEVEL_ALL )
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN34RWSubTaskDecideToReadIncommingData18resetInternalStateEv:

00000000 <_ZN34RWSubTaskDecideToReadIncommingData18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN34RWSubTaskDecideToReadIncommingData15getStateTimeoutEv:

00000000 <_ZN34RWSubTaskDecideToReadIncommingData15getStateTimeoutEv>:
   0:	60 e0       	ldi	r22, 0x00	; 0
   2:	70 e0       	ldi	r23, 0x00	; 0
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text._ZN34RWSubTaskDecideToReadIncommingData20getStateAfterTimeoutEv:

00000000 <_ZN34RWSubTaskDecideToReadIncommingData20getStateAfterTimeoutEv>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN34RWSubTaskDecideToReadIncommingData14executeSubTaskEv:

00000000 <_ZN34RWSubTaskDecideToReadIncommingData14executeSubTaskEv>:
   0:	fc 01       	movw	r30, r24
   2:	a5 81       	ldd	r26, Z+5	; 0x05
   4:	b6 81       	ldd	r27, Z+6	; 0x06
   6:	13 96       	adiw	r26, 0x03	; 3
   8:	8c 91       	ld	r24, X
   a:	13 97       	sbiw	r26, 0x03	; 3
   c:	14 96       	adiw	r26, 0x04	; 4
   e:	9c 91       	ld	r25, X
  10:	14 97       	sbiw	r26, 0x04	; 4
  12:	89 17       	cp	r24, r25
  14:	01 f4       	brne	.+0      	; 0x16 <_ZN34RWSubTaskDecideToReadIncommingData14executeSubTaskEv+0x16>
  16:	12 96       	adiw	r26, 0x02	; 2
  18:	9c 91       	ld	r25, X
  1a:	12 97       	sbiw	r26, 0x02	; 2
  1c:	89 17       	cp	r24, r25
  1e:	01 f4       	brne	.+0      	; 0x20 <_ZN34RWSubTaskDecideToReadIncommingData14executeSubTaskEv+0x20>
  20:	14 96       	adiw	r26, 0x04	; 4
  22:	1c 92       	st	X, r1
  24:	14 97       	sbiw	r26, 0x04	; 4
  26:	13 96       	adiw	r26, 0x03	; 3
  28:	1c 92       	st	X, r1
  2a:	a5 81       	ldd	r26, Z+5	; 0x05
  2c:	b6 81       	ldd	r27, Z+6	; 0x06
{
	inputBuffer = _inputBuffer;
  2e:	12 96       	adiw	r26, 0x02	; 2
  30:	9c 91       	ld	r25, X
	subTaskIfReadIncommingData = _subTaskIfReadIncommingData;
  32:	12 97       	sbiw	r26, 0x02	; 2
  34:	14 96       	adiw	r26, 0x04	; 4
	subTaskIfNotReadIncommingData = _subTaskIfNotReadIncommingData;
  36:	8c 91       	ld	r24, X
  38:	14 97       	sbiw	r26, 0x04	; 4
}
  3a:	98 17       	cp	r25, r24
  3c:	01 f0       	breq	.+0      	; 0x3e <_ZN34RWSubTaskDecideToReadIncommingData14executeSubTaskEv+0x3e>
  3e:	87 81       	ldd	r24, Z+7	; 0x07
  40:	90 85       	ldd	r25, Z+8	; 0x08
  42:	08 95       	ret
  44:	81 85       	ldd	r24, Z+9	; 0x09
  46:	92 85       	ldd	r25, Z+10	; 0x0a
  48:	08 95       	ret

Disassembly of section .text._ZN34RWSubTaskDecideToReadIncommingDataC2EP9AnyBufferIhhEP9RWSubTaskS4_:

00000000 <_ZN34RWSubTaskDecideToReadIncommingDataC1EP9AnyBufferIhhEP9RWSubTaskS4_>:

#include "RWSubTaskDecideToReadIncommingData.h"

// =================================================

RWSubTaskDecideToReadIncommingData::RWSubTaskDecideToReadIncommingData( AnyBuffer< byte , byte >* _inputBuffer , RWSubTask* _subTaskIfReadIncommingData , RWSubTask* _subTaskIfNotReadIncommingData ) : dp( PSTR( "RWSubTaskDecideToReadIncommingData" ) , DEBUG_LEVEL_ALL )
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	ec 01       	movw	r28, r24
  12:	6b 01       	movw	r12, r22
  14:	7a 01       	movw	r14, r20
  16:	89 01       	movw	r16, r18
  18:	20 e0       	ldi	r18, 0x00	; 0
  1a:	30 e0       	ldi	r19, 0x00	; 0
  1c:	fc 01       	movw	r30, r24
  1e:	21 93       	st	Z+, r18
  20:	31 93       	st	Z+, r19
  22:	cf 01       	movw	r24, r30
  24:	60 e0       	ldi	r22, 0x00	; 0
  26:	70 e0       	ldi	r23, 0x00	; 0
  28:	4a e0       	ldi	r20, 0x0A	; 10
  2a:	0e 94 00 00 	call	0	; 0x0 <_ZN34RWSubTaskDecideToReadIncommingDataC1EP9AnyBufferIhhEP9RWSubTaskS4_>
{
	inputBuffer = _inputBuffer;
  2e:	de 82       	std	Y+6, r13	; 0x06
  30:	cd 82       	std	Y+5, r12	; 0x05
	subTaskIfReadIncommingData = _subTaskIfReadIncommingData;
  32:	f8 86       	std	Y+8, r15	; 0x08
  34:	ef 82       	std	Y+7, r14	; 0x07
	subTaskIfNotReadIncommingData = _subTaskIfNotReadIncommingData;
  36:	1a 87       	std	Y+10, r17	; 0x0a
  38:	09 87       	std	Y+9, r16	; 0x09
}
  3a:	df 91       	pop	r29
  3c:	cf 91       	pop	r28
  3e:	1f 91       	pop	r17
  40:	0f 91       	pop	r16
  42:	ff 90       	pop	r15
  44:	ef 90       	pop	r14
  46:	df 90       	pop	r13
  48:	cf 90       	pop	r12
  4a:	08 95       	ret

RWSubTaskDecideToSendOutgoingData.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000019  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000004d  2**0
                  ALLOC
  3 .stab         00000840  00000000  00000000  00000050  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      0000475e  00000000  00000000  00000890  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN33RWSubTaskDecideToSendOutgoingData14getSubTaskNameEv 00000006  00000000  00000000  00004fee  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN33RWSubTaskDecideToSendOutgoingData18resetInternalStateEv 00000002  00000000  00000000  00004ff4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN33RWSubTaskDecideToSendOutgoingData15getStateTimeoutEv 0000000a  00000000  00000000  00004ff6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN33RWSubTaskDecideToSendOutgoingData20getStateAfterTimeoutEv 00000006  00000000  00000000  00005000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN33RWSubTaskDecideToSendOutgoingData14executeSubTaskEv 0000002c  00000000  00000000  00005006  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN33RWSubTaskDecideToSendOutgoingDataC2EP9AnyBufferIhhEP24RWSubTaskSendSENDCommandP9RWSubTaskh 00000052  00000000  00000000  00005032  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .rodata._ZTV33RWSubTaskDecideToSendOutgoingData 0000000e  00000000  00000000  00005084  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  00005092  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .progmem.data 00000022  00000000  00000000  000050a0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN33RWSubTaskDecideToSendOutgoingData14getSubTaskNameEv:

00000000 <_ZN33RWSubTaskDecideToSendOutgoingData14getSubTaskNameEv>:

#include "RWSubTaskDecideToSendOutgoingData.h"

// =================================================

RWSubTaskDecideToSendOutgoingData::RWSubTaskDecideToSendOutgoingData( AnyBuffer< byte , byte >* _outputBuffer , RWSubTaskSendSENDCommand* _rwSubTaskSendSENDCommand , RWSubTask* _subTaskIfNotSendOutgoingData , byte _sendRetryCount ) : dp( PSTR( "RWSubTaskDecideToSendOutgoingData" ) , DEBUG_LEVEL_ALL )
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskDecideToSendOutgoingData18resetInternalStateEv:

00000000 <_ZN33RWSubTaskDecideToSendOutgoingData18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskDecideToSendOutgoingData15getStateTimeoutEv:

00000000 <_ZN33RWSubTaskDecideToSendOutgoingData15getStateTimeoutEv>:
   0:	60 e0       	ldi	r22, 0x00	; 0
   2:	70 e0       	ldi	r23, 0x00	; 0
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskDecideToSendOutgoingData20getStateAfterTimeoutEv:

00000000 <_ZN33RWSubTaskDecideToSendOutgoingData20getStateAfterTimeoutEv>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskDecideToSendOutgoingData14executeSubTaskEv:

00000000 <_ZN33RWSubTaskDecideToSendOutgoingData14executeSubTaskEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	ed 81       	ldd	r30, Y+5	; 0x05
   8:	fe 81       	ldd	r31, Y+6	; 0x06
   a:	94 81       	ldd	r25, Z+4	; 0x04
   c:	83 81       	ldd	r24, Z+3	; 0x03
   e:	98 17       	cp	r25, r24
  10:	01 f0       	breq	.+0      	; 0x12 <_ZN33RWSubTaskDecideToSendOutgoingData14executeSubTaskEv+0x12>
  12:	8f 81       	ldd	r24, Y+7	; 0x07
  14:	98 85       	ldd	r25, Y+8	; 0x08
  16:	6b 85       	ldd	r22, Y+11	; 0x0b
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN33RWSubTaskDecideToSendOutgoingData14executeSubTaskEv>
  1c:	8f 81       	ldd	r24, Y+7	; 0x07
  1e:	98 85       	ldd	r25, Y+8	; 0x08
  20:	00 c0       	rjmp	.+0      	; 0x22 <_ZN33RWSubTaskDecideToSendOutgoingData14executeSubTaskEv+0x22>
  22:	89 85       	ldd	r24, Y+9	; 0x09
  24:	9a 85       	ldd	r25, Y+10	; 0x0a
  26:	df 91       	pop	r29
  28:	cf 91       	pop	r28
  2a:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskDecideToSendOutgoingDataC2EP9AnyBufferIhhEP24RWSubTaskSendSENDCommandP9RWSubTaskh:

00000000 <_ZN33RWSubTaskDecideToSendOutgoingDataC1EP9AnyBufferIhhEP24RWSubTaskSendSENDCommandP9RWSubTaskh>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	cf 93       	push	r28
  10:	df 93       	push	r29
  12:	ec 01       	movw	r28, r24
  14:	5b 01       	movw	r10, r22
  16:	6a 01       	movw	r12, r20
  18:	79 01       	movw	r14, r18
  1a:	20 e0       	ldi	r18, 0x00	; 0
  1c:	30 e0       	ldi	r19, 0x00	; 0
  1e:	fc 01       	movw	r30, r24
  20:	21 93       	st	Z+, r18
  22:	31 93       	st	Z+, r19
  24:	cf 01       	movw	r24, r30
  26:	60 e0       	ldi	r22, 0x00	; 0
  28:	70 e0       	ldi	r23, 0x00	; 0
  2a:	4a e0       	ldi	r20, 0x0A	; 10
  2c:	0e 94 00 00 	call	0	; 0x0 <_ZN33RWSubTaskDecideToSendOutgoingDataC1EP9AnyBufferIhhEP24RWSubTaskSendSENDCommandP9RWSubTaskh>
{
	outputBuffer = _outputBuffer;
  30:	be 82       	std	Y+6, r11	; 0x06
  32:	ad 82       	std	Y+5, r10	; 0x05
	rwSubTaskSendSENDCommand = _rwSubTaskSendSENDCommand;
  34:	d8 86       	std	Y+8, r13	; 0x08
  36:	cf 82       	std	Y+7, r12	; 0x07
	subTaskIfNotSendOutgoingData = _subTaskIfNotSendOutgoingData;
  38:	fa 86       	std	Y+10, r15	; 0x0a
  3a:	e9 86       	std	Y+9, r14	; 0x09
	sendRetryCount = _sendRetryCount;
  3c:	0b 87       	std	Y+11, r16	; 0x0b
}
  3e:	df 91       	pop	r29
  40:	cf 91       	pop	r28
  42:	0f 91       	pop	r16
  44:	ff 90       	pop	r15
  46:	ef 90       	pop	r14
  48:	df 90       	pop	r13
  4a:	cf 90       	pop	r12
  4c:	bf 90       	pop	r11
  4e:	af 90       	pop	r10
  50:	08 95       	ret

RWSubTaskGoBackToFirstSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000015  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000049  2**0
                  ALLOC
  3 .stab         00000720  00000000  00000000  0000004c  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000032c8  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN29RWSubTaskGoBackToFirstSubTask14getSubTaskNameEv 00000006  00000000  00000000  00003a34  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN29RWSubTaskGoBackToFirstSubTask18resetInternalStateEv 00000002  00000000  00000000  00003a3a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN29RWSubTaskGoBackToFirstSubTask15getStateTimeoutEv 0000000a  00000000  00000000  00003a3c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN29RWSubTaskGoBackToFirstSubTask20getStateAfterTimeoutEv 00000006  00000000  00000000  00003a46  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN29RWSubTaskGoBackToFirstSubTask14executeSubTaskEv 00000006  00000000  00000000  00003a4c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .rodata._ZTV29RWSubTaskGoBackToFirstSubTask 0000000e  00000000  00000000  00003a52  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN29RWSubTaskGoBackToFirstSubTask14getSubTaskNameEv:

00000000 <_ZN29RWSubTaskGoBackToFirstSubTask14getSubTaskNameEv>:
// =================================================

RWSubTask* RWSubTaskGoBackToFirstSubTask::executeSubTask()
{
	return NULL;
}
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN29RWSubTaskGoBackToFirstSubTask18resetInternalStateEv:

00000000 <_ZN29RWSubTaskGoBackToFirstSubTask18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN29RWSubTaskGoBackToFirstSubTask15getStateTimeoutEv:

00000000 <_ZN29RWSubTaskGoBackToFirstSubTask15getStateTimeoutEv>:
   0:	60 e0       	ldi	r22, 0x00	; 0
   2:	70 e0       	ldi	r23, 0x00	; 0
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text._ZN29RWSubTaskGoBackToFirstSubTask20getStateAfterTimeoutEv:

00000000 <_ZN29RWSubTaskGoBackToFirstSubTask20getStateAfterTimeoutEv>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN29RWSubTaskGoBackToFirstSubTask14executeSubTaskEv:

00000000 <_ZN29RWSubTaskGoBackToFirstSubTask14executeSubTaskEv>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

RWSubTaskReadRECVACKCommandData.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000056  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000008a  2**0
                  ALLOC
  3 .stab         00000ca8  00000000  00000000  0000008c  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00004d96  00000000  00000000  00000d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN31RWSubTaskReadRECVACKCommandData14getSubTaskNameEv 00000006  00000000  00000000  00005aca  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN31RWSubTaskReadRECVACKCommandData18resetInternalStateEv 00000002  00000000  00000000  00005ad0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN31RWSubTaskReadRECVACKCommandData15getStateTimeoutEv 0000000a  00000000  00000000  00005ad2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN31RWSubTaskReadRECVACKCommandData20getStateAfterTimeoutEv 00000008  00000000  00000000  00005adc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN9AnyBufferIhhE11printReportEPc.part.2 00000092  00000000  00000000  00005ae4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN31RWSubTaskReadRECVACKCommandDataC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP9RWSubTaskS8_ 00000062  00000000  00000000  00005b76  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN31RWSubTaskReadRECVACKCommandData7setWorkEj 0000005a  00000000  00000000  00005bd8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj 000000ba  00000000  00000000  00005c32  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN9AnyBufferIhhE19setPositionAndLimitEhh 00000016  00000000  00000000  00005cec  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text._ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv 00000210  00000000  00000000  00005d02  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .rodata._ZTV31RWSubTaskReadRECVACKCommandData 0000000e  00000000  00000000  00005f12  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 16 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  00005f20  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 17 .progmem.data 000001d0  00000000  00000000  00005f2e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN31RWSubTaskReadRECVACKCommandData14getSubTaskNameEv:

00000000 <_ZN31RWSubTaskReadRECVACKCommandData14getSubTaskNameEv>:
}

// =================================================

RWSubTask* RWSubTaskReadRECVACKCommandData::executeSubTask()
{
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN31RWSubTaskReadRECVACKCommandData18resetInternalStateEv:

00000000 <_ZN31RWSubTaskReadRECVACKCommandData18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN31RWSubTaskReadRECVACKCommandData15getStateTimeoutEv:

00000000 <_ZN31RWSubTaskReadRECVACKCommandData15getStateTimeoutEv>:
   0:	60 ed       	ldi	r22, 0xD0	; 208
   2:	77 e0       	ldi	r23, 0x07	; 7
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text._ZN31RWSubTaskReadRECVACKCommandData20getStateAfterTimeoutEv:

00000000 <_ZN31RWSubTaskReadRECVACKCommandData20getStateAfterTimeoutEv>:
   0:	fc 01       	movw	r30, r24
   2:	85 85       	ldd	r24, Z+13	; 0x0d
   4:	96 85       	ldd	r25, Z+14	; 0x0e
   6:	08 95       	ret

Disassembly of section .text._ZN9AnyBufferIhhE11printReportEPc.part.2:

00000000 <_ZN9AnyBufferIhhE11printReportEPc.part.2>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
	static const PROGMEM prog_char functionName[] = "executeSubTask";

	byte positionBefore = inputBuffer->position;
   c:	05 96       	adiw	r24, 0x05	; 5
   e:	60 e0       	ldi	r22, 0x00	; 0
  10:	70 e0       	ldi	r23, 0x00	; 0
  12:	40 e0       	ldi	r20, 0x00	; 0
  14:	50 e0       	ldi	r21, 0x00	; 0
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN9AnyBufferIhhE11printReportEPc.part.2>
	byte limitBefore = inputBuffer->limit;
  1a:	4b 81       	ldd	r20, Y+3	; 0x03
  1c:	2c 81       	ldd	r18, Y+4	; 0x04

	if( incommingDataSize > 0 )
  1e:	3a 81       	ldd	r19, Y+2	; 0x02
  20:	8d b7       	in	r24, 0x3d	; 61
  22:	9e b7       	in	r25, 0x3e	; 62
  24:	0e 97       	sbiw	r24, 0x0e	; 14
  26:	0f b6       	in	r0, 0x3f	; 63
  28:	f8 94       	cli

		//while( crcStream.available() < size ); // waiting for incomming data



		inputBuffer->setPositionAndLimit( limitBefore , limitBefore + incommingDataSize );
  2a:	9e bf       	out	0x3e, r25	; 62
  2c:	0f be       	out	0x3f, r0	; 63
  2e:	8d bf       	out	0x3d, r24	; 61
  30:	ed b7       	in	r30, 0x3d	; 61

		{ // todo temporary
			aln( "positionBefore=%u , limitBefore=%u , incomming data size=%u" , positionBefore , limitBefore , incommingDataSize );
  32:	fe b7       	in	r31, 0x3e	; 62
  34:	31 96       	adiw	r30, 0x01	; 1
  36:	80 e0       	ldi	r24, 0x00	; 0
  38:	90 e0       	ldi	r25, 0x00	; 0
  3a:	ad b7       	in	r26, 0x3d	; 61
  3c:	be b7       	in	r27, 0x3e	; 62
  3e:	12 96       	adiw	r26, 0x02	; 2
  40:	9c 93       	st	X, r25
  42:	8e 93       	st	-X, r24
  44:	11 97       	sbiw	r26, 0x01	; 1
  46:	13 83       	std	Z+3, r17	; 0x03
  48:	02 83       	std	Z+2, r16	; 0x02
  4a:	44 83       	std	Z+4, r20	; 0x04
  4c:	15 82       	std	Z+5, r1	; 0x05
  4e:	26 83       	std	Z+6, r18	; 0x06
  50:	17 82       	std	Z+7, r1	; 0x07
  52:	30 87       	std	Z+8, r19	; 0x08
  54:	11 86       	std	Z+9, r1	; 0x09
  56:	82 2f       	mov	r24, r18
  58:	84 1b       	sub	r24, r20
  5a:	82 87       	std	Z+10, r24	; 0x0a
  5c:	13 86       	std	Z+11, r1	; 0x0b
  5e:	32 1b       	sub	r19, r18
  60:	34 87       	std	Z+12, r19	; 0x0c
  62:	15 86       	std	Z+13, r1	; 0x0d
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN9AnyBufferIhhE11printReportEPc.part.2>
  68:	ed b7       	in	r30, 0x3d	; 61
  6a:	fe b7       	in	r31, 0x3e	; 62
  6c:	3c 96       	adiw	r30, 0x0c	; 12
  6e:	0f b6       	in	r0, 0x3f	; 63
  70:	f8 94       	cli
  72:	fe bf       	out	0x3e, r31	; 62
  74:	0f be       	out	0x3f, r0	; 63
  76:	ed bf       	out	0x3d, r30	; 61
  78:	80 e0       	ldi	r24, 0x00	; 0
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	92 83       	std	Z+2, r25	; 0x02
  7e:	81 83       	std	Z+1, r24	; 0x01
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN9AnyBufferIhhE11printReportEPc.part.2>
  84:	0f 90       	pop	r0
  86:	0f 90       	pop	r0
  88:	df 91       	pop	r29
  8a:	cf 91       	pop	r28
  8c:	1f 91       	pop	r17
  8e:	0f 91       	pop	r16
  90:	08 95       	ret

Disassembly of section .text._ZN31RWSubTaskReadRECVACKCommandDataC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP9RWSubTaskS8_:

00000000 <_ZN31RWSubTaskReadRECVACKCommandDataC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP9RWSubTaskS8_>:
}

// =================================================

RWSubTask* RWSubTaskReadRECVACKCommandData::executeSubTask()
{
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
	static const PROGMEM prog_char functionName[] = "executeSubTask";

	byte positionBefore = inputBuffer->position;
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
	byte limitBefore = inputBuffer->limit;
  18:	ec 01       	movw	r28, r24
  1a:	4b 01       	movw	r8, r22
  1c:	5a 01       	movw	r10, r20

	if( incommingDataSize > 0 )
  1e:	69 01       	movw	r12, r18
  20:	20 e0       	ldi	r18, 0x00	; 0
  22:	30 e0       	ldi	r19, 0x00	; 0
  24:	fc 01       	movw	r30, r24
  26:	21 93       	st	Z+, r18
  28:	31 93       	st	Z+, r19

		//while( crcStream.available() < size ); // waiting for incomming data



		inputBuffer->setPositionAndLimit( limitBefore , limitBefore + incommingDataSize );
  2a:	cf 01       	movw	r24, r30
  2c:	60 e0       	ldi	r22, 0x00	; 0
  2e:	70 e0       	ldi	r23, 0x00	; 0
  30:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandDataC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP9RWSubTaskS8_>

		{ // todo temporary
			aln( "positionBefore=%u , limitBefore=%u , incomming data size=%u" , positionBefore , limitBefore , incommingDataSize );
  34:	9e 82       	std	Y+6, r9	; 0x06
  36:	8d 82       	std	Y+5, r8	; 0x05
  38:	b8 86       	std	Y+8, r11	; 0x08
  3a:	af 82       	std	Y+7, r10	; 0x07
  3c:	da 86       	std	Y+10, r13	; 0x0a
  3e:	c9 86       	std	Y+9, r12	; 0x09
  40:	1c 87       	std	Y+12, r17	; 0x0c
  42:	0b 87       	std	Y+11, r16	; 0x0b
  44:	fe 86       	std	Y+14, r15	; 0x0e
  46:	ed 86       	std	Y+13, r14	; 0x0d
  48:	df 91       	pop	r29
  4a:	cf 91       	pop	r28
  4c:	1f 91       	pop	r17
  4e:	0f 91       	pop	r16
  50:	ff 90       	pop	r15
  52:	ef 90       	pop	r14
  54:	df 90       	pop	r13
  56:	cf 90       	pop	r12
  58:	bf 90       	pop	r11
  5a:	af 90       	pop	r10
  5c:	9f 90       	pop	r9
  5e:	8f 90       	pop	r8
  60:	08 95       	ret

Disassembly of section .text._ZN31RWSubTaskReadRECVACKCommandData7setWorkEj:

00000000 <_ZN31RWSubTaskReadRECVACKCommandData7setWorkEj>:
}

// =================================================

RWSubTask* RWSubTaskReadRECVACKCommandData::executeSubTask()
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	78 8b       	std	Y+16, r23	; 0x10
   8:	6f 87       	std	Y+15, r22	; 0x0f
   a:	8c 81       	ldd	r24, Y+4	; 0x04
	static const PROGMEM prog_char functionName[] = "executeSubTask";

	byte positionBefore = inputBuffer->position;
   c:	8b 30       	cpi	r24, 0x0B	; 11
   e:	00 f4       	brcc	.+0      	; 0x10 <_ZN31RWSubTaskReadRECVACKCommandData7setWorkEj+0x10>
  10:	ce 01       	movw	r24, r28
  12:	02 96       	adiw	r24, 0x02	; 2
  14:	60 e0       	ldi	r22, 0x00	; 0
  16:	70 e0       	ldi	r23, 0x00	; 0
	byte limitBefore = inputBuffer->limit;
  18:	40 e0       	ldi	r20, 0x00	; 0
  1a:	50 e0       	ldi	r21, 0x00	; 0
  1c:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData7setWorkEj>

	if( incommingDataSize > 0 )
  20:	00 d0       	rcall	.+0      	; 0x22 <_ZN31RWSubTaskReadRECVACKCommandData7setWorkEj+0x22>
  22:	0f 92       	push	r0
  24:	80 e0       	ldi	r24, 0x00	; 0
  26:	90 e0       	ldi	r25, 0x00	; 0
  28:	ed b7       	in	r30, 0x3d	; 61

		//while( crcStream.available() < size ); // waiting for incomming data



		inputBuffer->setPositionAndLimit( limitBefore , limitBefore + incommingDataSize );
  2a:	fe b7       	in	r31, 0x3e	; 62
  2c:	92 83       	std	Z+2, r25	; 0x02
  2e:	81 83       	std	Z+1, r24	; 0x01
  30:	8f 85       	ldd	r24, Y+15	; 0x0f

		{ // todo temporary
			aln( "positionBefore=%u , limitBefore=%u , incomming data size=%u" , positionBefore , limitBefore , incommingDataSize );
  32:	98 89       	ldd	r25, Y+16	; 0x10
  34:	94 83       	std	Z+4, r25	; 0x04
  36:	83 83       	std	Z+3, r24	; 0x03
  38:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData7setWorkEj>
  3c:	0f 90       	pop	r0
  3e:	0f 90       	pop	r0
  40:	80 e0       	ldi	r24, 0x00	; 0
  42:	90 e0       	ldi	r25, 0x00	; 0
  44:	ed b7       	in	r30, 0x3d	; 61
  46:	fe b7       	in	r31, 0x3e	; 62
  48:	92 83       	std	Z+2, r25	; 0x02
  4a:	81 83       	std	Z+1, r24	; 0x01
  4c:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData7setWorkEj>
  50:	0f 90       	pop	r0
  52:	0f 90       	pop	r0
  54:	df 91       	pop	r29
  56:	cf 91       	pop	r28
  58:	08 95       	ret

Disassembly of section .text._ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj:

00000000 <_ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj>:
}

// =================================================

RWSubTask* RWSubTaskReadRECVACKCommandData::executeSubTask()
{
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
	static const PROGMEM prog_char functionName[] = "executeSubTask";

	byte positionBefore = inputBuffer->position;
   c:	8c 01       	movw	r16, r24
   e:	7b 01       	movw	r14, r22
  10:	dc 01       	movw	r26, r24
  12:	17 96       	adiw	r26, 0x07	; 7
  14:	8d 91       	ld	r24, X+
  16:	9c 91       	ld	r25, X
	byte limitBefore = inputBuffer->limit;
  18:	18 97       	sbiw	r26, 0x08	; 8
  1a:	dc 01       	movw	r26, r24
  1c:	ed 91       	ld	r30, X+

	if( incommingDataSize > 0 )
  1e:	fc 91       	ld	r31, X
  20:	06 80       	ldd	r0, Z+6	; 0x06
  22:	f7 81       	ldd	r31, Z+7	; 0x07
  24:	e0 2d       	mov	r30, r0
  26:	19 95       	eicall
  28:	c8 2f       	mov	r28, r24

		//while( crcStream.available() < size ); // waiting for incomming data



		inputBuffer->setPositionAndLimit( limitBefore , limitBefore + incommingDataSize );
  2a:	d0 e0       	ldi	r29, 0x00	; 0
  2c:	f8 01       	movw	r30, r16
  2e:	87 81       	ldd	r24, Z+7	; 0x07
  30:	90 85       	ldd	r25, Z+8	; 0x08

		{ // todo temporary
			aln( "positionBefore=%u , limitBefore=%u , incomming data size=%u" , positionBefore , limitBefore , incommingDataSize );
  32:	dc 01       	movw	r26, r24
  34:	ed 91       	ld	r30, X+
  36:	fc 91       	ld	r31, X
  38:	06 80       	ldd	r0, Z+6	; 0x06
  3a:	f7 81       	ldd	r31, Z+7	; 0x07
  3c:	e0 2d       	mov	r30, r0
  3e:	19 95       	eicall
  40:	38 2f       	mov	r19, r24
  42:	20 e0       	ldi	r18, 0x00	; 0
  44:	c2 0f       	add	r28, r18
  46:	d3 1f       	adc	r29, r19
  48:	f8 01       	movw	r30, r16
  4a:	84 81       	ldd	r24, Z+4	; 0x04
  4c:	8b 30       	cpi	r24, 0x0B	; 11
  4e:	00 f4       	brcc	.+0      	; 0x50 <_ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj+0x50>
  50:	c8 01       	movw	r24, r16
  52:	02 96       	adiw	r24, 0x02	; 2
  54:	60 e0       	ldi	r22, 0x00	; 0
  56:	70 e0       	ldi	r23, 0x00	; 0
  58:	40 e0       	ldi	r20, 0x00	; 0
  5a:	50 e0       	ldi	r21, 0x00	; 0
  5c:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj>
  60:	00 d0       	rcall	.+0      	; 0x62 <_ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj+0x62>
  62:	00 d0       	rcall	.+0      	; 0x64 <_ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj+0x64>
  64:	ed b7       	in	r30, 0x3d	; 61
  66:	fe b7       	in	r31, 0x3e	; 62
  68:	31 96       	adiw	r30, 0x01	; 1
  6a:	80 e0       	ldi	r24, 0x00	; 0
  6c:	90 e0       	ldi	r25, 0x00	; 0
  6e:	ad b7       	in	r26, 0x3d	; 61
  70:	be b7       	in	r27, 0x3e	; 62
  72:	12 96       	adiw	r26, 0x02	; 2
  74:	9c 93       	st	X, r25
  76:	8e 93       	st	-X, r24
  78:	11 97       	sbiw	r26, 0x01	; 1
  7a:	d3 83       	std	Z+3, r29	; 0x03
  7c:	c2 83       	std	Z+2, r28	; 0x02
  7e:	f5 82       	std	Z+5, r15	; 0x05
  80:	e4 82       	std	Z+4, r14	; 0x04
  82:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj>
  86:	0f 90       	pop	r0
  88:	0f 90       	pop	r0
  8a:	0f 90       	pop	r0
  8c:	0f 90       	pop	r0
  8e:	80 e0       	ldi	r24, 0x00	; 0
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	ed b7       	in	r30, 0x3d	; 61
  94:	fe b7       	in	r31, 0x3e	; 62
  96:	92 83       	std	Z+2, r25	; 0x02
  98:	81 83       	std	Z+1, r24	; 0x01
  9a:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj>
			inputBuffer->printReport( "BEFORE READING (after buffer set)" );
  9e:	0f 90       	pop	r0
  a0:	0f 90       	pop	r0
template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::printReport( char* prefix )
{
	static const PROGMEM prog_char functionName[] = "printReport";

	iln( "%s : pos=%u , lim=%u, capacity=%u, remaining=%u, unusedSpace=%u" , prefix , position , limit , capacity , getRemaining() , getUnusedSpace() )
  a2:	81 e0       	ldi	r24, 0x01	; 1
  a4:	ce 15       	cp	r28, r14
  a6:	df 05       	cpc	r29, r15
  a8:	01 f0       	breq	.+0      	; 0xaa <_ZN31RWSubTaskReadRECVACKCommandData52compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytesEj+0xaa>
  aa:	80 e0       	ldi	r24, 0x00	; 0
  ac:	df 91       	pop	r29
  ae:	cf 91       	pop	r28
  b0:	1f 91       	pop	r17
  b2:	0f 91       	pop	r16
  b4:	ff 90       	pop	r15
			//delay( 1000 );
		}

		char* arr = (char*)inputBuffer->array;
  b6:	ef 90       	pop	r14
  b8:	08 95       	ret

Disassembly of section .text._ZN9AnyBufferIhhE19setPositionAndLimitEhh:

00000000 <_ZN9AnyBufferIhhE19setPositionAndLimitEhh>:
}

// =================================================

RWSubTask* RWSubTaskReadRECVACKCommandData::executeSubTask()
{
   0:	fc 01       	movw	r30, r24
   2:	82 81       	ldd	r24, Z+2	; 0x02
   4:	84 17       	cp	r24, r20
   6:	00 f4       	brcc	.+0      	; 0x8 <_ZN9AnyBufferIhhE19setPositionAndLimitEhh+0x8>
   8:	48 2f       	mov	r20, r24
   a:	44 83       	std	Z+4, r20	; 0x04
	static const PROGMEM prog_char functionName[] = "executeSubTask";

	byte positionBefore = inputBuffer->position;
   c:	64 17       	cp	r22, r20
   e:	00 f4       	brcc	.+0      	; 0x10 <_ZN9AnyBufferIhhE19setPositionAndLimitEhh+0x10>
  10:	46 2f       	mov	r20, r22
  12:	43 83       	std	Z+3, r20	; 0x03
  14:	08 95       	ret

Disassembly of section .text._ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv:

00000000 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>:
}

// =================================================

RWSubTask* RWSubTaskReadRECVACKCommandData::executeSubTask()
{
   0:	ff 92       	push	r15
   2:	0f 93       	push	r16
   4:	1f 93       	push	r17
   6:	cf 93       	push	r28
   8:	df 93       	push	r29
   a:	ec 01       	movw	r28, r24
	static const PROGMEM prog_char functionName[] = "executeSubTask";

	byte positionBefore = inputBuffer->position;
   c:	8d 81       	ldd	r24, Y+5	; 0x05
   e:	9e 81       	ldd	r25, Y+6	; 0x06
  10:	dc 01       	movw	r26, r24
  12:	13 96       	adiw	r26, 0x03	; 3
  14:	fc 90       	ld	r15, X
  16:	13 97       	sbiw	r26, 0x03	; 3
	byte limitBefore = inputBuffer->limit;
  18:	14 96       	adiw	r26, 0x04	; 4
  1a:	0c 91       	ld	r16, X
  1c:	14 97       	sbiw	r26, 0x04	; 4

	if( incommingDataSize > 0 )
  1e:	4f 85       	ldd	r20, Y+15	; 0x0f
  20:	58 89       	ldd	r21, Y+16	; 0x10
  22:	41 15       	cp	r20, r1
  24:	51 05       	cpc	r21, r1
  26:	01 f4       	brne	.+0      	; 0x28 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x28>
  28:	00 c0       	rjmp	.+0      	; 0x2a <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x2a>

		//while( crcStream.available() < size ); // waiting for incomming data



		inputBuffer->setPositionAndLimit( limitBefore , limitBefore + incommingDataSize );
  2a:	40 0f       	add	r20, r16
  2c:	60 2f       	mov	r22, r16
  2e:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>

		{ // todo temporary
			aln( "positionBefore=%u , limitBefore=%u , incomming data size=%u" , positionBefore , limitBefore , incommingDataSize );
  32:	8c 81       	ldd	r24, Y+4	; 0x04
  34:	8b 30       	cpi	r24, 0x0B	; 11
  36:	00 f4       	brcc	.+0      	; 0x38 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x38>
  38:	ce 01       	movw	r24, r28
  3a:	02 96       	adiw	r24, 0x02	; 2
  3c:	60 e0       	ldi	r22, 0x00	; 0
  3e:	70 e0       	ldi	r23, 0x00	; 0
  40:	40 e0       	ldi	r20, 0x00	; 0
  42:	50 e0       	ldi	r21, 0x00	; 0
  44:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
  48:	ed b7       	in	r30, 0x3d	; 61
  4a:	fe b7       	in	r31, 0x3e	; 62
  4c:	38 97       	sbiw	r30, 0x08	; 8
  4e:	0f b6       	in	r0, 0x3f	; 63
  50:	f8 94       	cli
  52:	fe bf       	out	0x3e, r31	; 62
  54:	0f be       	out	0x3f, r0	; 63
  56:	ed bf       	out	0x3d, r30	; 61
  58:	31 96       	adiw	r30, 0x01	; 1
  5a:	80 e0       	ldi	r24, 0x00	; 0
  5c:	90 e0       	ldi	r25, 0x00	; 0
  5e:	ad b7       	in	r26, 0x3d	; 61
  60:	be b7       	in	r27, 0x3e	; 62
  62:	12 96       	adiw	r26, 0x02	; 2
  64:	9c 93       	st	X, r25
  66:	8e 93       	st	-X, r24
  68:	11 97       	sbiw	r26, 0x01	; 1
  6a:	f2 82       	std	Z+2, r15	; 0x02
  6c:	13 82       	std	Z+3, r1	; 0x03
  6e:	04 83       	std	Z+4, r16	; 0x04
  70:	15 82       	std	Z+5, r1	; 0x05
  72:	8f 85       	ldd	r24, Y+15	; 0x0f
  74:	98 89       	ldd	r25, Y+16	; 0x10
  76:	97 83       	std	Z+7, r25	; 0x07
  78:	86 83       	std	Z+6, r24	; 0x06
  7a:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
  7e:	ed b7       	in	r30, 0x3d	; 61
  80:	fe b7       	in	r31, 0x3e	; 62
  82:	36 96       	adiw	r30, 0x06	; 6
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	f8 94       	cli
  88:	fe bf       	out	0x3e, r31	; 62
  8a:	0f be       	out	0x3f, r0	; 63
  8c:	ed bf       	out	0x3d, r30	; 61
  8e:	80 e0       	ldi	r24, 0x00	; 0
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	92 83       	std	Z+2, r25	; 0x02
  94:	81 83       	std	Z+1, r24	; 0x01
  96:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
  9a:	0f 90       	pop	r0
  9c:	0f 90       	pop	r0
			inputBuffer->printReport( "BEFORE READING (after buffer set)" );
  9e:	8d 81       	ldd	r24, Y+5	; 0x05
  a0:	9e 81       	ldd	r25, Y+6	; 0x06
  a2:	dc 01       	movw	r26, r24
  a4:	17 96       	adiw	r26, 0x07	; 7
  a6:	2c 91       	ld	r18, X
  a8:	17 97       	sbiw	r26, 0x07	; 7
  aa:	25 31       	cpi	r18, 0x15	; 21
  ac:	00 f4       	brcc	.+0      	; 0xae <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0xae>
  ae:	60 e0       	ldi	r22, 0x00	; 0
  b0:	70 e0       	ldi	r23, 0x00	; 0
  b2:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
			//delay( 1000 );
		}

		char* arr = (char*)inputBuffer->array;
  b6:	ed 81       	ldd	r30, Y+5	; 0x05
  b8:	fe 81       	ldd	r31, Y+6	; 0x06

		byte readBytesCount = crcStream->readBytes( &arr[ inputBuffer->position ] , incommingDataSize );
  ba:	83 81       	ldd	r24, Z+3	; 0x03
  bc:	60 81       	ld	r22, Z
  be:	71 81       	ldd	r23, Z+1	; 0x01
  c0:	68 0f       	add	r22, r24
  c2:	71 1d       	adc	r23, r1
  c4:	4f 85       	ldd	r20, Y+15	; 0x0f
  c6:	58 89       	ldd	r21, Y+16	; 0x10
  c8:	8f 81       	ldd	r24, Y+7	; 0x07
  ca:	98 85       	ldd	r25, Y+8	; 0x08
  cc:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
  d0:	18 2f       	mov	r17, r24

		if( readBytesCount != incommingDataSize )
  d2:	28 2f       	mov	r18, r24
  d4:	30 e0       	ldi	r19, 0x00	; 0
  d6:	8f 85       	ldd	r24, Y+15	; 0x0f
  d8:	98 89       	ldd	r25, Y+16	; 0x10
  da:	28 17       	cp	r18, r24
  dc:	39 07       	cpc	r19, r25
  de:	01 f0       	breq	.+0      	; 0xe0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0xe0>
		{
			wln( "should read %u bytes but only read %u bytes" , incommingDataSize , readBytesCount )
  e0:	8c 81       	ldd	r24, Y+4	; 0x04
  e2:	8f 31       	cpi	r24, 0x1F	; 31
  e4:	00 f0       	brcs	.+0      	; 0xe6 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0xe6>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0xe8>
  e8:	ce 01       	movw	r24, r28
  ea:	02 96       	adiw	r24, 0x02	; 2
  ec:	60 e0       	ldi	r22, 0x00	; 0
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	40 e0       	ldi	r20, 0x00	; 0
  f2:	50 e0       	ldi	r21, 0x00	; 0
  f4:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
  f8:	00 d0       	rcall	.+0      	; 0xfa <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0xfa>
  fa:	00 d0       	rcall	.+0      	; 0xfc <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0xfc>
  fc:	ed b7       	in	r30, 0x3d	; 61
  fe:	fe b7       	in	r31, 0x3e	; 62
 100:	31 96       	adiw	r30, 0x01	; 1
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	ad b7       	in	r26, 0x3d	; 61
 108:	be b7       	in	r27, 0x3e	; 62
 10a:	12 96       	adiw	r26, 0x02	; 2
 10c:	9c 93       	st	X, r25
 10e:	8e 93       	st	-X, r24
 110:	11 97       	sbiw	r26, 0x01	; 1
 112:	8f 85       	ldd	r24, Y+15	; 0x0f
 114:	98 89       	ldd	r25, Y+16	; 0x10
 116:	93 83       	std	Z+3, r25	; 0x03
 118:	82 83       	std	Z+2, r24	; 0x02
 11a:	14 83       	std	Z+4, r17	; 0x04
 11c:	15 82       	std	Z+5, r1	; 0x05
 11e:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
 122:	0f 90       	pop	r0
 124:	0f 90       	pop	r0
 126:	0f 90       	pop	r0
 128:	0f 90       	pop	r0
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	ed b7       	in	r30, 0x3d	; 61
 130:	fe b7       	in	r31, 0x3e	; 62
 132:	92 83       	std	Z+2, r25	; 0x02
 134:	81 83       	std	Z+1, r24	; 0x01
 136:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
 13a:	0f 90       	pop	r0
 13c:	0f 90       	pop	r0
 13e:	00 c0       	rjmp	.+0      	; 0x140 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x140>
			}
		}
		*/

		//inputBuffer->setPositionAndLimit( positionBefore , inputBuffer->position );
		inputBuffer->setPositionAndLimit( positionBefore , limitBefore + incommingDataSize );
 140:	41 2f       	mov	r20, r17
 142:	40 0f       	add	r20, r16
 144:	8d 81       	ldd	r24, Y+5	; 0x05
 146:	9e 81       	ldd	r25, Y+6	; 0x06
 148:	6f 2d       	mov	r22, r15
 14a:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
	}

	// ---

	// todo temporary
	if( inputBuffer->getRemaining() > 0 )
 14e:	ed 81       	ldd	r30, Y+5	; 0x05
 150:	fe 81       	ldd	r31, Y+6	; 0x06
 152:	94 81       	ldd	r25, Z+4	; 0x04
 154:	83 81       	ldd	r24, Z+3	; 0x03
 156:	98 17       	cp	r25, r24
 158:	01 f0       	breq	.+0      	; 0x15a <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x15a>
 15a:	87 81       	ldd	r24, Z+7	; 0x07
 15c:	85 31       	cpi	r24, 0x15	; 21
 15e:	00 f4       	brcc	.+0      	; 0x160 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x160>
 160:	cf 01       	movw	r24, r30
 162:	60 e0       	ldi	r22, 0x00	; 0
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
		//delay( 3000 );
	}

	// ---

	if( !compareCRCsumWithCRCsumCalculatedOnTwoIncommingBytes( crcStream->getCRC() ) )
 16a:	8f 81       	ldd	r24, Y+7	; 0x07
 16c:	98 85       	ldd	r25, Y+8	; 0x08
 16e:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
 172:	bc 01       	movw	r22, r24
 174:	ce 01       	movw	r24, r28
 176:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
 17a:	88 23       	and	r24, r24
 17c:	01 f4       	brne	.+0      	; 0x17e <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x17e>
	{
		wln( "incomming CRC (in RECV_ACK) and our locally counted CRC does not match!" )
 17e:	8c 81       	ldd	r24, Y+4	; 0x04
 180:	8f 31       	cpi	r24, 0x1F	; 31
 182:	00 f4       	brcc	.+0      	; 0x184 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x184>
 184:	ce 01       	movw	r24, r28
 186:	02 96       	adiw	r24, 0x02	; 2
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	70 e0       	ldi	r23, 0x00	; 0
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	50 e0       	ldi	r21, 0x00	; 0
 190:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
 194:	0f 92       	push	r0
 196:	0f 92       	push	r0
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	ad b7       	in	r26, 0x3d	; 61
 19e:	be b7       	in	r27, 0x3e	; 62
 1a0:	12 96       	adiw	r26, 0x02	; 2
 1a2:	9c 93       	st	X, r25
 1a4:	8e 93       	st	-X, r24
 1a6:	11 97       	sbiw	r26, 0x01	; 1
 1a8:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	ed b7       	in	r30, 0x3d	; 61
 1b2:	fe b7       	in	r31, 0x3e	; 62
 1b4:	92 83       	std	Z+2, r25	; 0x02
 1b6:	81 83       	std	Z+1, r24	; 0x01
 1b8:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0

		delay( 3000 ); // todo temporary
 1c0:	68 eb       	ldi	r22, 0xB8	; 184
 1c2:	7b e0       	ldi	r23, 0x0B	; 11
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>

		inputBuffer->setPositionAndLimit( positionBefore , limitBefore );
 1cc:	8d 81       	ldd	r24, Y+5	; 0x05
 1ce:	9e 81       	ldd	r25, Y+6	; 0x06
 1d0:	6f 2d       	mov	r22, r15
 1d2:	40 2f       	mov	r20, r16
 1d4:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>
		inputBuffer->printReport( "AFTER CRC fail" ); // todo tmp
 1d8:	8d 81       	ldd	r24, Y+5	; 0x05
 1da:	9e 81       	ldd	r25, Y+6	; 0x06
 1dc:	dc 01       	movw	r26, r24
 1de:	17 96       	adiw	r26, 0x07	; 7
 1e0:	2c 91       	ld	r18, X
 1e2:	17 97       	sbiw	r26, 0x07	; 7
 1e4:	25 31       	cpi	r18, 0x15	; 21
 1e6:	00 f4       	brcc	.+0      	; 0x1e8 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x1e8>
 1e8:	60 e0       	ldi	r22, 0x00	; 0
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	0e 94 00 00 	call	0	; 0x0 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv>

		//read_error = -5;
		//return;

		return subTaskOnFail;
 1f0:	8d 85       	ldd	r24, Y+13	; 0x0d
 1f2:	9e 85       	ldd	r25, Y+14	; 0x0e
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <_ZN31RWSubTaskReadRECVACKCommandData14executeSubTaskEv+0x1f6>
	}
	else
	{
		rwCommandSerialNumber->commandSerialNumber++;
 1f6:	e9 85       	ldd	r30, Y+9	; 0x09
 1f8:	fa 85       	ldd	r31, Y+10	; 0x0a
 1fa:	80 81       	ld	r24, Z
 1fc:	8f 5f       	subi	r24, 0xFF	; 255
 1fe:	80 83       	st	Z, r24
		return subTaskOnSuccess;
 200:	8b 85       	ldd	r24, Y+11	; 0x0b
 202:	9c 85       	ldd	r25, Y+12	; 0x0c
	}

	// ---
}
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	1f 91       	pop	r17
 20a:	0f 91       	pop	r16
 20c:	ff 90       	pop	r15
 20e:	08 95       	ret

RWSubTaskReadRECVACKCommandHeader.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000019  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000004d  2**0
                  ALLOC
  3 .stab         0000090c  00000000  00000000  00000050  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00004995  00000000  00000000  0000095c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN33RWSubTaskReadRECVACKCommandHeader14getSubTaskNameEv 00000006  00000000  00000000  000052f1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN33RWSubTaskReadRECVACKCommandHeader18resetInternalStateEv 00000002  00000000  00000000  000052f7  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN33RWSubTaskReadRECVACKCommandHeader15getStateTimeoutEv 0000000a  00000000  00000000  000052f9  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN33RWSubTaskReadRECVACKCommandHeader20getStateAfterTimeoutEv 00000008  00000000  00000000  00005303  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv 0000011a  00000000  00000000  0000530b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN33RWSubTaskReadRECVACKCommandHeaderC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP31RWSubTaskReadRECVACKCommandDataP9RWSubTask 00000070  00000000  00000000  00005425  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .rodata._ZTV33RWSubTaskReadRECVACKCommandHeader 0000000e  00000000  00000000  00005495  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  000054a3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .progmem.data 0000001f  00000000  00000000  000054b1  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN33RWSubTaskReadRECVACKCommandHeader14getSubTaskNameEv:

00000000 <_ZN33RWSubTaskReadRECVACKCommandHeader14getSubTaskNameEv>:

#include "RWSubTaskReadRECVACKCommandHeader.h"

// =================================================

RWSubTaskReadRECVACKCommandHeader::RWSubTaskReadRECVACKCommandHeader( AnyBuffer< byte , byte >* _inputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream , RWCommandSerialNumber* _rwCommandSerialNumber , RWSubTaskWaitForData* _rwSubTaskWaitForData , RWSubTaskReadRECVACKCommandData* _rwSubTaskReadRECVACKCommandData , RWSubTask* _subTaskOnFail ) : dp( PSTR( "RWSubTaskSendRECVCommandHeader" ) , DEBUG_LEVEL_ALL )
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskReadRECVACKCommandHeader18resetInternalStateEv:

00000000 <_ZN33RWSubTaskReadRECVACKCommandHeader18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskReadRECVACKCommandHeader15getStateTimeoutEv:

00000000 <_ZN33RWSubTaskReadRECVACKCommandHeader15getStateTimeoutEv>:
   0:	60 ed       	ldi	r22, 0xD0	; 208
   2:	77 e0       	ldi	r23, 0x07	; 7
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskReadRECVACKCommandHeader20getStateAfterTimeoutEv:

00000000 <_ZN33RWSubTaskReadRECVACKCommandHeader20getStateAfterTimeoutEv>:
   0:	fc 01       	movw	r30, r24
   2:	87 85       	ldd	r24, Z+15	; 0x0f
   4:	90 89       	ldd	r25, Z+16	; 0x10
   6:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv:

00000000 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	8f 81       	ldd	r24, Y+7	; 0x07
  10:	98 85       	ldd	r25, Y+8	; 0x08
  12:	0e 94 00 00 	call	0	; 0x0 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv>
  16:	8f 81       	ldd	r24, Y+7	; 0x07
  18:	98 85       	ldd	r25, Y+8	; 0x08
  1a:	dc 01       	movw	r26, r24
  1c:	ed 91       	ld	r30, X+
  1e:	fc 91       	ld	r31, X
  20:	06 80       	ldd	r0, Z+6	; 0x06
  22:	f7 81       	ldd	r31, Z+7	; 0x07
  24:	e0 2d       	mov	r30, r0
  26:	19 95       	eicall
  28:	82 30       	cpi	r24, 0x02	; 2
  2a:	91 05       	cpc	r25, r1
  2c:	01 f0       	breq	.+0      	; 0x2e <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0x2e>
  2e:	00 c0       	rjmp	.+0      	; 0x30 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0x30>
  30:	8f 81       	ldd	r24, Y+7	; 0x07
  32:	98 85       	ldd	r25, Y+8	; 0x08
  34:	dc 01       	movw	r26, r24
  36:	ed 91       	ld	r30, X+
  38:	fc 91       	ld	r31, X
{
	inputBuffer = _inputBuffer;
  3a:	06 80       	ldd	r0, Z+6	; 0x06
  3c:	f7 81       	ldd	r31, Z+7	; 0x07
	crcStream = _crcStream;
  3e:	e0 2d       	mov	r30, r0
  40:	19 95       	eicall
	rwCommandSerialNumber = _rwCommandSerialNumber;
  42:	e9 85       	ldd	r30, Y+9	; 0x09
  44:	fa 85       	ldd	r31, Y+10	; 0x0a
	rwSubTaskWaitForData = _rwSubTaskWaitForData;
  46:	20 81       	ld	r18, Z
  48:	30 e0       	ldi	r19, 0x00	; 0
	rwSubTaskReadRECVACKCommandData = _rwSubTaskReadRECVACKCommandData;
  4a:	82 17       	cp	r24, r18
  4c:	93 07       	cpc	r25, r19
	subTaskOnFail = _subTaskOnFail;
  4e:	01 f4       	brne	.+0      	; 0x50 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0x50>
  50:	8f 81       	ldd	r24, Y+7	; 0x07
}
  52:	98 85       	ldd	r25, Y+8	; 0x08
  54:	dc 01       	movw	r26, r24
  56:	ed 91       	ld	r30, X+
  58:	fc 91       	ld	r31, X
  5a:	06 80       	ldd	r0, Z+6	; 0x06
  5c:	f7 81       	ldd	r31, Z+7	; 0x07
  5e:	e0 2d       	mov	r30, r0
  60:	19 95       	eicall
  62:	00 97       	sbiw	r24, 0x00	; 0
  64:	01 f4       	brne	.+0      	; 0x66 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0x66>
  66:	8f 81       	ldd	r24, Y+7	; 0x07
  68:	98 85       	ldd	r25, Y+8	; 0x08
  6a:	dc 01       	movw	r26, r24
  6c:	ed 91       	ld	r30, X+
  6e:	fc 91       	ld	r31, X
  70:	06 80       	ldd	r0, Z+6	; 0x06
  72:	f7 81       	ldd	r31, Z+7	; 0x07
  74:	e0 2d       	mov	r30, r0
  76:	19 95       	eicall
  78:	00 97       	sbiw	r24, 0x00	; 0
  7a:	01 f4       	brne	.+0      	; 0x7c <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0x7c>
  7c:	8f 81       	ldd	r24, Y+7	; 0x07
  7e:	98 85       	ldd	r25, Y+8	; 0x08
  80:	dc 01       	movw	r26, r24
  82:	ed 91       	ld	r30, X+
  84:	fc 91       	ld	r31, X
  86:	06 80       	ldd	r0, Z+6	; 0x06
  88:	f7 81       	ldd	r31, Z+7	; 0x07
  8a:	e0 2d       	mov	r30, r0
  8c:	19 95       	eicall
  8e:	7c 01       	movw	r14, r24
  90:	8f 81       	ldd	r24, Y+7	; 0x07
  92:	98 85       	ldd	r25, Y+8	; 0x08
  94:	dc 01       	movw	r26, r24
  96:	ed 91       	ld	r30, X+
  98:	fc 91       	ld	r31, X
  9a:	06 80       	ldd	r0, Z+6	; 0x06
  9c:	f7 81       	ldd	r31, Z+7	; 0x07
  9e:	e0 2d       	mov	r30, r0
  a0:	19 95       	eicall
  a2:	18 2f       	mov	r17, r24
  a4:	00 e0       	ldi	r16, 0x00	; 0
  a6:	0e 0d       	add	r16, r14
  a8:	1f 1d       	adc	r17, r15
  aa:	ed 81       	ldd	r30, Y+5	; 0x05
  ac:	fe 81       	ldd	r31, Y+6	; 0x06
  ae:	82 81       	ldd	r24, Z+2	; 0x02
  b0:	94 81       	ldd	r25, Z+4	; 0x04
  b2:	89 1b       	sub	r24, r25
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	80 17       	cp	r24, r16
  b8:	91 07       	cpc	r25, r17
  ba:	00 f4       	brcc	.+0      	; 0xbc <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0xbc>
  bc:	8f 85       	ldd	r24, Y+15	; 0x0f
  be:	98 89       	ldd	r25, Y+16	; 0x10
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0xc2>
  c2:	8d 85       	ldd	r24, Y+13	; 0x0d
  c4:	9e 85       	ldd	r25, Y+14	; 0x0e
  c6:	b8 01       	movw	r22, r16
  c8:	0e 94 00 00 	call	0	; 0x0 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv>
  cc:	8f 81       	ldd	r24, Y+7	; 0x07
  ce:	98 85       	ldd	r25, Y+8	; 0x08
  d0:	dc 01       	movw	r26, r24
  d2:	ed 91       	ld	r30, X+
  d4:	fc 91       	ld	r31, X
  d6:	04 80       	ldd	r0, Z+4	; 0x04
  d8:	f5 81       	ldd	r31, Z+5	; 0x05
  da:	e0 2d       	mov	r30, r0
  dc:	19 95       	eicall
  de:	b8 01       	movw	r22, r16
  e0:	6e 5f       	subi	r22, 0xFE	; 254
  e2:	7f 4f       	sbci	r23, 0xFF	; 255
  e4:	86 17       	cp	r24, r22
  e6:	97 07       	cpc	r25, r23
  e8:	00 f0       	brcs	.+0      	; 0xea <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0xea>
  ea:	8d 85       	ldd	r24, Y+13	; 0x0d
  ec:	9e 85       	ldd	r25, Y+14	; 0x0e
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv+0xf0>
  f0:	4d 85       	ldd	r20, Y+13	; 0x0d
  f2:	5e 85       	ldd	r21, Y+14	; 0x0e
  f4:	ef 84       	ldd	r14, Y+15	; 0x0f
  f6:	f8 88       	ldd	r15, Y+16	; 0x10
  f8:	8b 85       	ldd	r24, Y+11	; 0x0b
  fa:	9c 85       	ldd	r25, Y+12	; 0x0c
  fc:	00 ed       	ldi	r16, 0xD0	; 208
  fe:	17 e0       	ldi	r17, 0x07	; 7
 100:	20 e0       	ldi	r18, 0x00	; 0
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	0e 94 00 00 	call	0	; 0x0 <_ZN33RWSubTaskReadRECVACKCommandHeader14executeSubTaskEv>
 108:	8b 85       	ldd	r24, Y+11	; 0x0b
 10a:	9c 85       	ldd	r25, Y+12	; 0x0c
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	1f 91       	pop	r17
 112:	0f 91       	pop	r16
 114:	ff 90       	pop	r15
 116:	ef 90       	pop	r14
 118:	08 95       	ret

Disassembly of section .text._ZN33RWSubTaskReadRECVACKCommandHeaderC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP31RWSubTaskReadRECVACKCommandDataP9RWSubTask:

00000000 <_ZN33RWSubTaskReadRECVACKCommandHeaderC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP31RWSubTaskReadRECVACKCommandDataP9RWSubTask>:

#include "RWSubTaskReadRECVACKCommandHeader.h"

// =================================================

RWSubTaskReadRECVACKCommandHeader::RWSubTaskReadRECVACKCommandHeader( AnyBuffer< byte , byte >* _inputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream , RWCommandSerialNumber* _rwCommandSerialNumber , RWSubTaskWaitForData* _rwSubTaskWaitForData , RWSubTaskReadRECVACKCommandData* _rwSubTaskReadRECVACKCommandData , RWSubTask* _subTaskOnFail ) : dp( PSTR( "RWSubTaskSendRECVCommandHeader" ) , DEBUG_LEVEL_ALL )
   0:	6f 92       	push	r6
   2:	7f 92       	push	r7
   4:	8f 92       	push	r8
   6:	9f 92       	push	r9
   8:	af 92       	push	r10
   a:	bf 92       	push	r11
   c:	cf 92       	push	r12
   e:	df 92       	push	r13
  10:	ef 92       	push	r14
  12:	ff 92       	push	r15
  14:	0f 93       	push	r16
  16:	1f 93       	push	r17
  18:	cf 93       	push	r28
  1a:	df 93       	push	r29
  1c:	ec 01       	movw	r28, r24
  1e:	3b 01       	movw	r6, r22
  20:	4a 01       	movw	r8, r20
  22:	59 01       	movw	r10, r18
  24:	20 e0       	ldi	r18, 0x00	; 0
  26:	30 e0       	ldi	r19, 0x00	; 0
  28:	fc 01       	movw	r30, r24
  2a:	21 93       	st	Z+, r18
  2c:	31 93       	st	Z+, r19
  2e:	cf 01       	movw	r24, r30
  30:	60 e0       	ldi	r22, 0x00	; 0
  32:	70 e0       	ldi	r23, 0x00	; 0
  34:	4a e0       	ldi	r20, 0x0A	; 10
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN33RWSubTaskReadRECVACKCommandHeaderC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP31RWSubTaskReadRECVACKCommandDataP9RWSubTask>
{
	inputBuffer = _inputBuffer;
  3a:	7e 82       	std	Y+6, r7	; 0x06
  3c:	6d 82       	std	Y+5, r6	; 0x05
	crcStream = _crcStream;
  3e:	98 86       	std	Y+8, r9	; 0x08
  40:	8f 82       	std	Y+7, r8	; 0x07
	rwCommandSerialNumber = _rwCommandSerialNumber;
  42:	ba 86       	std	Y+10, r11	; 0x0a
  44:	a9 86       	std	Y+9, r10	; 0x09
	rwSubTaskWaitForData = _rwSubTaskWaitForData;
  46:	1c 87       	std	Y+12, r17	; 0x0c
  48:	0b 87       	std	Y+11, r16	; 0x0b
	rwSubTaskReadRECVACKCommandData = _rwSubTaskReadRECVACKCommandData;
  4a:	fe 86       	std	Y+14, r15	; 0x0e
  4c:	ed 86       	std	Y+13, r14	; 0x0d
	subTaskOnFail = _subTaskOnFail;
  4e:	d8 8a       	std	Y+16, r13	; 0x10
  50:	cf 86       	std	Y+15, r12	; 0x0f
}
  52:	df 91       	pop	r29
  54:	cf 91       	pop	r28
  56:	1f 91       	pop	r17
  58:	0f 91       	pop	r16
  5a:	ff 90       	pop	r15
  5c:	ef 90       	pop	r14
  5e:	df 90       	pop	r13
  60:	cf 90       	pop	r12
  62:	bf 90       	pop	r11
  64:	af 90       	pop	r10
  66:	9f 90       	pop	r9
  68:	8f 90       	pop	r8
  6a:	7f 90       	pop	r7
  6c:	6f 90       	pop	r6
  6e:	08 95       	ret

RWSubTaskReadSENDACKCommand.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000013  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000047  2**0
                  ALLOC
  3 .stab         00000a08  00000000  00000000  00000048  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000049c2  00000000  00000000  00000a50  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN27RWSubTaskReadSENDACKCommand14getSubTaskNameEv 00000006  00000000  00000000  00005412  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN27RWSubTaskReadSENDACKCommand18resetInternalStateEv 00000002  00000000  00000000  00005418  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN27RWSubTaskReadSENDACKCommand15getStateTimeoutEv 0000000a  00000000  00000000  0000541a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN27RWSubTaskReadSENDACKCommand20getStateAfterTimeoutEv 00000008  00000000  00000000  00005424  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv 0000013c  00000000  00000000  0000542c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN27RWSubTaskReadSENDACKCommandC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP9RWSubTaskS8_ 00000064  00000000  00000000  00005568  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask 0000007e  00000000  00000000  000055cc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .rodata._ZTV27RWSubTaskReadSENDACKCommand 0000000e  00000000  00000000  0000564a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  00005658  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 14 .progmem.data 00000082  00000000  00000000  00005666  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN27RWSubTaskReadSENDACKCommand14getSubTaskNameEv:

00000000 <_ZN27RWSubTaskReadSENDACKCommand14getSubTaskNameEv>:
}

// =================================================

void RWSubTaskReadSENDACKCommand::setWork( byte _sendDataSize , RWSubTask* _subTaskOnRetry )
{
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN27RWSubTaskReadSENDACKCommand18resetInternalStateEv:

00000000 <_ZN27RWSubTaskReadSENDACKCommand18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN27RWSubTaskReadSENDACKCommand15getStateTimeoutEv:

00000000 <_ZN27RWSubTaskReadSENDACKCommand15getStateTimeoutEv>:
   0:	60 ed       	ldi	r22, 0xD0	; 208
   2:	77 e0       	ldi	r23, 0x07	; 7
   4:	80 e0       	ldi	r24, 0x00	; 0
	static const PROGMEM prog_char functionName[] = "setWork";

	sendDataSize = _sendDataSize;
   6:	90 e0       	ldi	r25, 0x00	; 0
	//retryNumber = _retryNumber;
	subTaskOnRetry = _subTaskOnRetry;
   8:	08 95       	ret

Disassembly of section .text._ZN27RWSubTaskReadSENDACKCommand20getStateAfterTimeoutEv:

00000000 <_ZN27RWSubTaskReadSENDACKCommand20getStateAfterTimeoutEv>:
}

// =================================================

void RWSubTaskReadSENDACKCommand::setWork( byte _sendDataSize , RWSubTask* _subTaskOnRetry )
{
   0:	fc 01       	movw	r30, r24
   2:	87 85       	ldd	r24, Z+15	; 0x0f
   4:	90 89       	ldd	r25, Z+16	; 0x10
	static const PROGMEM prog_char functionName[] = "setWork";

	sendDataSize = _sendDataSize;
   6:	08 95       	ret

Disassembly of section .text._ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv:

00000000 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv>:
}

// =================================================

void RWSubTaskReadSENDACKCommand::setWork( byte _sendDataSize , RWSubTask* _subTaskOnRetry )
{
   0:	1f 93       	push	r17
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
	static const PROGMEM prog_char functionName[] = "setWork";

	sendDataSize = _sendDataSize;
   6:	ec 01       	movw	r28, r24
	//retryNumber = _retryNumber;
	subTaskOnRetry = _subTaskOnRetry;
   8:	ef 81       	ldd	r30, Y+7	; 0x07
   a:	f8 85       	ldd	r31, Y+8	; 0x08

	iln( "setting sendDataSize to %u, do retry on fail = %u" , sendDataSize , (subTaskOnRetry != NULL ? 1 : 0) )
   c:	84 85       	ldd	r24, Z+12	; 0x0c
   e:	95 85       	ldd	r25, Z+13	; 0x0d
  10:	dc 01       	movw	r26, r24
  12:	ed 91       	ld	r30, X+
  14:	fc 91       	ld	r31, X
  16:	06 80       	ldd	r0, Z+6	; 0x06
  18:	f7 81       	ldd	r31, Z+7	; 0x07
  1a:	e0 2d       	mov	r30, r0
  1c:	19 95       	eicall
  1e:	81 30       	cpi	r24, 0x01	; 1
  20:	91 05       	cpc	r25, r1
  22:	01 f0       	breq	.+0      	; 0x24 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x24>
  24:	00 c0       	rjmp	.+0      	; 0x26 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x26>
  26:	ef 81       	ldd	r30, Y+7	; 0x07
  28:	f8 85       	ldd	r31, Y+8	; 0x08
  2a:	84 85       	ldd	r24, Z+12	; 0x0c
  2c:	95 85       	ldd	r25, Z+13	; 0x0d
  2e:	dc 01       	movw	r26, r24
  30:	ed 91       	ld	r30, X+
  32:	fc 91       	ld	r31, X
  34:	06 80       	ldd	r0, Z+6	; 0x06
  36:	f7 81       	ldd	r31, Z+7	; 0x07
  38:	e0 2d       	mov	r30, r0
  3a:	19 95       	eicall
  3c:	e9 85       	ldd	r30, Y+9	; 0x09
  3e:	fa 85       	ldd	r31, Y+10	; 0x0a
  40:	20 81       	ld	r18, Z
  42:	30 e0       	ldi	r19, 0x00	; 0
  44:	82 17       	cp	r24, r18
  46:	93 07       	cpc	r25, r19
  48:	01 f0       	breq	.+0      	; 0x4a <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x4a>
  4a:	00 c0       	rjmp	.+0      	; 0x4c <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x4c>
  4c:	ef 81       	ldd	r30, Y+7	; 0x07
  4e:	f8 85       	ldd	r31, Y+8	; 0x08
  50:	84 85       	ldd	r24, Z+12	; 0x0c
  52:	95 85       	ldd	r25, Z+13	; 0x0d
  54:	dc 01       	movw	r26, r24
  56:	ed 91       	ld	r30, X+
  58:	fc 91       	ld	r31, X
  5a:	06 80       	ldd	r0, Z+6	; 0x06
  5c:	f7 81       	ldd	r31, Z+7	; 0x07
  5e:	e0 2d       	mov	r30, r0
  60:	19 95       	eicall
  62:	00 97       	sbiw	r24, 0x00	; 0
  64:	01 f0       	breq	.+0      	; 0x66 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x66>
  66:	00 c0       	rjmp	.+0      	; 0x68 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x68>
  68:	ef 81       	ldd	r30, Y+7	; 0x07
  6a:	f8 85       	ldd	r31, Y+8	; 0x08
  6c:	84 85       	ldd	r24, Z+12	; 0x0c
  6e:	95 85       	ldd	r25, Z+13	; 0x0d
  70:	dc 01       	movw	r26, r24
  72:	ed 91       	ld	r30, X+
  74:	fc 91       	ld	r31, X
  76:	06 80       	ldd	r0, Z+6	; 0x06
}
  78:	f7 81       	ldd	r31, Z+7	; 0x07
  7a:	e0 2d       	mov	r30, r0
  7c:	19 95       	eicall
  7e:	00 97       	sbiw	r24, 0x00	; 0
  80:	01 f4       	brne	.+0      	; 0x82 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x82>
  82:	ef 81       	ldd	r30, Y+7	; 0x07
  84:	f8 85       	ldd	r31, Y+8	; 0x08
  86:	84 85       	ldd	r24, Z+12	; 0x0c
  88:	95 85       	ldd	r25, Z+13	; 0x0d
  8a:	dc 01       	movw	r26, r24
  8c:	ed 91       	ld	r30, X+
  8e:	fc 91       	ld	r31, X
  90:	06 80       	ldd	r0, Z+6	; 0x06
  92:	f7 81       	ldd	r31, Z+7	; 0x07
  94:	e0 2d       	mov	r30, r0
  96:	19 95       	eicall
  98:	18 2f       	mov	r17, r24
  9a:	88 23       	and	r24, r24
  9c:	01 f0       	breq	.+0      	; 0x9e <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x9e>
  9e:	8c 81       	ldd	r24, Y+4	; 0x04
  a0:	8f 31       	cpi	r24, 0x1F	; 31
  a2:	00 f4       	brcc	.+0      	; 0xa4 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0xa4>
  a4:	ce 01       	movw	r24, r28
  a6:	02 96       	adiw	r24, 0x02	; 2
  a8:	60 e0       	ldi	r22, 0x00	; 0
  aa:	70 e0       	ldi	r23, 0x00	; 0
  ac:	40 e0       	ldi	r20, 0x00	; 0
  ae:	50 e0       	ldi	r21, 0x00	; 0
  b0:	0e 94 00 00 	call	0	; 0x0 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv>
  b4:	00 d0       	rcall	.+0      	; 0xb6 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0xb6>
  b6:	0f 92       	push	r0
  b8:	ed b7       	in	r30, 0x3d	; 61
  ba:	fe b7       	in	r31, 0x3e	; 62
  bc:	31 96       	adiw	r30, 0x01	; 1
  be:	80 e0       	ldi	r24, 0x00	; 0
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	ad b7       	in	r26, 0x3d	; 61
  c4:	be b7       	in	r27, 0x3e	; 62
  c6:	12 96       	adiw	r26, 0x02	; 2
  c8:	9c 93       	st	X, r25
  ca:	8e 93       	st	-X, r24
  cc:	11 97       	sbiw	r26, 0x01	; 1
  ce:	12 83       	std	Z+2, r17	; 0x02
  d0:	13 82       	std	Z+3, r1	; 0x03
  d2:	0e 94 00 00 	call	0	; 0x0 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv>
  d6:	0f 90       	pop	r0
  d8:	0f 90       	pop	r0
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	ed b7       	in	r30, 0x3d	; 61
  e0:	fe b7       	in	r31, 0x3e	; 62
  e2:	92 83       	std	Z+2, r25	; 0x02
  e4:	81 83       	std	Z+1, r24	; 0x01
  e6:	0e 94 00 00 	call	0	; 0x0 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv>
  ea:	0f 90       	pop	r0
  ec:	0f 90       	pop	r0
  ee:	8b 85       	ldd	r24, Y+11	; 0x0b
  f0:	9c 85       	ldd	r25, Y+12	; 0x0c
  f2:	00 97       	sbiw	r24, 0x00	; 0
  f4:	01 f4       	brne	.+0      	; 0xf6 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0xf6>
  f6:	8f 85       	ldd	r24, Y+15	; 0x0f
  f8:	98 89       	ldd	r25, Y+16	; 0x10
  fa:	00 c0       	rjmp	.+0      	; 0xfc <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0xfc>
  fc:	e9 85       	ldd	r30, Y+9	; 0x09
  fe:	fa 85       	ldd	r31, Y+10	; 0x0a
 100:	80 81       	ld	r24, Z
 102:	8f 5f       	subi	r24, 0xFF	; 255
 104:	80 83       	st	Z, r24
 106:	ed 81       	ldd	r30, Y+5	; 0x05
 108:	fe 81       	ldd	r31, Y+6	; 0x06
 10a:	89 89       	ldd	r24, Y+17	; 0x11
 10c:	23 81       	ldd	r18, Z+3	; 0x03
 10e:	94 81       	ldd	r25, Z+4	; 0x04
 110:	82 0f       	add	r24, r18
 112:	98 17       	cp	r25, r24
 114:	00 f4       	brcc	.+0      	; 0x116 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x116>
 116:	89 2f       	mov	r24, r25
 118:	83 83       	std	Z+3, r24	; 0x03
 11a:	ed 81       	ldd	r30, Y+5	; 0x05
 11c:	fe 81       	ldd	r31, Y+6	; 0x06
 11e:	83 81       	ldd	r24, Z+3	; 0x03
 120:	94 81       	ldd	r25, Z+4	; 0x04
 122:	89 17       	cp	r24, r25
 124:	01 f4       	brne	.+0      	; 0x126 <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x126>
 126:	92 81       	ldd	r25, Z+2	; 0x02
 128:	89 17       	cp	r24, r25
 12a:	01 f4       	brne	.+0      	; 0x12c <_ZN27RWSubTaskReadSENDACKCommand14executeSubTaskEv+0x12c>
 12c:	14 82       	std	Z+4, r1	; 0x04
 12e:	13 82       	std	Z+3, r1	; 0x03
 130:	8d 85       	ldd	r24, Y+13	; 0x0d
 132:	9e 85       	ldd	r25, Y+14	; 0x0e
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	1f 91       	pop	r17
 13a:	08 95       	ret

Disassembly of section .text._ZN27RWSubTaskReadSENDACKCommandC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP9RWSubTaskS8_:

00000000 <_ZN27RWSubTaskReadSENDACKCommandC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP9RWSubTaskS8_>:
}

// =================================================

void RWSubTaskReadSENDACKCommand::setWork( byte _sendDataSize , RWSubTask* _subTaskOnRetry )
{
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
	static const PROGMEM prog_char functionName[] = "setWork";

	sendDataSize = _sendDataSize;
   6:	bf 92       	push	r11
	//retryNumber = _retryNumber;
	subTaskOnRetry = _subTaskOnRetry;
   8:	cf 92       	push	r12
   a:	df 92       	push	r13

	iln( "setting sendDataSize to %u, do retry on fail = %u" , sendDataSize , (subTaskOnRetry != NULL ? 1 : 0) )
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	ec 01       	movw	r28, r24
  1a:	4b 01       	movw	r8, r22
  1c:	5a 01       	movw	r10, r20
  1e:	69 01       	movw	r12, r18
  20:	20 e0       	ldi	r18, 0x00	; 0
  22:	30 e0       	ldi	r19, 0x00	; 0
  24:	fc 01       	movw	r30, r24
  26:	21 93       	st	Z+, r18
  28:	31 93       	st	Z+, r19
  2a:	cf 01       	movw	r24, r30
  2c:	60 e0       	ldi	r22, 0x00	; 0
  2e:	70 e0       	ldi	r23, 0x00	; 0
  30:	4a e0       	ldi	r20, 0x0A	; 10
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN27RWSubTaskReadSENDACKCommandC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP9RWSubTaskS8_>
  36:	9e 82       	std	Y+6, r9	; 0x06
  38:	8d 82       	std	Y+5, r8	; 0x05
  3a:	b8 86       	std	Y+8, r11	; 0x08
  3c:	af 82       	std	Y+7, r10	; 0x07
  3e:	da 86       	std	Y+10, r13	; 0x0a
  40:	c9 86       	std	Y+9, r12	; 0x09
  42:	1e 87       	std	Y+14, r17	; 0x0e
  44:	0d 87       	std	Y+13, r16	; 0x0d
  46:	f8 8a       	std	Y+16, r15	; 0x10
  48:	ef 86       	std	Y+15, r14	; 0x0f
  4a:	df 91       	pop	r29
  4c:	cf 91       	pop	r28
  4e:	1f 91       	pop	r17
  50:	0f 91       	pop	r16
  52:	ff 90       	pop	r15
  54:	ef 90       	pop	r14
  56:	df 90       	pop	r13
  58:	cf 90       	pop	r12
  5a:	bf 90       	pop	r11
  5c:	af 90       	pop	r10
  5e:	9f 90       	pop	r9
  60:	8f 90       	pop	r8
  62:	08 95       	ret

Disassembly of section .text._ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask:

00000000 <_ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask>:
}

// =================================================

void RWSubTaskReadSENDACKCommand::setWork( byte _sendDataSize , RWSubTask* _subTaskOnRetry )
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
	static const PROGMEM prog_char functionName[] = "setWork";

	sendDataSize = _sendDataSize;
   6:	69 8b       	std	Y+17, r22	; 0x11
	//retryNumber = _retryNumber;
	subTaskOnRetry = _subTaskOnRetry;
   8:	5c 87       	std	Y+12, r21	; 0x0c
   a:	4b 87       	std	Y+11, r20	; 0x0b

	iln( "setting sendDataSize to %u, do retry on fail = %u" , sendDataSize , (subTaskOnRetry != NULL ? 1 : 0) )
   c:	8c 81       	ldd	r24, Y+4	; 0x04
   e:	85 31       	cpi	r24, 0x15	; 21
  10:	00 f4       	brcc	.+0      	; 0x12 <_ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask+0x12>
  12:	ce 01       	movw	r24, r28
  14:	02 96       	adiw	r24, 0x02	; 2
  16:	60 e0       	ldi	r22, 0x00	; 0
  18:	70 e0       	ldi	r23, 0x00	; 0
  1a:	40 e0       	ldi	r20, 0x00	; 0
  1c:	50 e0       	ldi	r21, 0x00	; 0
  1e:	0e 94 00 00 	call	0	; 0x0 <_ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask>
  22:	00 d0       	rcall	.+0      	; 0x24 <_ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask+0x24>
  24:	00 d0       	rcall	.+0      	; 0x26 <_ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask+0x26>
  26:	ed b7       	in	r30, 0x3d	; 61
  28:	fe b7       	in	r31, 0x3e	; 62
  2a:	31 96       	adiw	r30, 0x01	; 1
  2c:	80 e0       	ldi	r24, 0x00	; 0
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	ad b7       	in	r26, 0x3d	; 61
  32:	be b7       	in	r27, 0x3e	; 62
  34:	12 96       	adiw	r26, 0x02	; 2
  36:	9c 93       	st	X, r25
  38:	8e 93       	st	-X, r24
  3a:	11 97       	sbiw	r26, 0x01	; 1
  3c:	89 89       	ldd	r24, Y+17	; 0x11
  3e:	82 83       	std	Z+2, r24	; 0x02
  40:	13 82       	std	Z+3, r1	; 0x03
  42:	81 e0       	ldi	r24, 0x01	; 1
  44:	90 e0       	ldi	r25, 0x00	; 0
  46:	2b 85       	ldd	r18, Y+11	; 0x0b
  48:	3c 85       	ldd	r19, Y+12	; 0x0c
  4a:	21 15       	cp	r18, r1
  4c:	31 05       	cpc	r19, r1
  4e:	01 f4       	brne	.+0      	; 0x50 <_ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask+0x50>
  50:	80 e0       	ldi	r24, 0x00	; 0
  52:	90 e0       	ldi	r25, 0x00	; 0
  54:	95 83       	std	Z+5, r25	; 0x05
  56:	84 83       	std	Z+4, r24	; 0x04
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask>
  5c:	0f 90       	pop	r0
  5e:	0f 90       	pop	r0
  60:	0f 90       	pop	r0
  62:	0f 90       	pop	r0
  64:	80 e0       	ldi	r24, 0x00	; 0
  66:	90 e0       	ldi	r25, 0x00	; 0
  68:	ed b7       	in	r30, 0x3d	; 61
  6a:	fe b7       	in	r31, 0x3e	; 62
  6c:	92 83       	std	Z+2, r25	; 0x02
  6e:	81 83       	std	Z+1, r24	; 0x01
  70:	0e 94 00 00 	call	0	; 0x0 <_ZN27RWSubTaskReadSENDACKCommand7setWorkEhP9RWSubTask>
  74:	0f 90       	pop	r0
  76:	0f 90       	pop	r0
}
  78:	df 91       	pop	r29
  7a:	cf 91       	pop	r28
  7c:	08 95       	ret

RWSubTaskSendRECVCommand.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000044  2**0
                  ALLOC
  3 .stab         0000093c  00000000  00000000  00000044  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00004920  00000000  00000000  00000980  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN24RWSubTaskSendRECVCommand14getSubTaskNameEv 00000006  00000000  00000000  000052a0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN24RWSubTaskSendRECVCommand18resetInternalStateEv 00000002  00000000  00000000  000052a6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN24RWSubTaskSendRECVCommand15getStateTimeoutEv 0000000a  00000000  00000000  000052a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN24RWSubTaskSendRECVCommand20getStateAfterTimeoutEv 00000008  00000000  00000000  000052b2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN24RWSubTaskSendRECVCommand14executeSubTaskEv 000000de  00000000  00000000  000052ba  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN24RWSubTaskSendRECVCommandC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP33RWSubTaskReadRECVACKCommandHeaderP9RWSubTask 0000007a  00000000  00000000  00005398  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .rodata._ZTV24RWSubTaskSendRECVCommand 0000000e  00000000  00000000  00005412  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  00005420  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .progmem.data 00000019  00000000  00000000  0000542e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN24RWSubTaskSendRECVCommand14getSubTaskNameEv:

00000000 <_ZN24RWSubTaskSendRECVCommand14getSubTaskNameEv>:

#include "RWSubTaskSendRECVCommand.h"

// =================================================

RWSubTaskSendRECVCommand::RWSubTaskSendRECVCommand( AnyBuffer< byte , byte >* _inputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream , RWCommandSerialNumber* _rwCommandSerialNumber , RWSubTaskWaitForData* _rwSubTaskWaitForData , RWSubTaskReadRECVACKCommandHeader* _rwSubTaskReadRECVACKCommandHeader , RWSubTask* _subTaskOnFail ) : dp( PSTR( "RWSubTaskSendRECVCommand" ) , DEBUG_LEVEL_ALL )
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendRECVCommand18resetInternalStateEv:

00000000 <_ZN24RWSubTaskSendRECVCommand18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendRECVCommand15getStateTimeoutEv:

00000000 <_ZN24RWSubTaskSendRECVCommand15getStateTimeoutEv>:
   0:	60 ed       	ldi	r22, 0xD0	; 208
   2:	77 e0       	ldi	r23, 0x07	; 7
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendRECVCommand20getStateAfterTimeoutEv:

00000000 <_ZN24RWSubTaskSendRECVCommand20getStateAfterTimeoutEv>:
   0:	fc 01       	movw	r30, r24
   2:	87 85       	ldd	r24, Z+15	; 0x0f
   4:	90 89       	ldd	r25, Z+16	; 0x10
   6:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendRECVCommand14executeSubTaskEv:

00000000 <_ZN24RWSubTaskSendRECVCommand14executeSubTaskEv>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	00 c0       	rjmp	.+0      	; 0x10 <_ZN24RWSubTaskSendRECVCommand14executeSubTaskEv+0x10>
  10:	84 85       	ldd	r24, Z+12	; 0x0c
  12:	95 85       	ldd	r25, Z+13	; 0x0d
  14:	dc 01       	movw	r26, r24
  16:	ed 91       	ld	r30, X+
  18:	fc 91       	ld	r31, X
  1a:	06 80       	ldd	r0, Z+6	; 0x06
  1c:	f7 81       	ldd	r31, Z+7	; 0x07
  1e:	e0 2d       	mov	r30, r0
  20:	19 95       	eicall
  22:	ef 81       	ldd	r30, Y+7	; 0x07
  24:	f8 85       	ldd	r31, Y+8	; 0x08
  26:	84 85       	ldd	r24, Z+12	; 0x0c
  28:	95 85       	ldd	r25, Z+13	; 0x0d
  2a:	dc 01       	movw	r26, r24
  2c:	ed 91       	ld	r30, X+
  2e:	fc 91       	ld	r31, X
  30:	04 80       	ldd	r0, Z+4	; 0x04
  32:	f5 81       	ldd	r31, Z+5	; 0x05
  34:	e0 2d       	mov	r30, r0
  36:	19 95       	eicall
  38:	ef 81       	ldd	r30, Y+7	; 0x07
{
	inputBuffer = _inputBuffer;
  3a:	f8 85       	ldd	r31, Y+8	; 0x08
  3c:	18 16       	cp	r1, r24
	crcStream = _crcStream;
  3e:	19 06       	cpc	r1, r25
  40:	04 f0       	brlt	.+0      	; 0x42 <_ZN24RWSubTaskSendRECVCommand14executeSubTaskEv+0x42>
	rwCommandSerialNumber = _rwCommandSerialNumber;
  42:	cf 01       	movw	r24, r30
  44:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendRECVCommand14executeSubTaskEv>
	rwSubTaskWaitForData = _rwSubTaskWaitForData;
  48:	e9 85       	ldd	r30, Y+9	; 0x09
	rwSubTaskReadRECVACKCommandHeader = _rwSubTaskReadRECVACKCommandHeader;
  4a:	fa 85       	ldd	r31, Y+10	; 0x0a
  4c:	80 81       	ld	r24, Z
	subTaskOnFail = _subTaskOnFail;
  4e:	8a 8b       	std	Y+18, r24	; 0x12
  50:	ed 81       	ldd	r30, Y+5	; 0x05

	arr[0] = 2;
  52:	fe 81       	ldd	r31, Y+6	; 0x06
  54:	82 81       	ldd	r24, Z+2	; 0x02
	arr[2] = 0;
  56:	94 81       	ldd	r25, Z+4	; 0x04
	arr[3] = 0;
  58:	89 1b       	sub	r24, r25
	arr[5] = 0;
  5a:	8d 8b       	std	Y+21, r24	; 0x15
}
  5c:	8f 81       	ldd	r24, Y+7	; 0x07
  5e:	98 85       	ldd	r25, Y+8	; 0x08
  60:	dc 01       	movw	r26, r24
  62:	ed 91       	ld	r30, X+
  64:	fc 91       	ld	r31, X
  66:	be 01       	movw	r22, r28
  68:	6f 5e       	subi	r22, 0xEF	; 239
  6a:	7f 4f       	sbci	r23, 0xFF	; 255
  6c:	02 80       	ldd	r0, Z+2	; 0x02
  6e:	f3 81       	ldd	r31, Z+3	; 0x03
  70:	e0 2d       	mov	r30, r0
  72:	46 e0       	ldi	r20, 0x06	; 6
  74:	50 e0       	ldi	r21, 0x00	; 0
  76:	19 95       	eicall
  78:	8f 81       	ldd	r24, Y+7	; 0x07
  7a:	98 85       	ldd	r25, Y+8	; 0x08
  7c:	dc 01       	movw	r26, r24
  7e:	ed 91       	ld	r30, X+
  80:	fc 91       	ld	r31, X
  82:	02 84       	ldd	r0, Z+10	; 0x0a
  84:	f3 85       	ldd	r31, Z+11	; 0x0b
  86:	e0 2d       	mov	r30, r0
  88:	19 95       	eicall
  8a:	8f 81       	ldd	r24, Y+7	; 0x07
  8c:	98 85       	ldd	r25, Y+8	; 0x08
  8e:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendRECVCommand14executeSubTaskEv>
  92:	8f 81       	ldd	r24, Y+7	; 0x07
  94:	98 85       	ldd	r25, Y+8	; 0x08
  96:	dc 01       	movw	r26, r24
  98:	ed 91       	ld	r30, X+
  9a:	fc 91       	ld	r31, X
  9c:	04 80       	ldd	r0, Z+4	; 0x04
  9e:	f5 81       	ldd	r31, Z+5	; 0x05
  a0:	e0 2d       	mov	r30, r0
  a2:	19 95       	eicall
  a4:	86 30       	cpi	r24, 0x06	; 6
  a6:	91 05       	cpc	r25, r1
  a8:	04 f0       	brlt	.+0      	; 0xaa <_ZN24RWSubTaskSendRECVCommand14executeSubTaskEv+0xaa>
  aa:	8d 85       	ldd	r24, Y+13	; 0x0d
  ac:	9e 85       	ldd	r25, Y+14	; 0x0e
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <_ZN24RWSubTaskSendRECVCommand14executeSubTaskEv+0xb0>
  b0:	4d 85       	ldd	r20, Y+13	; 0x0d
  b2:	5e 85       	ldd	r21, Y+14	; 0x0e
  b4:	ef 84       	ldd	r14, Y+15	; 0x0f
  b6:	f8 88       	ldd	r15, Y+16	; 0x10
  b8:	8b 85       	ldd	r24, Y+11	; 0x0b
  ba:	9c 85       	ldd	r25, Y+12	; 0x0c
  bc:	66 e0       	ldi	r22, 0x06	; 6
  be:	70 e0       	ldi	r23, 0x00	; 0
  c0:	00 ed       	ldi	r16, 0xD0	; 208
  c2:	17 e0       	ldi	r17, 0x07	; 7
  c4:	20 e0       	ldi	r18, 0x00	; 0
  c6:	30 e0       	ldi	r19, 0x00	; 0
  c8:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendRECVCommand14executeSubTaskEv>
  cc:	8b 85       	ldd	r24, Y+11	; 0x0b
  ce:	9c 85       	ldd	r25, Y+12	; 0x0c
  d0:	df 91       	pop	r29
  d2:	cf 91       	pop	r28
  d4:	1f 91       	pop	r17
  d6:	0f 91       	pop	r16
  d8:	ff 90       	pop	r15
  da:	ef 90       	pop	r14
  dc:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendRECVCommandC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP33RWSubTaskReadRECVACKCommandHeaderP9RWSubTask:

00000000 <_ZN24RWSubTaskSendRECVCommandC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP33RWSubTaskReadRECVACKCommandHeaderP9RWSubTask>:

#include "RWSubTaskSendRECVCommand.h"

// =================================================

RWSubTaskSendRECVCommand::RWSubTaskSendRECVCommand( AnyBuffer< byte , byte >* _inputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream , RWCommandSerialNumber* _rwCommandSerialNumber , RWSubTaskWaitForData* _rwSubTaskWaitForData , RWSubTaskReadRECVACKCommandHeader* _rwSubTaskReadRECVACKCommandHeader , RWSubTask* _subTaskOnFail ) : dp( PSTR( "RWSubTaskSendRECVCommand" ) , DEBUG_LEVEL_ALL )
   0:	6f 92       	push	r6
   2:	7f 92       	push	r7
   4:	8f 92       	push	r8
   6:	9f 92       	push	r9
   8:	af 92       	push	r10
   a:	bf 92       	push	r11
   c:	cf 92       	push	r12
   e:	df 92       	push	r13
  10:	ef 92       	push	r14
  12:	ff 92       	push	r15
  14:	0f 93       	push	r16
  16:	1f 93       	push	r17
  18:	cf 93       	push	r28
  1a:	df 93       	push	r29
  1c:	ec 01       	movw	r28, r24
  1e:	3b 01       	movw	r6, r22
  20:	4a 01       	movw	r8, r20
  22:	59 01       	movw	r10, r18
  24:	20 e0       	ldi	r18, 0x00	; 0
  26:	30 e0       	ldi	r19, 0x00	; 0
  28:	fc 01       	movw	r30, r24
  2a:	21 93       	st	Z+, r18
  2c:	31 93       	st	Z+, r19
  2e:	cf 01       	movw	r24, r30
  30:	60 e0       	ldi	r22, 0x00	; 0
  32:	70 e0       	ldi	r23, 0x00	; 0
  34:	4a e0       	ldi	r20, 0x0A	; 10
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendRECVCommandC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP33RWSubTaskReadRECVACKCommandHeaderP9RWSubTask>
{
	inputBuffer = _inputBuffer;
  3a:	7e 82       	std	Y+6, r7	; 0x06
  3c:	6d 82       	std	Y+5, r6	; 0x05
	crcStream = _crcStream;
  3e:	98 86       	std	Y+8, r9	; 0x08
  40:	8f 82       	std	Y+7, r8	; 0x07
	rwCommandSerialNumber = _rwCommandSerialNumber;
  42:	ba 86       	std	Y+10, r11	; 0x0a
  44:	a9 86       	std	Y+9, r10	; 0x09
	rwSubTaskWaitForData = _rwSubTaskWaitForData;
  46:	1c 87       	std	Y+12, r17	; 0x0c
  48:	0b 87       	std	Y+11, r16	; 0x0b
	rwSubTaskReadRECVACKCommandHeader = _rwSubTaskReadRECVACKCommandHeader;
  4a:	fe 86       	std	Y+14, r15	; 0x0e
  4c:	ed 86       	std	Y+13, r14	; 0x0d
	subTaskOnFail = _subTaskOnFail;
  4e:	d8 8a       	std	Y+16, r13	; 0x10
  50:	cf 86       	std	Y+15, r12	; 0x0f

	arr[0] = 2;
  52:	82 e0       	ldi	r24, 0x02	; 2
  54:	89 8b       	std	Y+17, r24	; 0x11
	arr[2] = 0;
  56:	1b 8a       	std	Y+19, r1	; 0x13
	arr[3] = 0;
  58:	1c 8a       	std	Y+20, r1	; 0x14
	arr[5] = 0;
  5a:	1e 8a       	std	Y+22, r1	; 0x16
}
  5c:	df 91       	pop	r29
  5e:	cf 91       	pop	r28
  60:	1f 91       	pop	r17
  62:	0f 91       	pop	r16
  64:	ff 90       	pop	r15
  66:	ef 90       	pop	r14
  68:	df 90       	pop	r13
  6a:	cf 90       	pop	r12
  6c:	bf 90       	pop	r11
  6e:	af 90       	pop	r10
  70:	9f 90       	pop	r9
  72:	8f 90       	pop	r8
  74:	7f 90       	pop	r7
  76:	6f 90       	pop	r6
  78:	08 95       	ret

RWSubTaskSendSENDCommand.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000044  2**0
                  ALLOC
  3 .stab         00000b1c  00000000  00000000  00000044  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00004bcd  00000000  00000000  00000b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN24RWSubTaskSendSENDCommand14getSubTaskNameEv 00000006  00000000  00000000  0000572d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN24RWSubTaskSendSENDCommand18resetInternalStateEv 00000002  00000000  00000000  00005733  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN24RWSubTaskSendSENDCommand15getStateTimeoutEv 0000000a  00000000  00000000  00005735  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN24RWSubTaskSendSENDCommand20getStateAfterTimeoutEv 00000008  00000000  00000000  0000573f  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN24RWSubTaskSendSENDCommand14executeSubTaskEv 000001e6  00000000  00000000  00005747  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN24RWSubTaskSendSENDCommandC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP27RWSubTaskReadSENDACKCommandP9RWSubTask 0000007a  00000000  00000000  0000592d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN24RWSubTaskSendSENDCommand7setWorkEh 00000008  00000000  00000000  000059a7  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .rodata._ZTV24RWSubTaskSendSENDCommand 0000000e  00000000  00000000  000059af  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  000059bd  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 14 .progmem.data 00000055  00000000  00000000  000059cb  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN24RWSubTaskSendSENDCommand14getSubTaskNameEv:

00000000 <_ZN24RWSubTaskSendSENDCommand14getSubTaskNameEv>:
}

// =================================================

void RWSubTaskSendSENDCommand::setWork( byte _retryNumber )
{
   0:	80 e0       	ldi	r24, 0x00	; 0
	//retryNumber = _retryNumber;
	retryMaxNumber = _retryNumber;
   2:	90 e0       	ldi	r25, 0x00	; 0
	retryCounter = 0;
   4:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendSENDCommand18resetInternalStateEv:

00000000 <_ZN24RWSubTaskSendSENDCommand18resetInternalStateEv>:
}

// =================================================

void RWSubTaskSendSENDCommand::setWork( byte _retryNumber )
{
   0:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendSENDCommand15getStateTimeoutEv:

00000000 <_ZN24RWSubTaskSendSENDCommand15getStateTimeoutEv>:
   0:	60 ed       	ldi	r22, 0xD0	; 208
	//retryNumber = _retryNumber;
	retryMaxNumber = _retryNumber;
   2:	77 e0       	ldi	r23, 0x07	; 7
	retryCounter = 0;
   4:	80 e0       	ldi	r24, 0x00	; 0
}
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendSENDCommand20getStateAfterTimeoutEv:

00000000 <_ZN24RWSubTaskSendSENDCommand20getStateAfterTimeoutEv>:
}

// =================================================

void RWSubTaskSendSENDCommand::setWork( byte _retryNumber )
{
   0:	fc 01       	movw	r30, r24
	//retryNumber = _retryNumber;
	retryMaxNumber = _retryNumber;
   2:	87 85       	ldd	r24, Z+15	; 0x0f
	retryCounter = 0;
   4:	90 89       	ldd	r25, Z+16	; 0x10
}
   6:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendSENDCommand14executeSubTaskEv:

00000000 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv>:
}

// =================================================

void RWSubTaskSendSENDCommand::setWork( byte _retryNumber )
{
   0:	ef 92       	push	r14
	//retryNumber = _retryNumber;
	retryMaxNumber = _retryNumber;
   2:	ff 92       	push	r15
	retryCounter = 0;
   4:	0f 93       	push	r16
}
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	ed 81       	ldd	r30, Y+5	; 0x05
  10:	fe 81       	ldd	r31, Y+6	; 0x06
  12:	f3 80       	ldd	r15, Z+3	; 0x03
  14:	00 c0       	rjmp	.+0      	; 0x16 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x16>
  16:	ef 81       	ldd	r30, Y+7	; 0x07
  18:	f8 85       	ldd	r31, Y+8	; 0x08
  1a:	84 85       	ldd	r24, Z+12	; 0x0c
  1c:	95 85       	ldd	r25, Z+13	; 0x0d
  1e:	dc 01       	movw	r26, r24
  20:	ed 91       	ld	r30, X+
  22:	fc 91       	ld	r31, X
  24:	06 80       	ldd	r0, Z+6	; 0x06
  26:	f7 81       	ldd	r31, Z+7	; 0x07
  28:	e0 2d       	mov	r30, r0
  2a:	19 95       	eicall
  2c:	ef 81       	ldd	r30, Y+7	; 0x07
  2e:	f8 85       	ldd	r31, Y+8	; 0x08
  30:	84 85       	ldd	r24, Z+12	; 0x0c
  32:	95 85       	ldd	r25, Z+13	; 0x0d
  34:	dc 01       	movw	r26, r24
  36:	ed 91       	ld	r30, X+
  38:	fc 91       	ld	r31, X
  3a:	04 80       	ldd	r0, Z+4	; 0x04
  3c:	f5 81       	ldd	r31, Z+5	; 0x05
  3e:	e0 2d       	mov	r30, r0
  40:	19 95       	eicall
  42:	18 16       	cp	r1, r24
  44:	19 06       	cpc	r1, r25
  46:	04 f0       	brlt	.+0      	; 0x48 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x48>
  48:	89 89       	ldd	r24, Y+17	; 0x11
  4a:	88 23       	and	r24, r24
  4c:	01 f4       	brne	.+0      	; 0x4e <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x4e>
  4e:	00 c0       	rjmp	.+0      	; 0x50 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x50>
  50:	8c 81       	ldd	r24, Y+4	; 0x04
  52:	8f 31       	cpi	r24, 0x1F	; 31
  54:	00 f0       	brcs	.+0      	; 0x56 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x56>
  56:	00 c0       	rjmp	.+0      	; 0x58 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x58>
  58:	ce 01       	movw	r24, r28
  5a:	02 96       	adiw	r24, 0x02	; 2
  5c:	60 e0       	ldi	r22, 0x00	; 0
  5e:	70 e0       	ldi	r23, 0x00	; 0
  60:	40 e0       	ldi	r20, 0x00	; 0
  62:	50 e0       	ldi	r21, 0x00	; 0
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv>
  68:	ed 81       	ldd	r30, Y+5	; 0x05
  6a:	fe 81       	ldd	r31, Y+6	; 0x06
  6c:	04 81       	ldd	r16, Z+4	; 0x04
  6e:	83 81       	ldd	r24, Z+3	; 0x03
  70:	08 1b       	sub	r16, r24
  72:	e9 88       	ldd	r14, Y+17	; 0x11
  74:	1a 89       	ldd	r17, Y+18	; 0x12
  76:	8f 81       	ldd	r24, Y+7	; 0x07
  78:	98 85       	ldd	r25, Y+8	; 0x08
  7a:	dc 01       	movw	r26, r24
  7c:	ed 91       	ld	r30, X+
  7e:	fc 91       	ld	r31, X
  80:	04 80       	ldd	r0, Z+4	; 0x04
  82:	f5 81       	ldd	r31, Z+5	; 0x05
  84:	e0 2d       	mov	r30, r0
  86:	19 95       	eicall
  88:	ed b7       	in	r30, 0x3d	; 61
  8a:	fe b7       	in	r31, 0x3e	; 62
  8c:	3a 97       	sbiw	r30, 0x0a	; 10
  8e:	0f b6       	in	r0, 0x3f	; 63
  90:	f8 94       	cli
  92:	fe bf       	out	0x3e, r31	; 62
  94:	0f be       	out	0x3f, r0	; 63
  96:	ed bf       	out	0x3d, r30	; 61
  98:	31 96       	adiw	r30, 0x01	; 1
  9a:	20 e0       	ldi	r18, 0x00	; 0
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	ad b7       	in	r26, 0x3d	; 61
  a0:	be b7       	in	r27, 0x3e	; 62
  a2:	12 96       	adiw	r26, 0x02	; 2
  a4:	3c 93       	st	X, r19
  a6:	2e 93       	st	-X, r18
  a8:	11 97       	sbiw	r26, 0x01	; 1
  aa:	02 83       	std	Z+2, r16	; 0x02
  ac:	13 82       	std	Z+3, r1	; 0x03
  ae:	e4 82       	std	Z+4, r14	; 0x04
  b0:	15 82       	std	Z+5, r1	; 0x05
  b2:	16 83       	std	Z+6, r17	; 0x06
  b4:	17 82       	std	Z+7, r1	; 0x07
  b6:	91 87       	std	Z+9, r25	; 0x09
  b8:	80 87       	std	Z+8, r24	; 0x08
  ba:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv>
  be:	ed b7       	in	r30, 0x3d	; 61
  c0:	fe b7       	in	r31, 0x3e	; 62
  c2:	38 96       	adiw	r30, 0x08	; 8
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	f8 94       	cli
  c8:	fe bf       	out	0x3e, r31	; 62
  ca:	0f be       	out	0x3f, r0	; 63
  cc:	ed bf       	out	0x3d, r30	; 61
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	92 83       	std	Z+2, r25	; 0x02
  d4:	81 83       	std	Z+1, r24	; 0x01
  d6:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv>
  da:	0f 90       	pop	r0
  dc:	0f 90       	pop	r0
  de:	8f 81       	ldd	r24, Y+7	; 0x07
  e0:	98 85       	ldd	r25, Y+8	; 0x08
  e2:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv>
  e6:	e9 85       	ldd	r30, Y+9	; 0x09
  e8:	fa 85       	ldd	r31, Y+10	; 0x0a
  ea:	80 81       	ld	r24, Z
  ec:	8c 8b       	std	Y+20, r24	; 0x14
  ee:	ed 81       	ldd	r30, Y+5	; 0x05
  f0:	fe 81       	ldd	r31, Y+6	; 0x06
  f2:	84 81       	ldd	r24, Z+4	; 0x04
  f4:	93 81       	ldd	r25, Z+3	; 0x03
  f6:	89 1b       	sub	r24, r25
  f8:	8f 8b       	std	Y+23, r24	; 0x17
  fa:	8f 81       	ldd	r24, Y+7	; 0x07
  fc:	98 85       	ldd	r25, Y+8	; 0x08
  fe:	dc 01       	movw	r26, r24
 100:	ed 91       	ld	r30, X+
 102:	fc 91       	ld	r31, X
 104:	be 01       	movw	r22, r28
 106:	6d 5e       	subi	r22, 0xED	; 237
 108:	7f 4f       	sbci	r23, 0xFF	; 255
 10a:	02 80       	ldd	r0, Z+2	; 0x02
 10c:	f3 81       	ldd	r31, Z+3	; 0x03
 10e:	e0 2d       	mov	r30, r0
 110:	46 e0       	ldi	r20, 0x06	; 6
 112:	50 e0       	ldi	r21, 0x00	; 0
 114:	19 95       	eicall
 116:	8f 81       	ldd	r24, Y+7	; 0x07
 118:	98 85       	ldd	r25, Y+8	; 0x08
 11a:	dc 01       	movw	r26, r24
 11c:	ed 91       	ld	r30, X+
 11e:	fc 91       	ld	r31, X
 120:	02 84       	ldd	r0, Z+10	; 0x0a
 122:	f3 85       	ldd	r31, Z+11	; 0x0b
 124:	e0 2d       	mov	r30, r0
 126:	19 95       	eicall
 128:	0d 81       	ldd	r16, Y+5	; 0x05
 12a:	1e 81       	ldd	r17, Y+6	; 0x06
 12c:	8f 81       	ldd	r24, Y+7	; 0x07
 12e:	98 85       	ldd	r25, Y+8	; 0x08
 130:	f8 01       	movw	r30, r16
 132:	23 81       	ldd	r18, Z+3	; 0x03
 134:	dc 01       	movw	r26, r24
 136:	ed 91       	ld	r30, X+
 138:	fc 91       	ld	r31, X
 13a:	d8 01       	movw	r26, r16
 13c:	6d 91       	ld	r22, X+
 13e:	7c 91       	ld	r23, X
 140:	11 97       	sbiw	r26, 0x01	; 1
 142:	62 0f       	add	r22, r18
 144:	71 1d       	adc	r23, r1
 146:	14 96       	adiw	r26, 0x04	; 4
 148:	4c 91       	ld	r20, X
 14a:	42 1b       	sub	r20, r18
 14c:	02 80       	ldd	r0, Z+2	; 0x02
 14e:	f3 81       	ldd	r31, Z+3	; 0x03
 150:	e0 2d       	mov	r30, r0
 152:	50 e0       	ldi	r21, 0x00	; 0
 154:	19 95       	eicall
 156:	f8 01       	movw	r30, r16
 158:	84 81       	ldd	r24, Z+4	; 0x04
 15a:	83 83       	std	Z+3, r24	; 0x03
 15c:	8f 81       	ldd	r24, Y+7	; 0x07
 15e:	98 85       	ldd	r25, Y+8	; 0x08
 160:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv>
 164:	ed 81       	ldd	r30, Y+5	; 0x05
 166:	fe 81       	ldd	r31, Y+6	; 0x06
 168:	84 81       	ldd	r24, Z+4	; 0x04
 16a:	f8 16       	cp	r15, r24
 16c:	00 f4       	brcc	.+0      	; 0x16e <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x16e>
 16e:	8f 2d       	mov	r24, r15
 170:	83 83       	std	Z+3, r24	; 0x03
 172:	8d 85       	ldd	r24, Y+13	; 0x0d
 174:	9e 85       	ldd	r25, Y+14	; 0x0e
 176:	ed 81       	ldd	r30, Y+5	; 0x05
 178:	fe 81       	ldd	r31, Y+6	; 0x06
 17a:	64 81       	ldd	r22, Z+4	; 0x04
 17c:	23 81       	ldd	r18, Z+3	; 0x03
 17e:	62 1b       	sub	r22, r18
 180:	39 89       	ldd	r19, Y+17	; 0x11
 182:	2a 89       	ldd	r18, Y+18	; 0x12
 184:	32 17       	cp	r19, r18
 186:	00 f0       	brcs	.+0      	; 0x188 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x188>
 188:	40 e0       	ldi	r20, 0x00	; 0
 18a:	50 e0       	ldi	r21, 0x00	; 0
 18c:	00 c0       	rjmp	.+0      	; 0x18e <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x18e>
 18e:	ae 01       	movw	r20, r28
 190:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv>
 194:	89 89       	ldd	r24, Y+17	; 0x11
 196:	8f 5f       	subi	r24, 0xFF	; 255
 198:	89 8b       	std	Y+17, r24	; 0x11
 19a:	8f 81       	ldd	r24, Y+7	; 0x07
 19c:	98 85       	ldd	r25, Y+8	; 0x08
 19e:	dc 01       	movw	r26, r24
 1a0:	ed 91       	ld	r30, X+
 1a2:	fc 91       	ld	r31, X
 1a4:	04 80       	ldd	r0, Z+4	; 0x04
 1a6:	f5 81       	ldd	r31, Z+5	; 0x05
 1a8:	e0 2d       	mov	r30, r0
 1aa:	19 95       	eicall
 1ac:	85 30       	cpi	r24, 0x05	; 5
 1ae:	91 05       	cpc	r25, r1
 1b0:	04 f0       	brlt	.+0      	; 0x1b2 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x1b2>
 1b2:	8d 85       	ldd	r24, Y+13	; 0x0d
 1b4:	9e 85       	ldd	r25, Y+14	; 0x0e
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv+0x1b8>
 1b8:	4d 85       	ldd	r20, Y+13	; 0x0d
 1ba:	5e 85       	ldd	r21, Y+14	; 0x0e
 1bc:	ef 84       	ldd	r14, Y+15	; 0x0f
 1be:	f8 88       	ldd	r15, Y+16	; 0x10
 1c0:	8b 85       	ldd	r24, Y+11	; 0x0b
 1c2:	9c 85       	ldd	r25, Y+12	; 0x0c
 1c4:	65 e0       	ldi	r22, 0x05	; 5
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	00 ed       	ldi	r16, 0xD0	; 208
 1ca:	17 e0       	ldi	r17, 0x07	; 7
 1cc:	20 e0       	ldi	r18, 0x00	; 0
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendSENDCommand14executeSubTaskEv>
 1d4:	8b 85       	ldd	r24, Y+11	; 0x0b
 1d6:	9c 85       	ldd	r25, Y+12	; 0x0c
 1d8:	df 91       	pop	r29
 1da:	cf 91       	pop	r28
 1dc:	1f 91       	pop	r17
 1de:	0f 91       	pop	r16
 1e0:	ff 90       	pop	r15
 1e2:	ef 90       	pop	r14
 1e4:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendSENDCommandC2EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP27RWSubTaskReadSENDACKCommandP9RWSubTask:

00000000 <_ZN24RWSubTaskSendSENDCommandC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP27RWSubTaskReadSENDACKCommandP9RWSubTask>:
}

// =================================================

void RWSubTaskSendSENDCommand::setWork( byte _retryNumber )
{
   0:	6f 92       	push	r6
	//retryNumber = _retryNumber;
	retryMaxNumber = _retryNumber;
   2:	7f 92       	push	r7
	retryCounter = 0;
   4:	8f 92       	push	r8
}
   6:	9f 92       	push	r9
   8:	af 92       	push	r10
   a:	bf 92       	push	r11
   c:	cf 92       	push	r12
   e:	df 92       	push	r13
  10:	ef 92       	push	r14
  12:	ff 92       	push	r15
  14:	0f 93       	push	r16
  16:	1f 93       	push	r17
  18:	cf 93       	push	r28
  1a:	df 93       	push	r29
  1c:	ec 01       	movw	r28, r24
  1e:	3b 01       	movw	r6, r22
  20:	4a 01       	movw	r8, r20
  22:	59 01       	movw	r10, r18
  24:	20 e0       	ldi	r18, 0x00	; 0
  26:	30 e0       	ldi	r19, 0x00	; 0
  28:	fc 01       	movw	r30, r24
  2a:	21 93       	st	Z+, r18
  2c:	31 93       	st	Z+, r19
  2e:	cf 01       	movw	r24, r30
  30:	60 e0       	ldi	r22, 0x00	; 0
  32:	70 e0       	ldi	r23, 0x00	; 0
  34:	4a e0       	ldi	r20, 0x0A	; 10
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN24RWSubTaskSendSENDCommandC1EP9AnyBufferIhhEP24StreamHFA11xRS232WiFiCRCP21RWCommandSerialNumberP20RWSubTaskWaitForDataP27RWSubTaskReadSENDACKCommandP9RWSubTask>
  3a:	7e 82       	std	Y+6, r7	; 0x06
  3c:	6d 82       	std	Y+5, r6	; 0x05
  3e:	98 86       	std	Y+8, r9	; 0x08
  40:	8f 82       	std	Y+7, r8	; 0x07
  42:	ba 86       	std	Y+10, r11	; 0x0a
  44:	a9 86       	std	Y+9, r10	; 0x09
  46:	1c 87       	std	Y+12, r17	; 0x0c
  48:	0b 87       	std	Y+11, r16	; 0x0b
  4a:	fe 86       	std	Y+14, r15	; 0x0e
  4c:	ed 86       	std	Y+13, r14	; 0x0d
  4e:	d8 8a       	std	Y+16, r13	; 0x10
  50:	cf 86       	std	Y+15, r12	; 0x0f
  52:	81 e0       	ldi	r24, 0x01	; 1
  54:	8b 8b       	std	Y+19, r24	; 0x13
  56:	1d 8a       	std	Y+21, r1	; 0x15
  58:	1e 8a       	std	Y+22, r1	; 0x16
  5a:	18 8e       	std	Y+24, r1	; 0x18
  5c:	df 91       	pop	r29
  5e:	cf 91       	pop	r28
  60:	1f 91       	pop	r17
  62:	0f 91       	pop	r16
  64:	ff 90       	pop	r15
  66:	ef 90       	pop	r14
  68:	df 90       	pop	r13
  6a:	cf 90       	pop	r12
  6c:	bf 90       	pop	r11
  6e:	af 90       	pop	r10
  70:	9f 90       	pop	r9
  72:	8f 90       	pop	r8
  74:	7f 90       	pop	r7
  76:	6f 90       	pop	r6
  78:	08 95       	ret

Disassembly of section .text._ZN24RWSubTaskSendSENDCommand7setWorkEh:

00000000 <_ZN24RWSubTaskSendSENDCommand7setWorkEh>:
}

// =================================================

void RWSubTaskSendSENDCommand::setWork( byte _retryNumber )
{
   0:	fc 01       	movw	r30, r24
	//retryNumber = _retryNumber;
	retryMaxNumber = _retryNumber;
   2:	62 8b       	std	Z+18, r22	; 0x12
	retryCounter = 0;
   4:	11 8a       	std	Z+17, r1	; 0x11
}
   6:	08 95       	ret

RWSubTaskWaitForData.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000013  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000047  2**0
                  ALLOC
  3 .stab         000008e8  00000000  00000000  00000048  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003b72  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN20RWSubTaskWaitForData14getSubTaskNameEv 00000006  00000000  00000000  000044a2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN20RWSubTaskWaitForData18resetInternalStateEv 00000002  00000000  00000000  000044a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN20RWSubTaskWaitForData15getStateTimeoutEv 0000000c  00000000  00000000  000044aa  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN20RWSubTaskWaitForData20getStateAfterTimeoutEv 00000008  00000000  00000000  000044b6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN20RWSubTaskWaitForData14executeSubTaskEv 00000032  00000000  00000000  000044be  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN20RWSubTaskWaitForDataC2EP6Stream 0000002e  00000000  00000000  000044f0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_ 000000ee  00000000  00000000  0000451e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .rodata._ZTV20RWSubTaskWaitForData 0000000e  00000000  00000000  0000460c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .rodata._ZTV9RWSubTask 0000000e  00000000  00000000  0000461a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 14 .progmem.data 0000007a  00000000  00000000  00004628  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN20RWSubTaskWaitForData14getSubTaskNameEv:

00000000 <_ZN20RWSubTaskWaitForData14getSubTaskNameEv>:
}

// =================================================

void RWSubTaskWaitForData::setWork( unsigned int _waitForBytesCount , RWSubTask* _taskIfDataAvailable , unsigned long _timeout , RWSubTask* _taskOnTimeout )
{
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN20RWSubTaskWaitForData18resetInternalStateEv:

00000000 <_ZN20RWSubTaskWaitForData18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN20RWSubTaskWaitForData15getStateTimeoutEv:

00000000 <_ZN20RWSubTaskWaitForData15getStateTimeoutEv>:
   0:	fc 01       	movw	r30, r24
   2:	63 85       	ldd	r22, Z+11	; 0x0b
   4:	74 85       	ldd	r23, Z+12	; 0x0c
   6:	85 85       	ldd	r24, Z+13	; 0x0d
   8:	96 85       	ldd	r25, Z+14	; 0x0e
   a:	08 95       	ret

Disassembly of section .text._ZN20RWSubTaskWaitForData20getStateAfterTimeoutEv:

00000000 <_ZN20RWSubTaskWaitForData20getStateAfterTimeoutEv>:
   0:	fc 01       	movw	r30, r24
   2:	87 85       	ldd	r24, Z+15	; 0x0f
   4:	90 89       	ldd	r25, Z+16	; 0x10
   6:	08 95       	ret

Disassembly of section .text._ZN20RWSubTaskWaitForData14executeSubTaskEv:

00000000 <_ZN20RWSubTaskWaitForData14executeSubTaskEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	8d 81       	ldd	r24, Y+5	; 0x05
   8:	9e 81       	ldd	r25, Y+6	; 0x06
   a:	dc 01       	movw	r26, r24
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	04 80       	ldd	r0, Z+4	; 0x04
  12:	f5 81       	ldd	r31, Z+5	; 0x05
  14:	e0 2d       	mov	r30, r0
	static const PROGMEM prog_char functionName[] = "setWork";

	waitForBytesCount = _waitForBytesCount;
  16:	19 95       	eicall
  18:	2f 81       	ldd	r18, Y+7	; 0x07
	taskIfDataAvailable = _taskIfDataAvailable;
  1a:	38 85       	ldd	r19, Y+8	; 0x08
  1c:	82 17       	cp	r24, r18

	timeout = _timeout;
  1e:	93 07       	cpc	r25, r19
  20:	00 f0       	brcs	.+0      	; 0x22 <_ZN20RWSubTaskWaitForData14executeSubTaskEv+0x22>
  22:	89 85       	ldd	r24, Y+9	; 0x09
  24:	9a 85       	ldd	r25, Y+10	; 0x0a
	taskOnTimeout = _taskOnTimeout;
  26:	00 c0       	rjmp	.+0      	; 0x28 <_ZN20RWSubTaskWaitForData14executeSubTaskEv+0x28>
  28:	80 e0       	ldi	r24, 0x00	; 0

	aln( "waitForBytesCount = %u , taskIfDataAvailable = '%s' , timeout = %lums , taskOnTimeout = '%s'" , waitForBytesCount , taskIfDataAvailable->getSubTaskName() , timeout , (taskOnTimeout !=NULL ? taskOnTimeout->getSubTaskName() : "-null-" ) )
  2a:	90 e0       	ldi	r25, 0x00	; 0
  2c:	df 91       	pop	r29
  2e:	cf 91       	pop	r28
  30:	08 95       	ret

Disassembly of section .text._ZN20RWSubTaskWaitForDataC2EP6Stream:

00000000 <_ZN20RWSubTaskWaitForDataC1EP6Stream>:
}

// =================================================

void RWSubTaskWaitForData::setWork( unsigned int _waitForBytesCount , RWSubTask* _taskIfDataAvailable , unsigned long _timeout , RWSubTask* _taskOnTimeout )
{
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
   c:	20 e0       	ldi	r18, 0x00	; 0
   e:	30 e0       	ldi	r19, 0x00	; 0
  10:	fc 01       	movw	r30, r24
  12:	21 93       	st	Z+, r18
  14:	31 93       	st	Z+, r19
	static const PROGMEM prog_char functionName[] = "setWork";

	waitForBytesCount = _waitForBytesCount;
  16:	cf 01       	movw	r24, r30
  18:	60 e0       	ldi	r22, 0x00	; 0
	taskIfDataAvailable = _taskIfDataAvailable;
  1a:	70 e0       	ldi	r23, 0x00	; 0
  1c:	0e 94 00 00 	call	0	; 0x0 <_ZN20RWSubTaskWaitForDataC1EP6Stream>

	timeout = _timeout;
  20:	1e 83       	std	Y+6, r17	; 0x06
  22:	0d 83       	std	Y+5, r16	; 0x05
  24:	df 91       	pop	r29
	taskOnTimeout = _taskOnTimeout;
  26:	cf 91       	pop	r28
  28:	1f 91       	pop	r17

	aln( "waitForBytesCount = %u , taskIfDataAvailable = '%s' , timeout = %lums , taskOnTimeout = '%s'" , waitForBytesCount , taskIfDataAvailable->getSubTaskName() , timeout , (taskOnTimeout !=NULL ? taskOnTimeout->getSubTaskName() : "-null-" ) )
  2a:	0f 91       	pop	r16
  2c:	08 95       	ret

Disassembly of section .text._ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_:

00000000 <_ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_>:
}

// =================================================

void RWSubTaskWaitForData::setWork( unsigned int _waitForBytesCount , RWSubTask* _taskIfDataAvailable , unsigned long _timeout , RWSubTask* _taskOnTimeout )
{
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	ec 01       	movw	r28, r24
	static const PROGMEM prog_char functionName[] = "setWork";

	waitForBytesCount = _waitForBytesCount;
  16:	78 87       	std	Y+8, r23	; 0x08
  18:	6f 83       	std	Y+7, r22	; 0x07
	taskIfDataAvailable = _taskIfDataAvailable;
  1a:	5a 87       	std	Y+10, r21	; 0x0a
  1c:	49 87       	std	Y+9, r20	; 0x09

	timeout = _timeout;
  1e:	0b 87       	std	Y+11, r16	; 0x0b
  20:	1c 87       	std	Y+12, r17	; 0x0c
  22:	2d 87       	std	Y+13, r18	; 0x0d
  24:	3e 87       	std	Y+14, r19	; 0x0e
	taskOnTimeout = _taskOnTimeout;
  26:	f8 8a       	std	Y+16, r15	; 0x10
  28:	ef 86       	std	Y+15, r14	; 0x0f

	aln( "waitForBytesCount = %u , taskIfDataAvailable = '%s' , timeout = %lums , taskOnTimeout = '%s'" , waitForBytesCount , taskIfDataAvailable->getSubTaskName() , timeout , (taskOnTimeout !=NULL ? taskOnTimeout->getSubTaskName() : "-null-" ) )
  2a:	8c 81       	ldd	r24, Y+4	; 0x04
  2c:	8b 30       	cpi	r24, 0x0B	; 11
  2e:	00 f0       	brcs	.+0      	; 0x30 <_ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_+0x30>
  30:	00 c0       	rjmp	.+0      	; 0x32 <_ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_+0x32>
  32:	ce 01       	movw	r24, r28
  34:	02 96       	adiw	r24, 0x02	; 2
  36:	60 e0       	ldi	r22, 0x00	; 0
  38:	70 e0       	ldi	r23, 0x00	; 0
  3a:	40 e0       	ldi	r20, 0x00	; 0
  3c:	50 e0       	ldi	r21, 0x00	; 0
  3e:	0e 94 00 00 	call	0	; 0x0 <_ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_>
  42:	af 80       	ldd	r10, Y+7	; 0x07
  44:	b8 84       	ldd	r11, Y+8	; 0x08
  46:	89 85       	ldd	r24, Y+9	; 0x09
  48:	9a 85       	ldd	r25, Y+10	; 0x0a
  4a:	dc 01       	movw	r26, r24
  4c:	ed 91       	ld	r30, X+
  4e:	fc 91       	ld	r31, X
  50:	01 90       	ld	r0, Z+
  52:	f0 81       	ld	r31, Z
  54:	e0 2d       	mov	r30, r0
  56:	19 95       	eicall
  58:	8c 01       	movw	r16, r24
  5a:	cb 84       	ldd	r12, Y+11	; 0x0b
  5c:	dc 84       	ldd	r13, Y+12	; 0x0c
  5e:	ed 84       	ldd	r14, Y+13	; 0x0d
  60:	fe 84       	ldd	r15, Y+14	; 0x0e
  62:	8f 85       	ldd	r24, Y+15	; 0x0f
  64:	98 89       	ldd	r25, Y+16	; 0x10
  66:	00 97       	sbiw	r24, 0x00	; 0
  68:	01 f0       	breq	.+0      	; 0x6a <_ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_+0x6a>
  6a:	dc 01       	movw	r26, r24
  6c:	ed 91       	ld	r30, X+
  6e:	fc 91       	ld	r31, X
  70:	01 90       	ld	r0, Z+
  72:	f0 81       	ld	r31, Z
  74:	e0 2d       	mov	r30, r0
  76:	19 95       	eicall
  78:	00 c0       	rjmp	.+0      	; 0x7a <_ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_+0x7a>
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	90 e0       	ldi	r25, 0x00	; 0
  7e:	ed b7       	in	r30, 0x3d	; 61
  80:	fe b7       	in	r31, 0x3e	; 62
  82:	3c 97       	sbiw	r30, 0x0c	; 12
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	f8 94       	cli
  88:	fe bf       	out	0x3e, r31	; 62
  8a:	0f be       	out	0x3f, r0	; 63
  8c:	ed bf       	out	0x3d, r30	; 61
  8e:	31 96       	adiw	r30, 0x01	; 1
  90:	20 e0       	ldi	r18, 0x00	; 0
  92:	30 e0       	ldi	r19, 0x00	; 0
  94:	ad b7       	in	r26, 0x3d	; 61
  96:	be b7       	in	r27, 0x3e	; 62
  98:	12 96       	adiw	r26, 0x02	; 2
  9a:	3c 93       	st	X, r19
  9c:	2e 93       	st	-X, r18
  9e:	11 97       	sbiw	r26, 0x01	; 1
  a0:	b3 82       	std	Z+3, r11	; 0x03
  a2:	a2 82       	std	Z+2, r10	; 0x02
  a4:	15 83       	std	Z+5, r17	; 0x05
  a6:	04 83       	std	Z+4, r16	; 0x04
  a8:	c6 82       	std	Z+6, r12	; 0x06
  aa:	d7 82       	std	Z+7, r13	; 0x07
  ac:	e0 86       	std	Z+8, r14	; 0x08
  ae:	f1 86       	std	Z+9, r15	; 0x09
  b0:	93 87       	std	Z+11, r25	; 0x0b
  b2:	82 87       	std	Z+10, r24	; 0x0a
  b4:	0e 94 00 00 	call	0	; 0x0 <_ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_>
  b8:	ed b7       	in	r30, 0x3d	; 61
  ba:	fe b7       	in	r31, 0x3e	; 62
  bc:	3a 96       	adiw	r30, 0x0a	; 10
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	f8 94       	cli
  c2:	fe bf       	out	0x3e, r31	; 62
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	ed bf       	out	0x3d, r30	; 61
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	92 83       	std	Z+2, r25	; 0x02
  ce:	81 83       	std	Z+1, r24	; 0x01
  d0:	0e 94 00 00 	call	0	; 0x0 <_ZN20RWSubTaskWaitForData7setWorkEjP9RWSubTaskmS1_>
  d4:	0f 90       	pop	r0
  d6:	0f 90       	pop	r0
	}
	else
	{
		iln( "waitForBytesCount = %u , taskIfDataAvailable = '%s' , timeout = %lums , taskOnTimeout = '-null-'" , waitForBytesCount , taskIfDataAvailable->getSubTaskName() , timeout )
	}*/
}
  d8:	df 91       	pop	r29
  da:	cf 91       	pop	r28
  dc:	1f 91       	pop	r17
  de:	0f 91       	pop	r16
  e0:	ff 90       	pop	r15
  e2:	ef 90       	pop	r14
  e4:	df 90       	pop	r13
  e6:	cf 90       	pop	r12
  e8:	bf 90       	pop	r11
  ea:	af 90       	pop	r10
  ec:	08 95       	ret

StreamHFA11xRS232WiFi.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000ba0  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00004650  00000000  00000000  00000bd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN21StreamHFA11xRS232WiFi9availableEv 00000014  00000000  00000000  00005224  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN21StreamHFA11xRS232WiFi5flushEv 00000022  00000000  00000000  00005238  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN21StreamHFA11xRS232WiFi5writeEh 00000054  00000000  00000000  0000525a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN21StreamHFA11xRS232WiFi5writeEPKhj 000000e8  00000000  00000000  000052ae  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN21StreamHFA11xRS232WiFi4peekEv 00000040  00000000  00000000  00005396  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN21StreamHFA11xRS232WiFi4readEv 00000054  00000000  00000000  000053d6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN21StreamHFA11xRS232WiFiC2EP9AnyBufferIhhES2_P14RWStateMachine 0000005e  00000000  00000000  0000542a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .rodata._ZTV21StreamHFA11xRS232WiFi 00000010  00000000  00000000  00005488  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .rodata._ZTV6Stream 00000010  00000000  00000000  00005498  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 14 .progmem.data 00000016  00000000  00000000  000054a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN21StreamHFA11xRS232WiFi9availableEv:

00000000 <_ZN21StreamHFA11xRS232WiFi9availableEv>:

#include "StreamHFA11xRS232WiFi.h"

// =================================================

StreamHFA11xRS232WiFi::StreamHFA11xRS232WiFi( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , RWStateMachine* _rwStateMachine ) : dp( PSTR( "StreamHFA11xRS232WiFi" ) )
   0:	dc 01       	movw	r26, r24
   2:	1f 96       	adiw	r26, 0x0f	; 15
   4:	ed 91       	ld	r30, X+
   6:	fc 91       	ld	r31, X
   8:	50 97       	sbiw	r26, 0x10	; 16
   a:	84 81       	ldd	r24, Z+4	; 0x04
   c:	93 81       	ldd	r25, Z+3	; 0x03
   e:	89 1b       	sub	r24, r25
  10:	90 e0       	ldi	r25, 0x00	; 0
  12:	08 95       	ret

Disassembly of section .text._ZN21StreamHFA11xRS232WiFi5flushEv:

00000000 <_ZN21StreamHFA11xRS232WiFi5flushEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	00 c0       	rjmp	.+0      	; 0x8 <_ZN21StreamHFA11xRS232WiFi5flushEv+0x8>
   8:	8b 89       	ldd	r24, Y+19	; 0x13
   a:	9c 89       	ldd	r25, Y+20	; 0x14
   c:	0e 94 00 00 	call	0	; 0x0 <_ZN21StreamHFA11xRS232WiFi5flushEv>
  10:	e9 89       	ldd	r30, Y+17	; 0x11
  12:	fa 89       	ldd	r31, Y+18	; 0x12
  14:	94 81       	ldd	r25, Z+4	; 0x04
  16:	83 81       	ldd	r24, Z+3	; 0x03
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
  18:	98 17       	cp	r25, r24
  1a:	01 f4       	brne	.+0      	; 0x1c <_ZN21StreamHFA11xRS232WiFi5flushEv+0x1c>
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
  1c:	df 91       	pop	r29
  1e:	cf 91       	pop	r28
  20:	08 95       	ret

Disassembly of section .text._ZN21StreamHFA11xRS232WiFi5writeEh:

00000000 <_ZN21StreamHFA11xRS232WiFi5writeEh>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	0f 92       	push	r0
   a:	cd b7       	in	r28, 0x3d	; 61
   c:	de b7       	in	r29, 0x3e	; 62
   e:	8c 01       	movw	r16, r24
  10:	00 c0       	rjmp	.+0      	; 0x12 <_ZN21StreamHFA11xRS232WiFi5writeEh+0x12>
  12:	d8 01       	movw	r26, r16
  14:	53 96       	adiw	r26, 0x13	; 19
  16:	8d 91       	ld	r24, X+
  18:	9c 91       	ld	r25, X
  1a:	54 97       	sbiw	r26, 0x14	; 20
  1c:	69 83       	std	Y+1, r22	; 0x01
  1e:	0e 94 00 00 	call	0	; 0x0 <_ZN21StreamHFA11xRS232WiFi5writeEh>
  22:	69 81       	ldd	r22, Y+1	; 0x01
  24:	d8 01       	movw	r26, r16
  26:	51 96       	adiw	r26, 0x11	; 17
  28:	ed 91       	ld	r30, X+
  2a:	fc 91       	ld	r31, X
  2c:	52 97       	sbiw	r26, 0x12	; 18
  2e:	84 81       	ldd	r24, Z+4	; 0x04
  30:	92 81       	ldd	r25, Z+2	; 0x02
  32:	98 17       	cp	r25, r24
  34:	01 f0       	breq	.+0      	; 0x36 <_ZN21StreamHFA11xRS232WiFi5writeEh+0x36>
  36:	a0 81       	ld	r26, Z
  38:	b1 81       	ldd	r27, Z+1	; 0x01
  3a:	a8 0f       	add	r26, r24
  3c:	b1 1d       	adc	r27, r1
  3e:	6c 93       	st	X, r22
{
	inputBuffer = _inputBuffer;
  40:	8f 5f       	subi	r24, 0xFF	; 255
  42:	84 83       	std	Z+4, r24	; 0x04
	outputBuffer = _outputBuffer;
  44:	81 e0       	ldi	r24, 0x01	; 1
  46:	90 e0       	ldi	r25, 0x00	; 0
	rwStateMachine = _rwStateMachine;
  48:	0f 90       	pop	r0
  4a:	df 91       	pop	r29
}
  4c:	cf 91       	pop	r28
  4e:	1f 91       	pop	r17
  50:	0f 91       	pop	r16
  52:	08 95       	ret

Disassembly of section .text._ZN21StreamHFA11xRS232WiFi5writeEPKhj:

00000000 <_ZN21StreamHFA11xRS232WiFi5writeEPKhj>:

#include "StreamHFA11xRS232WiFi.h"

// =================================================

StreamHFA11xRS232WiFi::StreamHFA11xRS232WiFi( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , RWStateMachine* _rwStateMachine ) : dp( PSTR( "StreamHFA11xRS232WiFi" ) )
   0:	7f 92       	push	r7
   2:	8f 92       	push	r8
   4:	9f 92       	push	r9
   6:	af 92       	push	r10
   8:	bf 92       	push	r11
   a:	cf 92       	push	r12
   c:	df 92       	push	r13
   e:	ef 92       	push	r14
  10:	ff 92       	push	r15
  12:	0f 93       	push	r16
  14:	1f 93       	push	r17
  16:	cf 93       	push	r28
  18:	df 93       	push	r29
  1a:	6c 01       	movw	r12, r24
  1c:	86 2e       	mov	r8, r22
  1e:	77 2e       	mov	r7, r23
  20:	b4 2e       	mov	r11, r20
  22:	a5 2e       	mov	r10, r21
  24:	e4 2e       	mov	r14, r20
  26:	f5 2e       	mov	r15, r21
  28:	00 c0       	rjmp	.+0      	; 0x2a <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0x2a>
  2a:	d6 01       	movw	r26, r12
  2c:	53 96       	adiw	r26, 0x13	; 19
  2e:	8d 91       	ld	r24, X+
  30:	9c 91       	ld	r25, X
  32:	54 97       	sbiw	r26, 0x14	; 20
  34:	0e 94 00 00 	call	0	; 0x0 <_ZN21StreamHFA11xRS232WiFi5writeEPKhj>
  38:	d6 01       	movw	r26, r12
  3a:	51 96       	adiw	r26, 0x11	; 17
  3c:	ed 91       	ld	r30, X+
  3e:	fc 91       	ld	r31, X
{
	inputBuffer = _inputBuffer;
  40:	52 97       	sbiw	r26, 0x12	; 18
  42:	32 81       	ldd	r19, Z+2	; 0x02
	outputBuffer = _outputBuffer;
  44:	24 81       	ldd	r18, Z+4	; 0x04
  46:	32 17       	cp	r19, r18
	rwStateMachine = _rwStateMachine;
  48:	01 f0       	breq	.+0      	; 0x4a <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0x4a>
  4a:	13 2f       	mov	r17, r19
}
  4c:	12 1b       	sub	r17, r18
  4e:	81 2f       	mov	r24, r17
  50:	90 e0       	ldi	r25, 0x00	; 0
  52:	8e 15       	cp	r24, r14
  54:	9f 05       	cpc	r25, r15
  56:	00 f0       	brcs	.+0      	; 0x58 <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0x58>
  58:	1e 2d       	mov	r17, r14
  5a:	03 81       	ldd	r16, Z+3	; 0x03
  5c:	81 2f       	mov	r24, r17
  5e:	82 0f       	add	r24, r18
  60:	38 17       	cp	r19, r24
  62:	00 f4       	brcc	.+0      	; 0x64 <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0x64>
  64:	83 2f       	mov	r24, r19
  66:	84 83       	std	Z+4, r24	; 0x04
  68:	28 17       	cp	r18, r24
  6a:	00 f4       	brcc	.+0      	; 0x6c <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0x6c>
  6c:	82 2f       	mov	r24, r18
  6e:	83 83       	std	Z+3, r24	; 0x03
  70:	f6 01       	movw	r30, r12
  72:	c1 89       	ldd	r28, Z+17	; 0x11
  74:	d2 89       	ldd	r29, Z+18	; 0x12
  76:	2b 81       	ldd	r18, Y+3	; 0x03
  78:	8c 81       	ldd	r24, Y+4	; 0x04
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	30 e0       	ldi	r19, 0x00	; 0
  7e:	82 1b       	sub	r24, r18
  80:	93 0b       	sbc	r25, r19
  82:	41 2f       	mov	r20, r17
  84:	50 e0       	ldi	r21, 0x00	; 0
  86:	84 17       	cp	r24, r20
  88:	95 07       	cpc	r25, r21
  8a:	04 f4       	brge	.+0      	; 0x8c <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0x8c>
  8c:	ac 01       	movw	r20, r24
  8e:	94 2e       	mov	r9, r20
  90:	88 81       	ld	r24, Y
  92:	99 81       	ldd	r25, Y+1	; 0x01
  94:	82 0f       	add	r24, r18
  96:	93 1f       	adc	r25, r19
  98:	68 2d       	mov	r22, r8
  9a:	77 2d       	mov	r23, r7
  9c:	50 e0       	ldi	r21, 0x00	; 0
  9e:	0e 94 00 00 	call	0	; 0x0 <_ZN21StreamHFA11xRS232WiFi5writeEPKhj>
  a2:	8b 81       	ldd	r24, Y+3	; 0x03
  a4:	89 0d       	add	r24, r9
  a6:	8b 83       	std	Y+3, r24	; 0x03
  a8:	d6 01       	movw	r26, r12
  aa:	51 96       	adiw	r26, 0x11	; 17
  ac:	ed 91       	ld	r30, X+
  ae:	fc 91       	ld	r31, X
  b0:	52 97       	sbiw	r26, 0x12	; 18
  b2:	84 81       	ldd	r24, Z+4	; 0x04
  b4:	08 17       	cp	r16, r24
  b6:	00 f4       	brcc	.+0      	; 0xb8 <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0xb8>
  b8:	80 2f       	mov	r24, r16
  ba:	83 83       	std	Z+3, r24	; 0x03
  bc:	e1 1a       	sub	r14, r17
  be:	f1 08       	sbc	r15, r1
  c0:	e1 14       	cp	r14, r1
  c2:	f1 04       	cpc	r15, r1
  c4:	01 f0       	breq	.+0      	; 0xc6 <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0xc6>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <_ZN21StreamHFA11xRS232WiFi5writeEPKhj+0xc8>
  c8:	8b 2d       	mov	r24, r11
  ca:	9a 2d       	mov	r25, r10
  cc:	df 91       	pop	r29
  ce:	cf 91       	pop	r28
  d0:	1f 91       	pop	r17
  d2:	0f 91       	pop	r16
  d4:	ff 90       	pop	r15
  d6:	ef 90       	pop	r14
  d8:	df 90       	pop	r13
  da:	cf 90       	pop	r12
  dc:	bf 90       	pop	r11
  de:	af 90       	pop	r10
  e0:	9f 90       	pop	r9
  e2:	8f 90       	pop	r8
  e4:	7f 90       	pop	r7
  e6:	08 95       	ret

Disassembly of section .text._ZN21StreamHFA11xRS232WiFi4peekEv:

00000000 <_ZN21StreamHFA11xRS232WiFi4peekEv>:

#include "StreamHFA11xRS232WiFi.h"

// =================================================

StreamHFA11xRS232WiFi::StreamHFA11xRS232WiFi( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , RWStateMachine* _rwStateMachine ) : dp( PSTR( "StreamHFA11xRS232WiFi" ) )
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	ef 85       	ldd	r30, Y+15	; 0x0f
   8:	f8 89       	ldd	r31, Y+16	; 0x10
   a:	94 81       	ldd	r25, Z+4	; 0x04
   c:	83 81       	ldd	r24, Z+3	; 0x03
   e:	98 17       	cp	r25, r24
  10:	01 f4       	brne	.+0      	; 0x12 <_ZN21StreamHFA11xRS232WiFi4peekEv+0x12>
  12:	8b 89       	ldd	r24, Y+19	; 0x13
  14:	9c 89       	ldd	r25, Y+20	; 0x14
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN21StreamHFA11xRS232WiFi4peekEv>
  1a:	ef 85       	ldd	r30, Y+15	; 0x0f
  1c:	f8 89       	ldd	r31, Y+16	; 0x10
  1e:	83 81       	ldd	r24, Z+3	; 0x03
  20:	94 81       	ldd	r25, Z+4	; 0x04
  22:	98 17       	cp	r25, r24
  24:	01 f0       	breq	.+0      	; 0x26 <_ZN21StreamHFA11xRS232WiFi4peekEv+0x26>
  26:	01 90       	ld	r0, Z+
  28:	f0 81       	ld	r31, Z
  2a:	e0 2d       	mov	r30, r0
  2c:	e8 0f       	add	r30, r24
  2e:	f1 1d       	adc	r31, r1
  30:	80 81       	ld	r24, Z
  32:	90 e0       	ldi	r25, 0x00	; 0
  34:	00 c0       	rjmp	.+0      	; 0x36 <_ZN21StreamHFA11xRS232WiFi4peekEv+0x36>
  36:	8f ef       	ldi	r24, 0xFF	; 255
  38:	9f ef       	ldi	r25, 0xFF	; 255
  3a:	df 91       	pop	r29
  3c:	cf 91       	pop	r28
  3e:	08 95       	ret

Disassembly of section .text._ZN21StreamHFA11xRS232WiFi4readEv:

00000000 <_ZN21StreamHFA11xRS232WiFi4readEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	ef 85       	ldd	r30, Y+15	; 0x0f
   8:	f8 89       	ldd	r31, Y+16	; 0x10
   a:	94 81       	ldd	r25, Z+4	; 0x04
   c:	83 81       	ldd	r24, Z+3	; 0x03
   e:	98 17       	cp	r25, r24
  10:	01 f4       	brne	.+0      	; 0x12 <_ZN21StreamHFA11xRS232WiFi4readEv+0x12>
  12:	8b 89       	ldd	r24, Y+19	; 0x13
  14:	9c 89       	ldd	r25, Y+20	; 0x14
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN21StreamHFA11xRS232WiFi4readEv>
  1a:	ef 85       	ldd	r30, Y+15	; 0x0f
  1c:	f8 89       	ldd	r31, Y+16	; 0x10
  1e:	23 81       	ldd	r18, Z+3	; 0x03
  20:	34 81       	ldd	r19, Z+4	; 0x04
  22:	32 17       	cp	r19, r18
  24:	01 f0       	breq	.+0      	; 0x26 <_ZN21StreamHFA11xRS232WiFi4readEv+0x26>
  26:	80 81       	ld	r24, Z
  28:	91 81       	ldd	r25, Z+1	; 0x01
  2a:	23 17       	cp	r18, r19
  2c:	00 f0       	brcs	.+0      	; 0x2e <_ZN21StreamHFA11xRS232WiFi4readEv+0x2e>
  2e:	fc 01       	movw	r30, r24
  30:	e3 0f       	add	r30, r19
  32:	f1 1d       	adc	r31, r1
  34:	31 97       	sbiw	r30, 0x01	; 1
  36:	80 81       	ld	r24, Z
  38:	00 c0       	rjmp	.+0      	; 0x3a <_ZN21StreamHFA11xRS232WiFi4readEv+0x3a>
  3a:	82 0f       	add	r24, r18
  3c:	91 1d       	adc	r25, r1
  3e:	dc 01       	movw	r26, r24
{
	inputBuffer = _inputBuffer;
  40:	8c 91       	ld	r24, X
  42:	2f 5f       	subi	r18, 0xFF	; 255
	outputBuffer = _outputBuffer;
  44:	23 83       	std	Z+3, r18	; 0x03
  46:	90 e0       	ldi	r25, 0x00	; 0
	rwStateMachine = _rwStateMachine;
  48:	00 c0       	rjmp	.+0      	; 0x4a <_ZN21StreamHFA11xRS232WiFi4readEv+0x4a>
  4a:	8f ef       	ldi	r24, 0xFF	; 255
}
  4c:	9f ef       	ldi	r25, 0xFF	; 255
  4e:	df 91       	pop	r29
  50:	cf 91       	pop	r28
  52:	08 95       	ret

Disassembly of section .text._ZN21StreamHFA11xRS232WiFiC2EP9AnyBufferIhhES2_P14RWStateMachine:

00000000 <_ZN21StreamHFA11xRS232WiFiC1EP9AnyBufferIhhES2_P14RWStateMachine>:

#include "StreamHFA11xRS232WiFi.h"

// =================================================

StreamHFA11xRS232WiFi::StreamHFA11xRS232WiFi( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , RWStateMachine* _rwStateMachine ) : dp( PSTR( "StreamHFA11xRS232WiFi" ) )
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	ec 01       	movw	r28, r24
  12:	6b 01       	movw	r12, r22
  14:	7a 01       	movw	r14, r20
  16:	89 01       	movw	r16, r18
  18:	1b 82       	std	Y+3, r1	; 0x03
  1a:	1a 82       	std	Y+2, r1	; 0x02
  1c:	88 ee       	ldi	r24, 0xE8	; 232
  1e:	93 e0       	ldi	r25, 0x03	; 3
  20:	a0 e0       	ldi	r26, 0x00	; 0
  22:	b0 e0       	ldi	r27, 0x00	; 0
  24:	8c 83       	std	Y+4, r24	; 0x04
  26:	9d 83       	std	Y+5, r25	; 0x05
  28:	ae 83       	std	Y+6, r26	; 0x06
  2a:	bf 83       	std	Y+7, r27	; 0x07
  2c:	80 e0       	ldi	r24, 0x00	; 0
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	99 83       	std	Y+1, r25	; 0x01
  32:	88 83       	st	Y, r24
  34:	ce 01       	movw	r24, r28
  36:	0c 96       	adiw	r24, 0x0c	; 12
  38:	60 e0       	ldi	r22, 0x00	; 0
  3a:	70 e0       	ldi	r23, 0x00	; 0
  3c:	0e 94 00 00 	call	0	; 0x0 <_ZN21StreamHFA11xRS232WiFiC1EP9AnyBufferIhhES2_P14RWStateMachine>
{
	inputBuffer = _inputBuffer;
  40:	d8 8a       	std	Y+16, r13	; 0x10
  42:	cf 86       	std	Y+15, r12	; 0x0f
	outputBuffer = _outputBuffer;
  44:	fa 8a       	std	Y+18, r15	; 0x12
  46:	e9 8a       	std	Y+17, r14	; 0x11
	rwStateMachine = _rwStateMachine;
  48:	1c 8b       	std	Y+20, r17	; 0x14
  4a:	0b 8b       	std	Y+19, r16	; 0x13
}
  4c:	df 91       	pop	r29
  4e:	cf 91       	pop	r28
  50:	1f 91       	pop	r17
  52:	0f 91       	pop	r16
  54:	ff 90       	pop	r15
  56:	ef 90       	pop	r14
  58:	df 90       	pop	r13
  5a:	cf 90       	pop	r12
  5c:	08 95       	ret

StreamHFA11xRS232WiFi2.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000007c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  000000b0  2**0
                  ALLOC
  3 .stab         00001698  00000000  00000000  000000b0  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00004e30  00000000  00000000  00001748  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN9AnyBufferIhhE11printReportEPc.part.3 00000092  00000000  00000000  00006578  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb 000001f6  00000000  00000000  0000660a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN22StreamHFA11xRS232WiFi218resetInternalStateEv 0000001a  00000000  00000000  00006800  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN9AnyBufferIhhE8setLimitEh 00000016  00000000  00000000  0000681a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv 000005ba  00000000  00000000  00006830  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv 000000be  00000000  00000000  00006dea  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN22StreamHFA11xRS232WiFi29availableEv 0000002a  00000000  00000000  00006ea8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN22StreamHFA11xRS232WiFi24peekEv 0000003e  00000000  00000000  00006ed2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv 00000266  00000000  00000000  00006f10  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text._ZN22StreamHFA11xRS232WiFi215doFullSendCycleEv 00000020  00000000  00000000  00007176  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text._ZN22StreamHFA11xRS232WiFi25writeEh 0000004c  00000000  00000000  00007196  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text._ZN22StreamHFA11xRS232WiFi25flushEv 00000020  00000000  00000000  000071e2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text._ZN22StreamHFA11xRS232WiFi24readEv 00000086  00000000  00000000  00007202  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text._ZN22StreamHFA11xRS232WiFi2C2EP9AnyBufferIhhES2_P24StreamHFA11xRS232WiFiCRC 0000008c  00000000  00000000  00007288  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .rodata._ZTV22StreamHFA11xRS232WiFi2 00000010  00000000  00000000  00007314  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 20 .rodata._ZTV6Stream 00000010  00000000  00000000  00007324  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 21 .progmem.data 00000305  00000000  00000000  00007334  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN9AnyBufferIhhE11printReportEPc.part.3:

00000000 <_ZN9AnyBufferIhhE11printReportEPc.part.3>:

#include "StreamHFA11xRS232WiFi2.h"

// =================================================

StreamHFA11xRS232WiFi2::StreamHFA11xRS232WiFi2( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream ) : dp( PSTR( "StreamHFA11xRS232WiFi2" ) , DEBUG_LEVEL_ALL )
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
   c:	05 96       	adiw	r24, 0x05	; 5
   e:	60 e0       	ldi	r22, 0x00	; 0
  10:	70 e0       	ldi	r23, 0x00	; 0
  12:	40 e0       	ldi	r20, 0x00	; 0
  14:	50 e0       	ldi	r21, 0x00	; 0
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN9AnyBufferIhhE11printReportEPc.part.3>
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
  1a:	4b 81       	ldd	r20, Y+3	; 0x03
  1c:	2c 81       	ldd	r18, Y+4	; 0x04
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
  1e:	3a 81       	ldd	r19, Y+2	; 0x02
  20:	8d b7       	in	r24, 0x3d	; 61
  22:	9e b7       	in	r25, 0x3e	; 62
  24:	0e 97       	sbiw	r24, 0x0e	; 14
  26:	0f b6       	in	r0, 0x3f	; 63
  28:	f8 94       	cli
  2a:	9e bf       	out	0x3e, r25	; 62
  2c:	0f be       	out	0x3f, r0	; 63
  2e:	8d bf       	out	0x3d, r24	; 61
  30:	ed b7       	in	r30, 0x3d	; 61
  32:	fe b7       	in	r31, 0x3e	; 62
  34:	31 96       	adiw	r30, 0x01	; 1
  36:	80 e0       	ldi	r24, 0x00	; 0
  38:	90 e0       	ldi	r25, 0x00	; 0
  3a:	ad b7       	in	r26, 0x3d	; 61
  3c:	be b7       	in	r27, 0x3e	; 62
  3e:	12 96       	adiw	r26, 0x02	; 2
  40:	9c 93       	st	X, r25
  42:	8e 93       	st	-X, r24
{
	inputBuffer = _inputBuffer;
  44:	11 97       	sbiw	r26, 0x01	; 1
  46:	13 83       	std	Z+3, r17	; 0x03
  48:	02 83       	std	Z+2, r16	; 0x02
	outputBuffer = _outputBuffer;
  4a:	44 83       	std	Z+4, r20	; 0x04
  4c:	15 82       	std	Z+5, r1	; 0x05
	crcStream = _crcStream;
  4e:	26 83       	std	Z+6, r18	; 0x06
  50:	17 82       	std	Z+7, r1	; 0x07
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  52:	30 87       	std	Z+8, r19	; 0x08
  54:	11 86       	std	Z+9, r1	; 0x09
  56:	82 2f       	mov	r24, r18
  58:	84 1b       	sub	r24, r20
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  5a:	82 87       	std	Z+10, r24	; 0x0a

	inputBuffer->setPositionAndLimit( 0 , 0 );
	outputBuffer->setPositionAndLimit( 0 , 0 );
  5c:	13 86       	std	Z+11, r1	; 0x0b
  5e:	32 1b       	sub	r19, r18
  60:	34 87       	std	Z+12, r19	; 0x0c
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  62:	15 86       	std	Z+13, r1	; 0x0d
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN9AnyBufferIhhE11printReportEPc.part.3>
  68:	ed b7       	in	r30, 0x3d	; 61
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  6a:	fe b7       	in	r31, 0x3e	; 62

	arr[0] = 0; // command
  6c:	3c 96       	adiw	r30, 0x0c	; 12
  6e:	0f b6       	in	r0, 0x3f	; 63
	arr[1] = 0; // sn
  70:	f8 94       	cli
	arr[2] = 0; // reserved
  72:	fe bf       	out	0x3e, r31	; 62
	arr[3] = 0; // reserved
  74:	0f be       	out	0x3f, r0	; 63
	arr[4] = 0; // RECV: length to read, SEND: send data length
  76:	ed bf       	out	0x3d, r30	; 61
	arr[5] = 0; // RECV: length to read, SEND: send data length
  78:	80 e0       	ldi	r24, 0x00	; 0
}
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	92 83       	std	Z+2, r25	; 0x02
  7e:	81 83       	std	Z+1, r24	; 0x01
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN9AnyBufferIhhE11printReportEPc.part.3>
  84:	0f 90       	pop	r0
  86:	0f 90       	pop	r0
  88:	df 91       	pop	r29
  8a:	cf 91       	pop	r28
  8c:	1f 91       	pop	r17
  8e:	0f 91       	pop	r16
  90:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb:

00000000 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>:

#include "StreamHFA11xRS232WiFi2.h"

// =================================================

StreamHFA11xRS232WiFi2::StreamHFA11xRS232WiFi2( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream ) : dp( PSTR( "StreamHFA11xRS232WiFi2" ) , DEBUG_LEVEL_ALL )
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	bf 92       	push	r11
  12:	cf 92       	push	r12
  14:	df 92       	push	r13
  16:	ef 92       	push	r14
  18:	ff 92       	push	r15
  1a:	0f 93       	push	r16
  1c:	1f 93       	push	r17
  1e:	cf 93       	push	r28
  20:	df 93       	push	r29
  22:	ec 01       	movw	r28, r24
  24:	f6 2e       	mov	r15, r22
  26:	00 e0       	ldi	r16, 0x00	; 0
  28:	10 e0       	ldi	r17, 0x00	; 0
  2a:	00 c0       	rjmp	.+0      	; 0x2c <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x2c>
  2c:	0f 5f       	subi	r16, 0xFF	; 255
  2e:	1f 4f       	sbci	r17, 0xFF	; 255
  30:	eb 89       	ldd	r30, Y+19	; 0x13
  32:	fc 89       	ldd	r31, Y+20	; 0x14
  34:	84 85       	ldd	r24, Z+12	; 0x0c
  36:	95 85       	ldd	r25, Z+13	; 0x0d
  38:	dc 01       	movw	r26, r24
  3a:	ed 91       	ld	r30, X+
  3c:	fc 91       	ld	r31, X
  3e:	06 80       	ldd	r0, Z+6	; 0x06
  40:	f7 81       	ldd	r31, Z+7	; 0x07
  42:	e0 2d       	mov	r30, r0
{
	inputBuffer = _inputBuffer;
  44:	19 95       	eicall
  46:	bf ef       	ldi	r27, 0xFF	; 255
  48:	8f 3f       	cpi	r24, 0xFF	; 255
	outputBuffer = _outputBuffer;
  4a:	9b 07       	cpc	r25, r27
  4c:	01 f4       	brne	.+0      	; 0x4e <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x4e>
	crcStream = _crcStream;
  4e:	8e 85       	ldd	r24, Y+14	; 0x0e
  50:	85 31       	cpi	r24, 0x15	; 21
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  52:	00 f4       	brcc	.+0      	; 0x54 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x54>
  54:	ce 01       	movw	r24, r28
  56:	0c 96       	adiw	r24, 0x0c	; 12
  58:	60 e0       	ldi	r22, 0x00	; 0
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  5a:	70 e0       	ldi	r23, 0x00	; 0

	inputBuffer->setPositionAndLimit( 0 , 0 );
	outputBuffer->setPositionAndLimit( 0 , 0 );
  5c:	40 e0       	ldi	r20, 0x00	; 0
  5e:	50 e0       	ldi	r21, 0x00	; 0
  60:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  64:	00 d0       	rcall	.+0      	; 0x66 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x66>
  66:	0f 92       	push	r0
  68:	80 e0       	ldi	r24, 0x00	; 0
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  6a:	90 e0       	ldi	r25, 0x00	; 0

	arr[0] = 0; // command
  6c:	ed b7       	in	r30, 0x3d	; 61
  6e:	fe b7       	in	r31, 0x3e	; 62
	arr[1] = 0; // sn
  70:	92 83       	std	Z+2, r25	; 0x02
	arr[2] = 0; // reserved
  72:	81 83       	std	Z+1, r24	; 0x01
	arr[3] = 0; // reserved
  74:	14 83       	std	Z+4, r17	; 0x04
	arr[4] = 0; // RECV: length to read, SEND: send data length
  76:	03 83       	std	Z+3, r16	; 0x03
	arr[5] = 0; // RECV: length to read, SEND: send data length
  78:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
}
  7c:	0f 90       	pop	r0
  7e:	0f 90       	pop	r0
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	ad b7       	in	r26, 0x3d	; 61
  86:	be b7       	in	r27, 0x3e	; 62
  88:	12 96       	adiw	r26, 0x02	; 2
  8a:	9c 93       	st	X, r25
  8c:	8e 93       	st	-X, r24
  8e:	11 97       	sbiw	r26, 0x01	; 1
  90:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
  94:	0f 90       	pop	r0
  96:	0f 90       	pop	r0
  98:	ff 20       	and	r15, r15
  9a:	01 f4       	brne	.+0      	; 0x9c <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x9c>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x9e>
  9e:	be 88       	ldd	r11, Y+22	; 0x16
  a0:	ee 24       	eor	r14, r14
  a2:	ff 24       	eor	r15, r15
  a4:	82 e0       	ldi	r24, 0x02	; 2
  a6:	d8 2e       	mov	r13, r24
  a8:	93 e0       	ldi	r25, 0x03	; 3
  aa:	c9 2e       	mov	r12, r25
  ac:	25 e1       	ldi	r18, 0x15	; 21
  ae:	82 2e       	mov	r8, r18
  b0:	91 2c       	mov	r9, r1
  b2:	8c 0e       	add	r8, r28
  b4:	9d 1e       	adc	r9, r29
  b6:	3c e0       	ldi	r19, 0x0C	; 12
  b8:	63 2e       	mov	r6, r19
  ba:	71 2c       	mov	r7, r1
  bc:	6c 0e       	add	r6, r28
  be:	7d 1e       	adc	r7, r29
  c0:	40 e0       	ldi	r20, 0x00	; 0
  c2:	44 2e       	mov	r4, r20
  c4:	40 e0       	ldi	r20, 0x00	; 0
  c6:	54 2e       	mov	r5, r20
  c8:	50 e0       	ldi	r21, 0x00	; 0
  ca:	25 2e       	mov	r2, r21
  cc:	50 e0       	ldi	r21, 0x00	; 0
  ce:	35 2e       	mov	r3, r21
  d0:	dd 8a       	std	Y+21, r13	; 0x15
  d2:	ee 8a       	std	Y+22, r14	; 0x16
  d4:	19 8e       	std	Y+25, r1	; 0x19
  d6:	ca 8e       	std	Y+26, r12	; 0x1a
  d8:	8b 89       	ldd	r24, Y+19	; 0x13
  da:	9c 89       	ldd	r25, Y+20	; 0x14
  dc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
  e0:	8b 89       	ldd	r24, Y+19	; 0x13
  e2:	9c 89       	ldd	r25, Y+20	; 0x14
  e4:	dc 01       	movw	r26, r24
  e6:	ed 91       	ld	r30, X+
  e8:	fc 91       	ld	r31, X
  ea:	02 80       	ldd	r0, Z+2	; 0x02
  ec:	f3 81       	ldd	r31, Z+3	; 0x03
  ee:	e0 2d       	mov	r30, r0
  f0:	b4 01       	movw	r22, r8
  f2:	46 e0       	ldi	r20, 0x06	; 6
  f4:	50 e0       	ldi	r21, 0x00	; 0
  f6:	19 95       	eicall
  f8:	8b 89       	ldd	r24, Y+19	; 0x13
  fa:	9c 89       	ldd	r25, Y+20	; 0x14
  fc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
 100:	8b 89       	ldd	r24, Y+19	; 0x13
 102:	9c 89       	ldd	r25, Y+20	; 0x14
 104:	dc 01       	movw	r26, r24
 106:	ed 91       	ld	r30, X+
 108:	fc 91       	ld	r31, X
 10a:	02 84       	ldd	r0, Z+10	; 0x0a
 10c:	f3 85       	ldd	r31, Z+11	; 0x0b
 10e:	e0 2d       	mov	r30, r0
 110:	19 95       	eicall
 112:	15 e0       	ldi	r17, 0x05	; 5
 114:	eb 89       	ldd	r30, Y+19	; 0x13
 116:	fc 89       	ldd	r31, Y+20	; 0x14
 118:	84 85       	ldd	r24, Z+12	; 0x0c
 11a:	95 85       	ldd	r25, Z+13	; 0x0d
 11c:	dc 01       	movw	r26, r24
 11e:	ed 91       	ld	r30, X+
 120:	fc 91       	ld	r31, X
 122:	04 80       	ldd	r0, Z+4	; 0x04
 124:	f5 81       	ldd	r31, Z+5	; 0x05
 126:	e0 2d       	mov	r30, r0
 128:	19 95       	eicall
 12a:	88 30       	cpi	r24, 0x08	; 8
 12c:	91 05       	cpc	r25, r1
 12e:	04 f4       	brge	.+0      	; 0x130 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x130>
 130:	00 c0       	rjmp	.+0      	; 0x132 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x132>
 132:	00 e0       	ldi	r16, 0x00	; 0
 134:	10 e0       	ldi	r17, 0x00	; 0
 136:	00 c0       	rjmp	.+0      	; 0x138 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x138>
 138:	0f 5f       	subi	r16, 0xFF	; 255
 13a:	1f 4f       	sbci	r17, 0xFF	; 255
 13c:	eb 89       	ldd	r30, Y+19	; 0x13
 13e:	fc 89       	ldd	r31, Y+20	; 0x14
 140:	84 85       	ldd	r24, Z+12	; 0x0c
 142:	95 85       	ldd	r25, Z+13	; 0x0d
 144:	dc 01       	movw	r26, r24
 146:	ed 91       	ld	r30, X+
 148:	fc 91       	ld	r31, X
 14a:	06 80       	ldd	r0, Z+6	; 0x06
 14c:	f7 81       	ldd	r31, Z+7	; 0x07
 14e:	e0 2d       	mov	r30, r0
 150:	19 95       	eicall
 152:	bf ef       	ldi	r27, 0xFF	; 255
 154:	8f 3f       	cpi	r24, 0xFF	; 255
 156:	9b 07       	cpc	r25, r27
 158:	01 f4       	brne	.+0      	; 0x15a <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x15a>
 15a:	8e 85       	ldd	r24, Y+14	; 0x0e
 15c:	85 31       	cpi	r24, 0x15	; 21
 15e:	00 f4       	brcc	.+0      	; 0x160 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x160>
 160:	c3 01       	movw	r24, r6
 162:	60 e0       	ldi	r22, 0x00	; 0
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
 16e:	00 d0       	rcall	.+0      	; 0x170 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x170>
 170:	00 d0       	rcall	.+0      	; 0x172 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x172>
 172:	ed b7       	in	r30, 0x3d	; 61
 174:	fe b7       	in	r31, 0x3e	; 62
 176:	31 96       	adiw	r30, 0x01	; 1
 178:	ad b7       	in	r26, 0x3d	; 61
 17a:	be b7       	in	r27, 0x3e	; 62
 17c:	12 96       	adiw	r26, 0x02	; 2
 17e:	5c 92       	st	X, r5
 180:	4e 92       	st	-X, r4
 182:	11 97       	sbiw	r26, 0x01	; 1
 184:	f3 82       	std	Z+3, r15	; 0x03
 186:	e2 82       	std	Z+2, r14	; 0x02
 188:	15 83       	std	Z+5, r17	; 0x05
 18a:	04 83       	std	Z+4, r16	; 0x04
 18c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	0f 90       	pop	r0
 196:	0f 90       	pop	r0
 198:	ed b7       	in	r30, 0x3d	; 61
 19a:	fe b7       	in	r31, 0x3e	; 62
 19c:	32 82       	std	Z+2, r3	; 0x02
 19e:	21 82       	std	Z+1, r2	; 0x01
 1a0:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
 1a4:	0f 90       	pop	r0
 1a6:	0f 90       	pop	r0
 1a8:	08 94       	sec
 1aa:	e1 1c       	adc	r14, r1
 1ac:	f1 1c       	adc	r15, r1
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	ef 16       	cp	r14, r31
 1b2:	f1 e0       	ldi	r31, 0x01	; 1
 1b4:	ff 06       	cpc	r15, r31
 1b6:	01 f0       	breq	.+0      	; 0x1b8 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x1b8>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x1ba>
 1ba:	be 8a       	std	Y+22, r11	; 0x16
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x1be>
 1be:	65 e0       	ldi	r22, 0x05	; 5
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb>
 1ca:	11 50       	subi	r17, 0x01	; 1
 1cc:	01 f4       	brne	.+0      	; 0x1ce <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x1ce>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x1d0>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <_ZN22StreamHFA11xRS232WiFi239discardAnyWaitingDataInUnderlyingStreamEb+0x1d2>
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	0f 91       	pop	r16
 1da:	ff 90       	pop	r15
 1dc:	ef 90       	pop	r14
 1de:	df 90       	pop	r13
 1e0:	cf 90       	pop	r12
 1e2:	bf 90       	pop	r11
 1e4:	9f 90       	pop	r9
 1e6:	8f 90       	pop	r8
 1e8:	7f 90       	pop	r7
 1ea:	6f 90       	pop	r6
 1ec:	5f 90       	pop	r5
 1ee:	4f 90       	pop	r4
 1f0:	3f 90       	pop	r3
 1f2:	2f 90       	pop	r2
 1f4:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi218resetInternalStateEv:

00000000 <_ZN22StreamHFA11xRS232WiFi218resetInternalStateEv>:

#include "StreamHFA11xRS232WiFi2.h"

// =================================================

StreamHFA11xRS232WiFi2::StreamHFA11xRS232WiFi2( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream ) : dp( PSTR( "StreamHFA11xRS232WiFi2" ) , DEBUG_LEVEL_ALL )
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	61 e0       	ldi	r22, 0x01	; 1
   8:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi218resetInternalStateEv>
   c:	8b 89       	ldd	r24, Y+19	; 0x13
   e:	9c 89       	ldd	r25, Y+20	; 0x14
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi218resetInternalStateEv>
  14:	df 91       	pop	r29
  16:	cf 91       	pop	r28
  18:	08 95       	ret

Disassembly of section .text._ZN9AnyBufferIhhE8setLimitEh:

00000000 <_ZN9AnyBufferIhhE8setLimitEh>:
   0:	fc 01       	movw	r30, r24
   2:	82 81       	ldd	r24, Z+2	; 0x02
   4:	86 17       	cp	r24, r22
   6:	00 f4       	brcc	.+0      	; 0x8 <_ZN9AnyBufferIhhE8setLimitEh+0x8>
   8:	68 2f       	mov	r22, r24
   a:	64 83       	std	Z+4, r22	; 0x04
   c:	83 81       	ldd	r24, Z+3	; 0x03
   e:	68 17       	cp	r22, r24
  10:	00 f4       	brcc	.+0      	; 0x12 <_ZN9AnyBufferIhhE8setLimitEh+0x12>
  12:	63 83       	std	Z+3, r22	; 0x03
  14:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv:

00000000 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>:
   0:	df 92       	push	r13
   2:	ef 92       	push	r14
   4:	ff 92       	push	r15
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	ec 01       	movw	r28, r24
  10:	ef 85       	ldd	r30, Y+15	; 0x0f
  12:	f8 89       	ldd	r31, Y+16	; 0x10
  14:	02 81       	ldd	r16, Z+2	; 0x02
  16:	84 81       	ldd	r24, Z+4	; 0x04
  18:	08 1b       	sub	r16, r24
  1a:	01 f4       	brne	.+0      	; 0x1c <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x1c>
  1c:	00 c0       	rjmp	.+0      	; 0x1e <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x1e>
  1e:	8e 85       	ldd	r24, Y+14	; 0x0e
  20:	85 31       	cpi	r24, 0x15	; 21
  22:	00 f4       	brcc	.+0      	; 0x24 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x24>
  24:	ce 01       	movw	r24, r28
  26:	0c 96       	adiw	r24, 0x0c	; 12
  28:	60 e0       	ldi	r22, 0x00	; 0
  2a:	70 e0       	ldi	r23, 0x00	; 0
  2c:	40 e0       	ldi	r20, 0x00	; 0
  2e:	50 e0       	ldi	r21, 0x00	; 0
  30:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
  34:	8b 89       	ldd	r24, Y+19	; 0x13
  36:	9c 89       	ldd	r25, Y+20	; 0x14
  38:	dc 01       	movw	r26, r24
  3a:	ed 91       	ld	r30, X+
  3c:	fc 91       	ld	r31, X
  3e:	04 80       	ldd	r0, Z+4	; 0x04
  40:	f5 81       	ldd	r31, Z+5	; 0x05
  42:	e0 2d       	mov	r30, r0
{
	inputBuffer = _inputBuffer;
  44:	19 95       	eicall
  46:	ed b7       	in	r30, 0x3d	; 61
  48:	fe b7       	in	r31, 0x3e	; 62
	outputBuffer = _outputBuffer;
  4a:	38 97       	sbiw	r30, 0x08	; 8
  4c:	0f b6       	in	r0, 0x3f	; 63
	crcStream = _crcStream;
  4e:	f8 94       	cli
  50:	fe bf       	out	0x3e, r31	; 62
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  52:	0f be       	out	0x3f, r0	; 63
  54:	ed bf       	out	0x3d, r30	; 61
  56:	31 96       	adiw	r30, 0x01	; 1
  58:	20 e0       	ldi	r18, 0x00	; 0
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  5a:	30 e0       	ldi	r19, 0x00	; 0

	inputBuffer->setPositionAndLimit( 0 , 0 );
	outputBuffer->setPositionAndLimit( 0 , 0 );
  5c:	ad b7       	in	r26, 0x3d	; 61
  5e:	be b7       	in	r27, 0x3e	; 62
  60:	12 96       	adiw	r26, 0x02	; 2
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  62:	3c 93       	st	X, r19
  64:	2e 93       	st	-X, r18
  66:	11 97       	sbiw	r26, 0x01	; 1
  68:	93 83       	std	Z+3, r25	; 0x03
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  6a:	82 83       	std	Z+2, r24	; 0x02

	arr[0] = 0; // command
  6c:	04 83       	std	Z+4, r16	; 0x04
  6e:	15 82       	std	Z+5, r1	; 0x05
	arr[1] = 0; // sn
  70:	8e 89       	ldd	r24, Y+22	; 0x16
	arr[2] = 0; // reserved
  72:	86 83       	std	Z+6, r24	; 0x06
	arr[3] = 0; // reserved
  74:	17 82       	std	Z+7, r1	; 0x07
	arr[4] = 0; // RECV: length to read, SEND: send data length
  76:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
	arr[5] = 0; // RECV: length to read, SEND: send data length
}
  7a:	ed b7       	in	r30, 0x3d	; 61
  7c:	fe b7       	in	r31, 0x3e	; 62
  7e:	36 96       	adiw	r30, 0x06	; 6
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	f8 94       	cli
  84:	fe bf       	out	0x3e, r31	; 62
  86:	0f be       	out	0x3f, r0	; 63
  88:	ed bf       	out	0x3d, r30	; 61
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	92 83       	std	Z+2, r25	; 0x02
  90:	81 83       	std	Z+1, r24	; 0x01
  92:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
  96:	0f 90       	pop	r0
  98:	0f 90       	pop	r0
  9a:	8f 85       	ldd	r24, Y+15	; 0x0f
  9c:	98 89       	ldd	r25, Y+16	; 0x10
  9e:	dc 01       	movw	r26, r24
  a0:	17 96       	adiw	r26, 0x07	; 7
  a2:	2c 91       	ld	r18, X
  a4:	17 97       	sbiw	r26, 0x07	; 7
  a6:	25 31       	cpi	r18, 0x15	; 21
  a8:	00 f4       	brcc	.+0      	; 0xaa <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0xaa>
  aa:	60 e0       	ldi	r22, 0x00	; 0
  ac:	70 e0       	ldi	r23, 0x00	; 0
  ae:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
  b2:	ce 01       	movw	r24, r28
  b4:	60 e0       	ldi	r22, 0x00	; 0
  b6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
  ba:	8e 85       	ldd	r24, Y+14	; 0x0e
  bc:	85 31       	cpi	r24, 0x15	; 21
  be:	00 f4       	brcc	.+0      	; 0xc0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0xc0>
  c0:	ce 01       	movw	r24, r28
  c2:	0c 96       	adiw	r24, 0x0c	; 12
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	70 e0       	ldi	r23, 0x00	; 0
  c8:	40 e0       	ldi	r20, 0x00	; 0
  ca:	50 e0       	ldi	r21, 0x00	; 0
  cc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
  d0:	8b 89       	ldd	r24, Y+19	; 0x13
  d2:	9c 89       	ldd	r25, Y+20	; 0x14
  d4:	dc 01       	movw	r26, r24
  d6:	ed 91       	ld	r30, X+
  d8:	fc 91       	ld	r31, X
  da:	04 80       	ldd	r0, Z+4	; 0x04
  dc:	f5 81       	ldd	r31, Z+5	; 0x05
  de:	e0 2d       	mov	r30, r0
  e0:	19 95       	eicall
  e2:	00 d0       	rcall	.+0      	; 0xe4 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0xe4>
  e4:	0f 92       	push	r0
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	ed b7       	in	r30, 0x3d	; 61
  ec:	fe b7       	in	r31, 0x3e	; 62
  ee:	32 83       	std	Z+2, r19	; 0x02
  f0:	21 83       	std	Z+1, r18	; 0x01
  f2:	94 83       	std	Z+4, r25	; 0x04
  f4:	83 83       	std	Z+3, r24	; 0x03
  f6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
  fa:	0f 90       	pop	r0
  fc:	0f 90       	pop	r0
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	ad b7       	in	r26, 0x3d	; 61
 104:	be b7       	in	r27, 0x3e	; 62
 106:	12 96       	adiw	r26, 0x02	; 2
 108:	9c 93       	st	X, r25
 10a:	8e 93       	st	-X, r24
 10c:	11 97       	sbiw	r26, 0x01	; 1
 10e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 112:	0f 90       	pop	r0
 114:	0f 90       	pop	r0
 116:	8b 89       	ldd	r24, Y+19	; 0x13
 118:	9c 89       	ldd	r25, Y+20	; 0x14
 11a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 11e:	82 e0       	ldi	r24, 0x02	; 2
 120:	8d 8b       	std	Y+21, r24	; 0x15
 122:	09 8f       	std	Y+25, r16	; 0x19
 124:	1a 8e       	std	Y+26, r1	; 0x1a
 126:	8b 89       	ldd	r24, Y+19	; 0x13
 128:	9c 89       	ldd	r25, Y+20	; 0x14
 12a:	dc 01       	movw	r26, r24
 12c:	ed 91       	ld	r30, X+
 12e:	fc 91       	ld	r31, X
 130:	be 01       	movw	r22, r28
 132:	6b 5e       	subi	r22, 0xEB	; 235
 134:	7f 4f       	sbci	r23, 0xFF	; 255
 136:	02 80       	ldd	r0, Z+2	; 0x02
 138:	f3 81       	ldd	r31, Z+3	; 0x03
 13a:	e0 2d       	mov	r30, r0
 13c:	46 e0       	ldi	r20, 0x06	; 6
 13e:	50 e0       	ldi	r21, 0x00	; 0
 140:	19 95       	eicall
 142:	8e 85       	ldd	r24, Y+14	; 0x0e
 144:	85 31       	cpi	r24, 0x15	; 21
 146:	00 f4       	brcc	.+0      	; 0x148 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x148>
 148:	ce 01       	movw	r24, r28
 14a:	0c 96       	adiw	r24, 0x0c	; 12
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	70 e0       	ldi	r23, 0x00	; 0
 150:	40 e0       	ldi	r20, 0x00	; 0
 152:	50 e0       	ldi	r21, 0x00	; 0
 154:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 158:	8b 89       	ldd	r24, Y+19	; 0x13
 15a:	9c 89       	ldd	r25, Y+20	; 0x14
 15c:	dc 01       	movw	r26, r24
 15e:	ed 91       	ld	r30, X+
 160:	fc 91       	ld	r31, X
 162:	04 80       	ldd	r0, Z+4	; 0x04
 164:	f5 81       	ldd	r31, Z+5	; 0x05
 166:	e0 2d       	mov	r30, r0
 168:	19 95       	eicall
 16a:	00 d0       	rcall	.+0      	; 0x16c <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x16c>
 16c:	0f 92       	push	r0
 16e:	20 e0       	ldi	r18, 0x00	; 0
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	ed b7       	in	r30, 0x3d	; 61
 174:	fe b7       	in	r31, 0x3e	; 62
 176:	32 83       	std	Z+2, r19	; 0x02
 178:	21 83       	std	Z+1, r18	; 0x01
 17a:	94 83       	std	Z+4, r25	; 0x04
 17c:	83 83       	std	Z+3, r24	; 0x03
 17e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	ad b7       	in	r26, 0x3d	; 61
 18c:	be b7       	in	r27, 0x3e	; 62
 18e:	12 96       	adiw	r26, 0x02	; 2
 190:	9c 93       	st	X, r25
 192:	8e 93       	st	-X, r24
 194:	11 97       	sbiw	r26, 0x01	; 1
 196:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	ce 01       	movw	r24, r28
 1a0:	60 e0       	ldi	r22, 0x00	; 0
 1a2:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 1a6:	8b 89       	ldd	r24, Y+19	; 0x13
 1a8:	9c 89       	ldd	r25, Y+20	; 0x14
 1aa:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 1ae:	8b 89       	ldd	r24, Y+19	; 0x13
 1b0:	9c 89       	ldd	r25, Y+20	; 0x14
 1b2:	dc 01       	movw	r26, r24
 1b4:	ed 91       	ld	r30, X+
 1b6:	fc 91       	ld	r31, X
 1b8:	02 84       	ldd	r0, Z+10	; 0x0a
 1ba:	f3 85       	ldd	r31, Z+11	; 0x0b
 1bc:	e0 2d       	mov	r30, r0
 1be:	19 95       	eicall
 1c0:	8e 85       	ldd	r24, Y+14	; 0x0e
 1c2:	85 31       	cpi	r24, 0x15	; 21
 1c4:	00 f4       	brcc	.+0      	; 0x1c6 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x1c6>
 1c6:	ce 01       	movw	r24, r28
 1c8:	0c 96       	adiw	r24, 0x0c	; 12
 1ca:	60 e0       	ldi	r22, 0x00	; 0
 1cc:	70 e0       	ldi	r23, 0x00	; 0
 1ce:	40 e0       	ldi	r20, 0x00	; 0
 1d0:	50 e0       	ldi	r21, 0x00	; 0
 1d2:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 1d6:	8b 89       	ldd	r24, Y+19	; 0x13
 1d8:	9c 89       	ldd	r25, Y+20	; 0x14
 1da:	dc 01       	movw	r26, r24
 1dc:	ed 91       	ld	r30, X+
 1de:	fc 91       	ld	r31, X
 1e0:	04 80       	ldd	r0, Z+4	; 0x04
 1e2:	f5 81       	ldd	r31, Z+5	; 0x05
 1e4:	e0 2d       	mov	r30, r0
 1e6:	19 95       	eicall
 1e8:	00 d0       	rcall	.+0      	; 0x1ea <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x1ea>
 1ea:	0f 92       	push	r0
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	ed b7       	in	r30, 0x3d	; 61
 1f2:	fe b7       	in	r31, 0x3e	; 62
 1f4:	32 83       	std	Z+2, r19	; 0x02
 1f6:	21 83       	std	Z+1, r18	; 0x01
 1f8:	94 83       	std	Z+4, r25	; 0x04
 1fa:	83 83       	std	Z+3, r24	; 0x03
 1fc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	ad b7       	in	r26, 0x3d	; 61
 20a:	be b7       	in	r27, 0x3e	; 62
 20c:	12 96       	adiw	r26, 0x02	; 2
 20e:	9c 93       	st	X, r25
 210:	8e 93       	st	-X, r24
 212:	11 97       	sbiw	r26, 0x01	; 1
 214:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 218:	0f 90       	pop	r0
 21a:	0f 90       	pop	r0
 21c:	8b 89       	ldd	r24, Y+19	; 0x13
 21e:	9c 89       	ldd	r25, Y+20	; 0x14
 220:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 224:	8b 89       	ldd	r24, Y+19	; 0x13
 226:	9c 89       	ldd	r25, Y+20	; 0x14
 228:	dc 01       	movw	r26, r24
 22a:	ed 91       	ld	r30, X+
 22c:	fc 91       	ld	r31, X
 22e:	04 80       	ldd	r0, Z+4	; 0x04
 230:	f5 81       	ldd	r31, Z+5	; 0x05
 232:	e0 2d       	mov	r30, r0
 234:	19 95       	eicall
 236:	86 30       	cpi	r24, 0x06	; 6
 238:	91 05       	cpc	r25, r1
 23a:	04 f0       	brlt	.+0      	; 0x23c <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x23c>
 23c:	8b 89       	ldd	r24, Y+19	; 0x13
 23e:	9c 89       	ldd	r25, Y+20	; 0x14
 240:	dc 01       	movw	r26, r24
 242:	ed 91       	ld	r30, X+
 244:	fc 91       	ld	r31, X
 246:	06 80       	ldd	r0, Z+6	; 0x06
 248:	f7 81       	ldd	r31, Z+7	; 0x07
 24a:	e0 2d       	mov	r30, r0
 24c:	19 95       	eicall
 24e:	18 2f       	mov	r17, r24
 250:	82 30       	cpi	r24, 0x02	; 2
 252:	01 f0       	breq	.+0      	; 0x254 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x254>
 254:	8e 85       	ldd	r24, Y+14	; 0x0e
 256:	8f 31       	cpi	r24, 0x1F	; 31
 258:	00 f0       	brcs	.+0      	; 0x25a <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x25a>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x25c>
 25c:	ce 01       	movw	r24, r28
 25e:	0c 96       	adiw	r24, 0x0c	; 12
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	40 e0       	ldi	r20, 0x00	; 0
 266:	50 e0       	ldi	r21, 0x00	; 0
 268:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 26c:	00 d0       	rcall	.+0      	; 0x26e <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x26e>
 26e:	0f 92       	push	r0
 270:	ed b7       	in	r30, 0x3d	; 61
 272:	fe b7       	in	r31, 0x3e	; 62
 274:	31 96       	adiw	r30, 0x01	; 1
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	00 c0       	rjmp	.+0      	; 0x27c <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x27c>
 27c:	8b 89       	ldd	r24, Y+19	; 0x13
 27e:	9c 89       	ldd	r25, Y+20	; 0x14
 280:	dc 01       	movw	r26, r24
 282:	ed 91       	ld	r30, X+
 284:	fc 91       	ld	r31, X
 286:	06 80       	ldd	r0, Z+6	; 0x06
 288:	f7 81       	ldd	r31, Z+7	; 0x07
 28a:	e0 2d       	mov	r30, r0
 28c:	19 95       	eicall
 28e:	18 2f       	mov	r17, r24
 290:	8e 89       	ldd	r24, Y+22	; 0x16
 292:	18 17       	cp	r17, r24
 294:	01 f0       	breq	.+0      	; 0x296 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x296>
 296:	8e 85       	ldd	r24, Y+14	; 0x0e
 298:	8f 31       	cpi	r24, 0x1F	; 31
 29a:	00 f0       	brcs	.+0      	; 0x29c <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x29c>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x29e>
 29e:	ce 01       	movw	r24, r28
 2a0:	0c 96       	adiw	r24, 0x0c	; 12
 2a2:	60 e0       	ldi	r22, 0x00	; 0
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	40 e0       	ldi	r20, 0x00	; 0
 2a8:	50 e0       	ldi	r21, 0x00	; 0
 2aa:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 2ae:	00 d0       	rcall	.+0      	; 0x2b0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x2b0>
 2b0:	00 d0       	rcall	.+0      	; 0x2b2 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x2b2>
 2b2:	ed b7       	in	r30, 0x3d	; 61
 2b4:	fe b7       	in	r31, 0x3e	; 62
 2b6:	31 96       	adiw	r30, 0x01	; 1
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	ad b7       	in	r26, 0x3d	; 61
 2be:	be b7       	in	r27, 0x3e	; 62
 2c0:	12 96       	adiw	r26, 0x02	; 2
 2c2:	9c 93       	st	X, r25
 2c4:	8e 93       	st	-X, r24
 2c6:	11 97       	sbiw	r26, 0x01	; 1
 2c8:	12 83       	std	Z+2, r17	; 0x02
 2ca:	13 82       	std	Z+3, r1	; 0x03
 2cc:	8e 89       	ldd	r24, Y+22	; 0x16
 2ce:	84 83       	std	Z+4, r24	; 0x04
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x2d2>
 2d2:	8b 89       	ldd	r24, Y+19	; 0x13
 2d4:	9c 89       	ldd	r25, Y+20	; 0x14
 2d6:	dc 01       	movw	r26, r24
 2d8:	ed 91       	ld	r30, X+
 2da:	fc 91       	ld	r31, X
 2dc:	06 80       	ldd	r0, Z+6	; 0x06
 2de:	f7 81       	ldd	r31, Z+7	; 0x07
 2e0:	e0 2d       	mov	r30, r0
 2e2:	19 95       	eicall
 2e4:	18 2f       	mov	r17, r24
 2e6:	88 23       	and	r24, r24
 2e8:	01 f0       	breq	.+0      	; 0x2ea <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x2ea>
 2ea:	8e 85       	ldd	r24, Y+14	; 0x0e
 2ec:	8f 31       	cpi	r24, 0x1F	; 31
 2ee:	00 f0       	brcs	.+0      	; 0x2f0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x2f0>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x2f2>
 2f2:	ce 01       	movw	r24, r28
 2f4:	0c 96       	adiw	r24, 0x0c	; 12
 2f6:	60 e0       	ldi	r22, 0x00	; 0
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	40 e0       	ldi	r20, 0x00	; 0
 2fc:	50 e0       	ldi	r21, 0x00	; 0
 2fe:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 302:	00 d0       	rcall	.+0      	; 0x304 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x304>
 304:	0f 92       	push	r0
 306:	ed b7       	in	r30, 0x3d	; 61
 308:	fe b7       	in	r31, 0x3e	; 62
 30a:	31 96       	adiw	r30, 0x01	; 1
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	ad b7       	in	r26, 0x3d	; 61
 312:	be b7       	in	r27, 0x3e	; 62
 314:	12 96       	adiw	r26, 0x02	; 2
 316:	9c 93       	st	X, r25
 318:	8e 93       	st	-X, r24
 31a:	11 97       	sbiw	r26, 0x01	; 1
 31c:	12 83       	std	Z+2, r17	; 0x02
 31e:	13 82       	std	Z+3, r1	; 0x03
 320:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 324:	0f 90       	pop	r0
 326:	0f 90       	pop	r0
 328:	00 c0       	rjmp	.+0      	; 0x32a <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x32a>
 32a:	8b 89       	ldd	r24, Y+19	; 0x13
 32c:	9c 89       	ldd	r25, Y+20	; 0x14
 32e:	dc 01       	movw	r26, r24
 330:	ed 91       	ld	r30, X+
 332:	fc 91       	ld	r31, X
 334:	06 80       	ldd	r0, Z+6	; 0x06
 336:	f7 81       	ldd	r31, Z+7	; 0x07
 338:	e0 2d       	mov	r30, r0
 33a:	19 95       	eicall
 33c:	18 2f       	mov	r17, r24
 33e:	88 23       	and	r24, r24
 340:	01 f0       	breq	.+0      	; 0x342 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x342>
 342:	8e 85       	ldd	r24, Y+14	; 0x0e
 344:	8f 31       	cpi	r24, 0x1F	; 31
 346:	00 f0       	brcs	.+0      	; 0x348 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x348>
 348:	00 c0       	rjmp	.+0      	; 0x34a <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x34a>
 34a:	ce 01       	movw	r24, r28
 34c:	0c 96       	adiw	r24, 0x0c	; 12
 34e:	60 e0       	ldi	r22, 0x00	; 0
 350:	70 e0       	ldi	r23, 0x00	; 0
 352:	40 e0       	ldi	r20, 0x00	; 0
 354:	50 e0       	ldi	r21, 0x00	; 0
 356:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 35a:	00 d0       	rcall	.+0      	; 0x35c <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x35c>
 35c:	0f 92       	push	r0
 35e:	ed b7       	in	r30, 0x3d	; 61
 360:	fe b7       	in	r31, 0x3e	; 62
 362:	31 96       	adiw	r30, 0x01	; 1
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	00 c0       	rjmp	.+0      	; 0x36a <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x36a>
 36a:	8b 89       	ldd	r24, Y+19	; 0x13
 36c:	9c 89       	ldd	r25, Y+20	; 0x14
 36e:	dc 01       	movw	r26, r24
 370:	ed 91       	ld	r30, X+
 372:	fc 91       	ld	r31, X
 374:	06 80       	ldd	r0, Z+6	; 0x06
 376:	f7 81       	ldd	r31, Z+7	; 0x07
 378:	e0 2d       	mov	r30, r0
 37a:	19 95       	eicall
 37c:	7c 01       	movw	r14, r24
 37e:	8b 89       	ldd	r24, Y+19	; 0x13
 380:	9c 89       	ldd	r25, Y+20	; 0x14
 382:	dc 01       	movw	r26, r24
 384:	ed 91       	ld	r30, X+
 386:	fc 91       	ld	r31, X
 388:	06 80       	ldd	r0, Z+6	; 0x06
 38a:	f7 81       	ldd	r31, Z+7	; 0x07
 38c:	e0 2d       	mov	r30, r0
 38e:	19 95       	eicall
 390:	38 2f       	mov	r19, r24
 392:	20 e0       	ldi	r18, 0x00	; 0
 394:	e2 0e       	add	r14, r18
 396:	f3 1e       	adc	r15, r19
 398:	80 2f       	mov	r24, r16
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	2e 85       	ldd	r18, Y+14	; 0x0e
 39e:	8e 15       	cp	r24, r14
 3a0:	9f 05       	cpc	r25, r15
 3a2:	00 f4       	brcc	.+0      	; 0x3a4 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x3a4>
 3a4:	2f 31       	cpi	r18, 0x1F	; 31
 3a6:	00 f0       	brcs	.+0      	; 0x3a8 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x3a8>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x3aa>
 3aa:	ce 01       	movw	r24, r28
 3ac:	0c 96       	adiw	r24, 0x0c	; 12
 3ae:	60 e0       	ldi	r22, 0x00	; 0
 3b0:	70 e0       	ldi	r23, 0x00	; 0
 3b2:	40 e0       	ldi	r20, 0x00	; 0
 3b4:	50 e0       	ldi	r21, 0x00	; 0
 3b6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 3ba:	00 d0       	rcall	.+0      	; 0x3bc <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x3bc>
 3bc:	00 d0       	rcall	.+0      	; 0x3be <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x3be>
 3be:	ed b7       	in	r30, 0x3d	; 61
 3c0:	fe b7       	in	r31, 0x3e	; 62
 3c2:	31 96       	adiw	r30, 0x01	; 1
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	ad b7       	in	r26, 0x3d	; 61
 3ca:	be b7       	in	r27, 0x3e	; 62
 3cc:	12 96       	adiw	r26, 0x02	; 2
 3ce:	9c 93       	st	X, r25
 3d0:	8e 93       	st	-X, r24
 3d2:	11 97       	sbiw	r26, 0x01	; 1
 3d4:	f3 82       	std	Z+3, r15	; 0x03
 3d6:	e2 82       	std	Z+2, r14	; 0x02
 3d8:	04 83       	std	Z+4, r16	; 0x04
 3da:	15 82       	std	Z+5, r1	; 0x05
 3dc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 3e0:	0f 90       	pop	r0
 3e2:	0f 90       	pop	r0
 3e4:	0f 90       	pop	r0
 3e6:	0f 90       	pop	r0
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	ed b7       	in	r30, 0x3d	; 61
 3ee:	fe b7       	in	r31, 0x3e	; 62
 3f0:	92 83       	std	Z+2, r25	; 0x02
 3f2:	81 83       	std	Z+1, r24	; 0x01
 3f4:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 3f8:	0f 90       	pop	r0
 3fa:	0f 90       	pop	r0
 3fc:	00 c0       	rjmp	.+0      	; 0x3fe <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x3fe>
 3fe:	25 31       	cpi	r18, 0x15	; 21
 400:	00 f4       	brcc	.+0      	; 0x402 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x402>
 402:	ce 01       	movw	r24, r28
 404:	0c 96       	adiw	r24, 0x0c	; 12
 406:	60 e0       	ldi	r22, 0x00	; 0
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	40 e0       	ldi	r20, 0x00	; 0
 40c:	50 e0       	ldi	r21, 0x00	; 0
 40e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 412:	00 d0       	rcall	.+0      	; 0x414 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x414>
 414:	00 d0       	rcall	.+0      	; 0x416 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x416>
 416:	ed b7       	in	r30, 0x3d	; 61
 418:	fe b7       	in	r31, 0x3e	; 62
 41a:	31 96       	adiw	r30, 0x01	; 1
 41c:	80 e0       	ldi	r24, 0x00	; 0
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	ad b7       	in	r26, 0x3d	; 61
 422:	be b7       	in	r27, 0x3e	; 62
 424:	12 96       	adiw	r26, 0x02	; 2
 426:	9c 93       	st	X, r25
 428:	8e 93       	st	-X, r24
 42a:	11 97       	sbiw	r26, 0x01	; 1
 42c:	02 83       	std	Z+2, r16	; 0x02
 42e:	13 82       	std	Z+3, r1	; 0x03
 430:	f5 82       	std	Z+5, r15	; 0x05
 432:	e4 82       	std	Z+4, r14	; 0x04
 434:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 438:	0f 90       	pop	r0
 43a:	0f 90       	pop	r0
 43c:	0f 90       	pop	r0
 43e:	0f 90       	pop	r0
 440:	80 e0       	ldi	r24, 0x00	; 0
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	ed b7       	in	r30, 0x3d	; 61
 446:	fe b7       	in	r31, 0x3e	; 62
 448:	92 83       	std	Z+2, r25	; 0x02
 44a:	81 83       	std	Z+1, r24	; 0x01
 44c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 450:	0f 90       	pop	r0
 452:	0f 90       	pop	r0
 454:	ef 85       	ldd	r30, Y+15	; 0x0f
 456:	f8 89       	ldd	r31, Y+16	; 0x10
 458:	d4 80       	ldd	r13, Z+4	; 0x04
 45a:	87 01       	movw	r16, r14
 45c:	00 c0       	rjmp	.+0      	; 0x45e <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x45e>
 45e:	8b 89       	ldd	r24, Y+19	; 0x13
 460:	9c 89       	ldd	r25, Y+20	; 0x14
 462:	dc 01       	movw	r26, r24
 464:	ed 91       	ld	r30, X+
 466:	fc 91       	ld	r31, X
 468:	04 80       	ldd	r0, Z+4	; 0x04
 46a:	f5 81       	ldd	r31, Z+5	; 0x05
 46c:	e0 2d       	mov	r30, r0
 46e:	19 95       	eicall
 470:	18 16       	cp	r1, r24
 472:	19 06       	cpc	r1, r25
 474:	04 f4       	brge	.+0      	; 0x476 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x476>
 476:	8b 89       	ldd	r24, Y+19	; 0x13
 478:	9c 89       	ldd	r25, Y+20	; 0x14
 47a:	dc 01       	movw	r26, r24
 47c:	ed 91       	ld	r30, X+
 47e:	fc 91       	ld	r31, X
 480:	06 80       	ldd	r0, Z+6	; 0x06
 482:	f7 81       	ldd	r31, Z+7	; 0x07
 484:	e0 2d       	mov	r30, r0
 486:	19 95       	eicall
 488:	af 85       	ldd	r26, Y+15	; 0x0f
 48a:	b8 89       	ldd	r27, Y+16	; 0x10
 48c:	14 96       	adiw	r26, 0x04	; 4
 48e:	9c 91       	ld	r25, X
 490:	14 97       	sbiw	r26, 0x04	; 4
 492:	ed 91       	ld	r30, X+
 494:	fc 91       	ld	r31, X
 496:	11 97       	sbiw	r26, 0x01	; 1
 498:	e9 0f       	add	r30, r25
 49a:	f1 1d       	adc	r31, r1
 49c:	80 83       	st	Z, r24
 49e:	9f 5f       	subi	r25, 0xFF	; 255
 4a0:	14 96       	adiw	r26, 0x04	; 4
 4a2:	9c 93       	st	X, r25
 4a4:	14 97       	sbiw	r26, 0x04	; 4
 4a6:	01 50       	subi	r16, 0x01	; 1
 4a8:	10 40       	sbci	r17, 0x00	; 0
 4aa:	01 15       	cp	r16, r1
 4ac:	11 05       	cpc	r17, r1
 4ae:	01 f4       	brne	.+0      	; 0x4b0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x4b0>
 4b0:	8f 85       	ldd	r24, Y+15	; 0x0f
 4b2:	98 89       	ldd	r25, Y+16	; 0x10
 4b4:	6d 2d       	mov	r22, r13
 4b6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 4ba:	8b 89       	ldd	r24, Y+19	; 0x13
 4bc:	9c 89       	ldd	r25, Y+20	; 0x14
 4be:	dc 01       	movw	r26, r24
 4c0:	ed 91       	ld	r30, X+
 4c2:	fc 91       	ld	r31, X
 4c4:	04 80       	ldd	r0, Z+4	; 0x04
 4c6:	f5 81       	ldd	r31, Z+5	; 0x05
 4c8:	e0 2d       	mov	r30, r0
 4ca:	19 95       	eicall
 4cc:	82 30       	cpi	r24, 0x02	; 2
 4ce:	91 05       	cpc	r25, r1
 4d0:	04 f0       	brlt	.+0      	; 0x4d2 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x4d2>
 4d2:	8e 85       	ldd	r24, Y+14	; 0x0e
 4d4:	85 31       	cpi	r24, 0x15	; 21
 4d6:	00 f4       	brcc	.+0      	; 0x4d8 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x4d8>
 4d8:	ce 01       	movw	r24, r28
 4da:	0c 96       	adiw	r24, 0x0c	; 12
 4dc:	60 e0       	ldi	r22, 0x00	; 0
 4de:	70 e0       	ldi	r23, 0x00	; 0
 4e0:	40 e0       	ldi	r20, 0x00	; 0
 4e2:	50 e0       	ldi	r21, 0x00	; 0
 4e4:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 4e8:	8b 89       	ldd	r24, Y+19	; 0x13
 4ea:	9c 89       	ldd	r25, Y+20	; 0x14
 4ec:	dc 01       	movw	r26, r24
 4ee:	ed 91       	ld	r30, X+
 4f0:	fc 91       	ld	r31, X
 4f2:	04 80       	ldd	r0, Z+4	; 0x04
 4f4:	f5 81       	ldd	r31, Z+5	; 0x05
 4f6:	e0 2d       	mov	r30, r0
 4f8:	19 95       	eicall
 4fa:	00 d0       	rcall	.+0      	; 0x4fc <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x4fc>
 4fc:	0f 92       	push	r0
 4fe:	20 e0       	ldi	r18, 0x00	; 0
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	ed b7       	in	r30, 0x3d	; 61
 504:	fe b7       	in	r31, 0x3e	; 62
 506:	32 83       	std	Z+2, r19	; 0x02
 508:	21 83       	std	Z+1, r18	; 0x01
 50a:	94 83       	std	Z+4, r25	; 0x04
 50c:	83 83       	std	Z+3, r24	; 0x03
 50e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 512:	0f 90       	pop	r0
 514:	0f 90       	pop	r0
 516:	80 e0       	ldi	r24, 0x00	; 0
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	ad b7       	in	r26, 0x3d	; 61
 51c:	be b7       	in	r27, 0x3e	; 62
 51e:	12 96       	adiw	r26, 0x02	; 2
 520:	9c 93       	st	X, r25
 522:	8e 93       	st	-X, r24
 524:	11 97       	sbiw	r26, 0x01	; 1
 526:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 52a:	0f 90       	pop	r0
 52c:	0f 90       	pop	r0
 52e:	8b 89       	ldd	r24, Y+19	; 0x13
 530:	9c 89       	ldd	r25, Y+20	; 0x14
 532:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 536:	88 23       	and	r24, r24
 538:	01 f0       	breq	.+0      	; 0x53a <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x53a>
 53a:	8e 89       	ldd	r24, Y+22	; 0x16
 53c:	8f 5f       	subi	r24, 0xFF	; 255
 53e:	8e 8b       	std	Y+22, r24	; 0x16
 540:	8f 85       	ldd	r24, Y+15	; 0x0f
 542:	98 89       	ldd	r25, Y+16	; 0x10
 544:	fc 01       	movw	r30, r24
 546:	64 81       	ldd	r22, Z+4	; 0x04
 548:	6e 0d       	add	r22, r14
 54a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 54e:	8f 85       	ldd	r24, Y+15	; 0x0f
 550:	98 89       	ldd	r25, Y+16	; 0x10
 552:	dc 01       	movw	r26, r24
 554:	17 96       	adiw	r26, 0x07	; 7
 556:	2c 91       	ld	r18, X
 558:	17 97       	sbiw	r26, 0x07	; 7
 55a:	25 31       	cpi	r18, 0x15	; 21
 55c:	00 f4       	brcc	.+0      	; 0x55e <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x55e>
 55e:	60 e0       	ldi	r22, 0x00	; 0
 560:	70 e0       	ldi	r23, 0x00	; 0
 562:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 566:	00 c0       	rjmp	.+0      	; 0x568 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x568>
 568:	8e 85       	ldd	r24, Y+14	; 0x0e
 56a:	8f 31       	cpi	r24, 0x1F	; 31
 56c:	00 f4       	brcc	.+0      	; 0x56e <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x56e>
 56e:	ce 01       	movw	r24, r28
 570:	0c 96       	adiw	r24, 0x0c	; 12
 572:	60 e0       	ldi	r22, 0x00	; 0
 574:	70 e0       	ldi	r23, 0x00	; 0
 576:	40 e0       	ldi	r20, 0x00	; 0
 578:	50 e0       	ldi	r21, 0x00	; 0
 57a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 57e:	0f 92       	push	r0
 580:	0f 92       	push	r0
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	ed b7       	in	r30, 0x3d	; 61
 588:	fe b7       	in	r31, 0x3e	; 62
 58a:	92 83       	std	Z+2, r25	; 0x02
 58c:	81 83       	std	Z+1, r24	; 0x01
 58e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv>
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	ad b7       	in	r26, 0x3d	; 61
 598:	be b7       	in	r27, 0x3e	; 62
 59a:	12 96       	adiw	r26, 0x02	; 2
 59c:	9c 93       	st	X, r25
 59e:	8e 93       	st	-X, r24
 5a0:	11 97       	sbiw	r26, 0x01	; 1
 5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x5a4>
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <_ZN22StreamHFA11xRS232WiFi222sendRECVAndReadRECVACKEv+0x5a8>
 5a8:	80 e0       	ldi	r24, 0x00	; 0
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	1f 91       	pop	r17
 5b0:	0f 91       	pop	r16
 5b2:	ff 90       	pop	r15
 5b4:	ef 90       	pop	r14
 5b6:	df 90       	pop	r13
 5b8:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv:

00000000 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv>:

#include "StreamHFA11xRS232WiFi2.h"

// =================================================

StreamHFA11xRS232WiFi2::StreamHFA11xRS232WiFi2( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream ) : dp( PSTR( "StreamHFA11xRS232WiFi2" ) , DEBUG_LEVEL_ALL )
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	8c 01       	movw	r16, r24
  1a:	c0 e0       	ldi	r28, 0x00	; 0
  1c:	d0 e0       	ldi	r29, 0x00	; 0
  1e:	6c e0       	ldi	r22, 0x0C	; 12
  20:	e6 2e       	mov	r14, r22
  22:	f1 2c       	mov	r15, r1
  24:	e8 0e       	add	r14, r24
  26:	f9 1e       	adc	r15, r25
  28:	70 e0       	ldi	r23, 0x00	; 0
  2a:	c7 2e       	mov	r12, r23
  2c:	70 e0       	ldi	r23, 0x00	; 0
  2e:	d7 2e       	mov	r13, r23
  30:	e4 e1       	ldi	r30, 0x14	; 20
  32:	ae 2e       	mov	r10, r30
  34:	b1 2c       	mov	r11, r1
  36:	f0 e0       	ldi	r31, 0x00	; 0
  38:	8f 2e       	mov	r8, r31
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	9f 2e       	mov	r9, r31
  3e:	c8 01       	movw	r24, r16
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv>
{
	inputBuffer = _inputBuffer;
  44:	88 23       	and	r24, r24
  46:	01 f4       	brne	.+0      	; 0x48 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv+0x48>
  48:	d8 01       	movw	r26, r16
	outputBuffer = _outputBuffer;
  4a:	1e 96       	adiw	r26, 0x0e	; 14
  4c:	8c 91       	ld	r24, X
	crcStream = _crcStream;
  4e:	1e 97       	sbiw	r26, 0x0e	; 14
  50:	85 31       	cpi	r24, 0x15	; 21
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  52:	00 f4       	brcc	.+0      	; 0x54 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv+0x54>
  54:	c7 01       	movw	r24, r14
  56:	60 e0       	ldi	r22, 0x00	; 0
  58:	70 e0       	ldi	r23, 0x00	; 0
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  5a:	40 e0       	ldi	r20, 0x00	; 0

	inputBuffer->setPositionAndLimit( 0 , 0 );
	outputBuffer->setPositionAndLimit( 0 , 0 );
  5c:	50 e0       	ldi	r21, 0x00	; 0
  5e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv>
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  62:	00 d0       	rcall	.+0      	; 0x64 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv+0x64>
  64:	00 d0       	rcall	.+0      	; 0x66 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv+0x66>
  66:	ed b7       	in	r30, 0x3d	; 61
  68:	fe b7       	in	r31, 0x3e	; 62
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  6a:	31 96       	adiw	r30, 0x01	; 1

	arr[0] = 0; // command
  6c:	ad b7       	in	r26, 0x3d	; 61
  6e:	be b7       	in	r27, 0x3e	; 62
	arr[1] = 0; // sn
  70:	12 96       	adiw	r26, 0x02	; 2
	arr[2] = 0; // reserved
  72:	dc 92       	st	X, r13
	arr[3] = 0; // reserved
  74:	ce 92       	st	-X, r12
	arr[4] = 0; // RECV: length to read, SEND: send data length
  76:	11 97       	sbiw	r26, 0x01	; 1
	arr[5] = 0; // RECV: length to read, SEND: send data length
  78:	d3 83       	std	Z+3, r29	; 0x03
}
  7a:	c2 83       	std	Z+2, r28	; 0x02
  7c:	b5 82       	std	Z+5, r11	; 0x05
  7e:	a4 82       	std	Z+4, r10	; 0x04
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv>
  84:	0f 90       	pop	r0
  86:	0f 90       	pop	r0
  88:	0f 90       	pop	r0
  8a:	0f 90       	pop	r0
  8c:	ed b7       	in	r30, 0x3d	; 61
  8e:	fe b7       	in	r31, 0x3e	; 62
  90:	92 82       	std	Z+2, r9	; 0x02
  92:	81 82       	std	Z+1, r8	; 0x01
  94:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv>
  98:	0f 90       	pop	r0
  9a:	0f 90       	pop	r0
  9c:	21 96       	adiw	r28, 0x01	; 1
  9e:	c4 31       	cpi	r28, 0x14	; 20
  a0:	d1 05       	cpc	r29, r1
  a2:	01 f4       	brne	.+0      	; 0xa4 <_ZN22StreamHFA11xRS232WiFi215doFullReadCycleEv+0xa4>
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	1f 91       	pop	r17
  aa:	0f 91       	pop	r16
  ac:	ff 90       	pop	r15
  ae:	ef 90       	pop	r14
  b0:	df 90       	pop	r13
  b2:	cf 90       	pop	r12
  b4:	bf 90       	pop	r11
  b6:	af 90       	pop	r10
  b8:	9f 90       	pop	r9
  ba:	8f 90       	pop	r8
  bc:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi29availableEv:

00000000 <_ZN22StreamHFA11xRS232WiFi29availableEv>:

#include "StreamHFA11xRS232WiFi2.h"

// =================================================

StreamHFA11xRS232WiFi2::StreamHFA11xRS232WiFi2( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream ) : dp( PSTR( "StreamHFA11xRS232WiFi2" ) , DEBUG_LEVEL_ALL )
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	ef 85       	ldd	r30, Y+15	; 0x0f
   8:	f8 89       	ldd	r31, Y+16	; 0x10
   a:	84 81       	ldd	r24, Z+4	; 0x04
   c:	93 81       	ldd	r25, Z+3	; 0x03
   e:	89 1b       	sub	r24, r25
  10:	01 f4       	brne	.+0      	; 0x12 <_ZN22StreamHFA11xRS232WiFi29availableEv+0x12>
  12:	ce 01       	movw	r24, r28
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi29availableEv>
  18:	ef 85       	ldd	r30, Y+15	; 0x0f
  1a:	f8 89       	ldd	r31, Y+16	; 0x10
  1c:	84 81       	ldd	r24, Z+4	; 0x04
  1e:	93 81       	ldd	r25, Z+3	; 0x03
  20:	89 1b       	sub	r24, r25
  22:	90 e0       	ldi	r25, 0x00	; 0
  24:	df 91       	pop	r29
  26:	cf 91       	pop	r28
  28:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi24peekEv:

00000000 <_ZN22StreamHFA11xRS232WiFi24peekEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	ef 85       	ldd	r30, Y+15	; 0x0f
   8:	f8 89       	ldd	r31, Y+16	; 0x10
   a:	94 81       	ldd	r25, Z+4	; 0x04
   c:	83 81       	ldd	r24, Z+3	; 0x03
   e:	98 17       	cp	r25, r24
  10:	01 f4       	brne	.+0      	; 0x12 <_ZN22StreamHFA11xRS232WiFi24peekEv+0x12>
  12:	ce 01       	movw	r24, r28
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi24peekEv>
  18:	ef 85       	ldd	r30, Y+15	; 0x0f
  1a:	f8 89       	ldd	r31, Y+16	; 0x10
  1c:	83 81       	ldd	r24, Z+3	; 0x03
  1e:	94 81       	ldd	r25, Z+4	; 0x04
  20:	98 17       	cp	r25, r24
  22:	01 f0       	breq	.+0      	; 0x24 <_ZN22StreamHFA11xRS232WiFi24peekEv+0x24>
  24:	01 90       	ld	r0, Z+
  26:	f0 81       	ld	r31, Z
  28:	e0 2d       	mov	r30, r0
  2a:	e8 0f       	add	r30, r24
  2c:	f1 1d       	adc	r31, r1
  2e:	80 81       	ld	r24, Z
  30:	90 e0       	ldi	r25, 0x00	; 0
  32:	00 c0       	rjmp	.+0      	; 0x34 <_ZN22StreamHFA11xRS232WiFi24peekEv+0x34>
  34:	8f ef       	ldi	r24, 0xFF	; 255
  36:	9f ef       	ldi	r25, 0xFF	; 255
  38:	df 91       	pop	r29
  3a:	cf 91       	pop	r28
  3c:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv:

00000000 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	dc 01       	movw	r26, r24
   c:	51 96       	adiw	r26, 0x11	; 17
   e:	ed 91       	ld	r30, X+
  10:	fc 91       	ld	r31, X
  12:	52 97       	sbiw	r26, 0x12	; 18
  14:	c4 81       	ldd	r28, Z+4	; 0x04
  16:	83 81       	ldd	r24, Z+3	; 0x03
  18:	c8 1b       	sub	r28, r24
  1a:	01 f4       	brne	.+0      	; 0x1c <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0x1c>
  1c:	00 c0       	rjmp	.+0      	; 0x1e <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0x1e>
  1e:	1e 96       	adiw	r26, 0x0e	; 14
  20:	8c 91       	ld	r24, X
  22:	1e 97       	sbiw	r26, 0x0e	; 14
  24:	85 31       	cpi	r24, 0x15	; 21
  26:	00 f4       	brcc	.+0      	; 0x28 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0x28>
  28:	c8 01       	movw	r24, r16
  2a:	0c 96       	adiw	r24, 0x0c	; 12
  2c:	60 e0       	ldi	r22, 0x00	; 0
  2e:	70 e0       	ldi	r23, 0x00	; 0
  30:	40 e0       	ldi	r20, 0x00	; 0
  32:	50 e0       	ldi	r21, 0x00	; 0
  34:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
  38:	f8 01       	movw	r30, r16
  3a:	83 89       	ldd	r24, Z+19	; 0x13
  3c:	94 89       	ldd	r25, Z+20	; 0x14
  3e:	dc 01       	movw	r26, r24
  40:	ed 91       	ld	r30, X+
  42:	fc 91       	ld	r31, X
{
	inputBuffer = _inputBuffer;
  44:	04 80       	ldd	r0, Z+4	; 0x04
  46:	f5 81       	ldd	r31, Z+5	; 0x05
  48:	e0 2d       	mov	r30, r0
	outputBuffer = _outputBuffer;
  4a:	19 95       	eicall
  4c:	ed b7       	in	r30, 0x3d	; 61
	crcStream = _crcStream;
  4e:	fe b7       	in	r31, 0x3e	; 62
  50:	38 97       	sbiw	r30, 0x08	; 8
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  52:	0f b6       	in	r0, 0x3f	; 63
  54:	f8 94       	cli
  56:	fe bf       	out	0x3e, r31	; 62
  58:	0f be       	out	0x3f, r0	; 63
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  5a:	ed bf       	out	0x3d, r30	; 61

	inputBuffer->setPositionAndLimit( 0 , 0 );
	outputBuffer->setPositionAndLimit( 0 , 0 );
  5c:	31 96       	adiw	r30, 0x01	; 1
  5e:	20 e0       	ldi	r18, 0x00	; 0
  60:	30 e0       	ldi	r19, 0x00	; 0
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  62:	ad b7       	in	r26, 0x3d	; 61
  64:	be b7       	in	r27, 0x3e	; 62
  66:	12 96       	adiw	r26, 0x02	; 2
  68:	3c 93       	st	X, r19
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  6a:	2e 93       	st	-X, r18

	arr[0] = 0; // command
  6c:	11 97       	sbiw	r26, 0x01	; 1
  6e:	93 83       	std	Z+3, r25	; 0x03
	arr[1] = 0; // sn
  70:	82 83       	std	Z+2, r24	; 0x02
	arr[2] = 0; // reserved
  72:	c4 83       	std	Z+4, r28	; 0x04
	arr[3] = 0; // reserved
  74:	15 82       	std	Z+5, r1	; 0x05
	arr[4] = 0; // RECV: length to read, SEND: send data length
  76:	d8 01       	movw	r26, r16
	arr[5] = 0; // RECV: length to read, SEND: send data length
  78:	56 96       	adiw	r26, 0x16	; 22
}
  7a:	8c 91       	ld	r24, X
  7c:	86 83       	std	Z+6, r24	; 0x06
  7e:	17 82       	std	Z+7, r1	; 0x07
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
  84:	ed b7       	in	r30, 0x3d	; 61
  86:	fe b7       	in	r31, 0x3e	; 62
  88:	36 96       	adiw	r30, 0x06	; 6
  8a:	0f b6       	in	r0, 0x3f	; 63
  8c:	f8 94       	cli
  8e:	fe bf       	out	0x3e, r31	; 62
  90:	0f be       	out	0x3f, r0	; 63
  92:	ed bf       	out	0x3d, r30	; 61
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	92 83       	std	Z+2, r25	; 0x02
  9a:	81 83       	std	Z+1, r24	; 0x01
  9c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
  a0:	0f 90       	pop	r0
  a2:	0f 90       	pop	r0
  a4:	c8 01       	movw	r24, r16
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
  ac:	d8 01       	movw	r26, r16
  ae:	1e 96       	adiw	r26, 0x0e	; 14
  b0:	8c 91       	ld	r24, X
  b2:	1e 97       	sbiw	r26, 0x0e	; 14
  b4:	85 31       	cpi	r24, 0x15	; 21
  b6:	00 f4       	brcc	.+0      	; 0xb8 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0xb8>
  b8:	c8 01       	movw	r24, r16
  ba:	0c 96       	adiw	r24, 0x0c	; 12
  bc:	60 e0       	ldi	r22, 0x00	; 0
  be:	70 e0       	ldi	r23, 0x00	; 0
  c0:	40 e0       	ldi	r20, 0x00	; 0
  c2:	50 e0       	ldi	r21, 0x00	; 0
  c4:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
  c8:	f8 01       	movw	r30, r16
  ca:	83 89       	ldd	r24, Z+19	; 0x13
  cc:	94 89       	ldd	r25, Z+20	; 0x14
  ce:	dc 01       	movw	r26, r24
  d0:	ed 91       	ld	r30, X+
  d2:	fc 91       	ld	r31, X
  d4:	04 80       	ldd	r0, Z+4	; 0x04
  d6:	f5 81       	ldd	r31, Z+5	; 0x05
  d8:	e0 2d       	mov	r30, r0
  da:	19 95       	eicall
  dc:	00 d0       	rcall	.+0      	; 0xde <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0xde>
  de:	0f 92       	push	r0
  e0:	20 e0       	ldi	r18, 0x00	; 0
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	ed b7       	in	r30, 0x3d	; 61
  e6:	fe b7       	in	r31, 0x3e	; 62
  e8:	32 83       	std	Z+2, r19	; 0x02
  ea:	21 83       	std	Z+1, r18	; 0x01
  ec:	94 83       	std	Z+4, r25	; 0x04
  ee:	83 83       	std	Z+3, r24	; 0x03
  f0:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	ad b7       	in	r26, 0x3d	; 61
  fe:	be b7       	in	r27, 0x3e	; 62
 100:	12 96       	adiw	r26, 0x02	; 2
 102:	9c 93       	st	X, r25
 104:	8e 93       	st	-X, r24
 106:	11 97       	sbiw	r26, 0x01	; 1
 108:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
 10c:	0f 90       	pop	r0
 10e:	0f 90       	pop	r0
 110:	f8 01       	movw	r30, r16
 112:	83 89       	ldd	r24, Z+19	; 0x13
 114:	94 89       	ldd	r25, Z+20	; 0x14
 116:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	d8 01       	movw	r26, r16
 11e:	55 96       	adiw	r26, 0x15	; 21
 120:	8c 93       	st	X, r24
 122:	55 97       	sbiw	r26, 0x15	; 21
 124:	59 96       	adiw	r26, 0x19	; 25
 126:	cc 93       	st	X, r28
 128:	59 97       	sbiw	r26, 0x19	; 25
 12a:	5a 96       	adiw	r26, 0x1a	; 26
 12c:	1c 92       	st	X, r1
 12e:	5a 97       	sbiw	r26, 0x1a	; 26
 130:	53 96       	adiw	r26, 0x13	; 19
 132:	8d 91       	ld	r24, X+
 134:	9c 91       	ld	r25, X
 136:	54 97       	sbiw	r26, 0x14	; 20
 138:	51 96       	adiw	r26, 0x11	; 17
 13a:	ed 91       	ld	r30, X+
 13c:	fc 91       	ld	r31, X
 13e:	52 97       	sbiw	r26, 0x12	; 18
 140:	dc 01       	movw	r26, r24
 142:	4d 91       	ld	r20, X+
 144:	5c 91       	ld	r21, X
 146:	23 81       	ldd	r18, Z+3	; 0x03
 148:	60 81       	ld	r22, Z
 14a:	71 81       	ldd	r23, Z+1	; 0x01
 14c:	62 0f       	add	r22, r18
 14e:	71 1d       	adc	r23, r1
 150:	da 01       	movw	r26, r20
 152:	12 96       	adiw	r26, 0x02	; 2
 154:	ed 91       	ld	r30, X+
 156:	fc 91       	ld	r31, X
 158:	13 97       	sbiw	r26, 0x03	; 3
 15a:	4c 2f       	mov	r20, r28
 15c:	50 e0       	ldi	r21, 0x00	; 0
 15e:	19 95       	eicall
 160:	f8 01       	movw	r30, r16
 162:	83 89       	ldd	r24, Z+19	; 0x13
 164:	94 89       	ldd	r25, Z+20	; 0x14
 166:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
 16a:	d8 01       	movw	r26, r16
 16c:	53 96       	adiw	r26, 0x13	; 19
 16e:	8d 91       	ld	r24, X+
 170:	9c 91       	ld	r25, X
 172:	54 97       	sbiw	r26, 0x14	; 20
 174:	dc 01       	movw	r26, r24
 176:	ed 91       	ld	r30, X+
 178:	fc 91       	ld	r31, X
 17a:	02 84       	ldd	r0, Z+10	; 0x0a
 17c:	f3 85       	ldd	r31, Z+11	; 0x0b
 17e:	e0 2d       	mov	r30, r0
 180:	19 95       	eicall
 182:	d8 01       	movw	r26, r16
 184:	53 96       	adiw	r26, 0x13	; 19
 186:	ed 91       	ld	r30, X+
 188:	fc 91       	ld	r31, X
 18a:	54 97       	sbiw	r26, 0x14	; 20
 18c:	84 85       	ldd	r24, Z+12	; 0x0c
 18e:	95 85       	ldd	r25, Z+13	; 0x0d
 190:	dc 01       	movw	r26, r24
 192:	ed 91       	ld	r30, X+
 194:	fc 91       	ld	r31, X
 196:	06 80       	ldd	r0, Z+6	; 0x06
 198:	f7 81       	ldd	r31, Z+7	; 0x07
 19a:	e0 2d       	mov	r30, r0
 19c:	19 95       	eicall
 19e:	d8 01       	movw	r26, r16
 1a0:	53 96       	adiw	r26, 0x13	; 19
 1a2:	ed 91       	ld	r30, X+
 1a4:	fc 91       	ld	r31, X
 1a6:	54 97       	sbiw	r26, 0x14	; 20
 1a8:	84 85       	ldd	r24, Z+12	; 0x0c
 1aa:	95 85       	ldd	r25, Z+13	; 0x0d
 1ac:	dc 01       	movw	r26, r24
 1ae:	ed 91       	ld	r30, X+
 1b0:	fc 91       	ld	r31, X
 1b2:	06 80       	ldd	r0, Z+6	; 0x06
 1b4:	f7 81       	ldd	r31, Z+7	; 0x07
 1b6:	e0 2d       	mov	r30, r0
 1b8:	19 95       	eicall
 1ba:	d8 01       	movw	r26, r16
 1bc:	53 96       	adiw	r26, 0x13	; 19
 1be:	ed 91       	ld	r30, X+
 1c0:	fc 91       	ld	r31, X
 1c2:	54 97       	sbiw	r26, 0x14	; 20
 1c4:	84 85       	ldd	r24, Z+12	; 0x0c
 1c6:	95 85       	ldd	r25, Z+13	; 0x0d
 1c8:	dc 01       	movw	r26, r24
 1ca:	ed 91       	ld	r30, X+
 1cc:	fc 91       	ld	r31, X
 1ce:	06 80       	ldd	r0, Z+6	; 0x06
 1d0:	f7 81       	ldd	r31, Z+7	; 0x07
 1d2:	e0 2d       	mov	r30, r0
 1d4:	19 95       	eicall
 1d6:	d8 01       	movw	r26, r16
 1d8:	53 96       	adiw	r26, 0x13	; 19
 1da:	ed 91       	ld	r30, X+
 1dc:	fc 91       	ld	r31, X
 1de:	54 97       	sbiw	r26, 0x14	; 20
 1e0:	84 85       	ldd	r24, Z+12	; 0x0c
 1e2:	95 85       	ldd	r25, Z+13	; 0x0d
 1e4:	dc 01       	movw	r26, r24
 1e6:	ed 91       	ld	r30, X+
 1e8:	fc 91       	ld	r31, X
 1ea:	06 80       	ldd	r0, Z+6	; 0x06
 1ec:	f7 81       	ldd	r31, Z+7	; 0x07
 1ee:	e0 2d       	mov	r30, r0
 1f0:	19 95       	eicall
 1f2:	d8 01       	movw	r26, r16
 1f4:	53 96       	adiw	r26, 0x13	; 19
 1f6:	ed 91       	ld	r30, X+
 1f8:	fc 91       	ld	r31, X
 1fa:	54 97       	sbiw	r26, 0x14	; 20
 1fc:	84 85       	ldd	r24, Z+12	; 0x0c
 1fe:	95 85       	ldd	r25, Z+13	; 0x0d
 200:	dc 01       	movw	r26, r24
 202:	ed 91       	ld	r30, X+
 204:	fc 91       	ld	r31, X
 206:	06 80       	ldd	r0, Z+6	; 0x06
 208:	f7 81       	ldd	r31, Z+7	; 0x07
 20a:	e0 2d       	mov	r30, r0
 20c:	19 95       	eicall
 20e:	88 23       	and	r24, r24
 210:	01 f4       	brne	.+0      	; 0x212 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0x212>
 212:	d8 01       	movw	r26, r16
 214:	51 96       	adiw	r26, 0x11	; 17
 216:	ed 91       	ld	r30, X+
 218:	fc 91       	ld	r31, X
 21a:	52 97       	sbiw	r26, 0x12	; 18
 21c:	83 81       	ldd	r24, Z+3	; 0x03
 21e:	8c 0f       	add	r24, r28
 220:	83 83       	std	Z+3, r24	; 0x03
 222:	51 96       	adiw	r26, 0x11	; 17
 224:	cd 91       	ld	r28, X+
 226:	dc 91       	ld	r29, X
 228:	52 97       	sbiw	r26, 0x12	; 18
 22a:	21 e0       	ldi	r18, 0x01	; 1
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	9b 81       	ldd	r25, Y+3	; 0x03
 230:	8c 81       	ldd	r24, Y+4	; 0x04
 232:	98 17       	cp	r25, r24
 234:	01 f0       	breq	.+0      	; 0x236 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0x236>
 236:	20 e0       	ldi	r18, 0x00	; 0
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	8a 81       	ldd	r24, Y+2	; 0x02
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	28 17       	cp	r18, r24
 240:	39 07       	cpc	r19, r25
 242:	01 f4       	brne	.+0      	; 0x244 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0x244>
 244:	ce 01       	movw	r24, r28
 246:	60 e0       	ldi	r22, 0x00	; 0
 248:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv>
 24c:	1b 82       	std	Y+3, r1	; 0x03
 24e:	f8 01       	movw	r30, r16
 250:	86 89       	ldd	r24, Z+22	; 0x16
 252:	8f 5f       	subi	r24, 0xFF	; 255
 254:	86 8b       	std	Z+22, r24	; 0x16
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	00 c0       	rjmp	.+0      	; 0x25a <_ZN22StreamHFA11xRS232WiFi222sendSENDAndReadSENDACKEv+0x25a>
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	df 91       	pop	r29
 25e:	cf 91       	pop	r28
 260:	1f 91       	pop	r17
 262:	0f 91       	pop	r16
 264:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi215doFullSendCycleEv:

00000000 <_ZN22StreamHFA11xRS232WiFi215doFullSendCycleEv>:

#include "StreamHFA11xRS232WiFi2.h"

// =================================================

StreamHFA11xRS232WiFi2::StreamHFA11xRS232WiFi2( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream ) : dp( PSTR( "StreamHFA11xRS232WiFi2" ) , DEBUG_LEVEL_ALL )
   0:	1f 93       	push	r17
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
   6:	ec 01       	movw	r28, r24
   8:	14 e1       	ldi	r17, 0x14	; 20
   a:	ce 01       	movw	r24, r28
   c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi215doFullSendCycleEv>
  10:	88 23       	and	r24, r24
  12:	01 f4       	brne	.+0      	; 0x14 <_ZN22StreamHFA11xRS232WiFi215doFullSendCycleEv+0x14>
  14:	11 50       	subi	r17, 0x01	; 1
  16:	01 f4       	brne	.+0      	; 0x18 <_ZN22StreamHFA11xRS232WiFi215doFullSendCycleEv+0x18>
  18:	df 91       	pop	r29
  1a:	cf 91       	pop	r28
  1c:	1f 91       	pop	r17
  1e:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi25writeEh:

00000000 <_ZN22StreamHFA11xRS232WiFi25writeEh>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	0f 92       	push	r0
   a:	cd b7       	in	r28, 0x3d	; 61
   c:	de b7       	in	r29, 0x3e	; 62
   e:	8c 01       	movw	r16, r24
  10:	00 c0       	rjmp	.+0      	; 0x12 <_ZN22StreamHFA11xRS232WiFi25writeEh+0x12>
  12:	c8 01       	movw	r24, r16
  14:	69 83       	std	Y+1, r22	; 0x01
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi25writeEh>
  1a:	69 81       	ldd	r22, Y+1	; 0x01
  1c:	d8 01       	movw	r26, r16
  1e:	51 96       	adiw	r26, 0x11	; 17
  20:	ed 91       	ld	r30, X+
  22:	fc 91       	ld	r31, X
  24:	52 97       	sbiw	r26, 0x12	; 18
  26:	84 81       	ldd	r24, Z+4	; 0x04
  28:	92 81       	ldd	r25, Z+2	; 0x02
  2a:	98 17       	cp	r25, r24
  2c:	01 f0       	breq	.+0      	; 0x2e <_ZN22StreamHFA11xRS232WiFi25writeEh+0x2e>
  2e:	a0 81       	ld	r26, Z
  30:	b1 81       	ldd	r27, Z+1	; 0x01
  32:	a8 0f       	add	r26, r24
  34:	b1 1d       	adc	r27, r1
  36:	6c 93       	st	X, r22
  38:	8f 5f       	subi	r24, 0xFF	; 255
  3a:	84 83       	std	Z+4, r24	; 0x04
  3c:	81 e0       	ldi	r24, 0x01	; 1
  3e:	90 e0       	ldi	r25, 0x00	; 0
  40:	0f 90       	pop	r0
  42:	df 91       	pop	r29
{
	inputBuffer = _inputBuffer;
  44:	cf 91       	pop	r28
  46:	1f 91       	pop	r17
  48:	0f 91       	pop	r16
	outputBuffer = _outputBuffer;
  4a:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi25flushEv:

00000000 <_ZN22StreamHFA11xRS232WiFi25flushEv>:

#include "StreamHFA11xRS232WiFi2.h"

// =================================================

StreamHFA11xRS232WiFi2::StreamHFA11xRS232WiFi2( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream ) : dp( PSTR( "StreamHFA11xRS232WiFi2" ) , DEBUG_LEVEL_ALL )
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	00 c0       	rjmp	.+0      	; 0x8 <_ZN22StreamHFA11xRS232WiFi25flushEv+0x8>
   8:	ce 01       	movw	r24, r28
   a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi25flushEv>
   e:	e9 89       	ldd	r30, Y+17	; 0x11
  10:	fa 89       	ldd	r31, Y+18	; 0x12
  12:	94 81       	ldd	r25, Z+4	; 0x04
  14:	83 81       	ldd	r24, Z+3	; 0x03
  16:	98 17       	cp	r25, r24
  18:	01 f4       	brne	.+0      	; 0x1a <_ZN22StreamHFA11xRS232WiFi25flushEv+0x1a>
  1a:	df 91       	pop	r29
  1c:	cf 91       	pop	r28
  1e:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi24readEv:

00000000 <_ZN22StreamHFA11xRS232WiFi24readEv>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	ef 85       	ldd	r30, Y+15	; 0x0f
   c:	f8 89       	ldd	r31, Y+16	; 0x10
   e:	94 81       	ldd	r25, Z+4	; 0x04
  10:	83 81       	ldd	r24, Z+3	; 0x03
  12:	98 17       	cp	r25, r24
  14:	01 f4       	brne	.+0      	; 0x16 <_ZN22StreamHFA11xRS232WiFi24readEv+0x16>
  16:	ce 01       	movw	r24, r28
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi24readEv>
  1c:	ef 85       	ldd	r30, Y+15	; 0x0f
  1e:	f8 89       	ldd	r31, Y+16	; 0x10
  20:	23 81       	ldd	r18, Z+3	; 0x03
  22:	34 81       	ldd	r19, Z+4	; 0x04
  24:	32 17       	cp	r19, r18
  26:	01 f0       	breq	.+0      	; 0x28 <_ZN22StreamHFA11xRS232WiFi24readEv+0x28>
  28:	80 81       	ld	r24, Z
  2a:	91 81       	ldd	r25, Z+1	; 0x01
  2c:	23 17       	cp	r18, r19
  2e:	00 f0       	brcs	.+0      	; 0x30 <_ZN22StreamHFA11xRS232WiFi24readEv+0x30>
  30:	fc 01       	movw	r30, r24
  32:	e3 0f       	add	r30, r19
  34:	f1 1d       	adc	r31, r1
  36:	31 97       	sbiw	r30, 0x01	; 1
  38:	00 81       	ld	r16, Z
  3a:	00 c0       	rjmp	.+0      	; 0x3c <_ZN22StreamHFA11xRS232WiFi24readEv+0x3c>
  3c:	82 0f       	add	r24, r18
  3e:	91 1d       	adc	r25, r1
  40:	dc 01       	movw	r26, r24
  42:	0c 91       	ld	r16, X
{
	inputBuffer = _inputBuffer;
  44:	2f 5f       	subi	r18, 0xFF	; 255
  46:	23 83       	std	Z+3, r18	; 0x03
  48:	10 e0       	ldi	r17, 0x00	; 0
	outputBuffer = _outputBuffer;
  4a:	0f 84       	ldd	r0, Y+15	; 0x0f
  4c:	d8 89       	ldd	r29, Y+16	; 0x10
	crcStream = _crcStream;
  4e:	c0 2d       	mov	r28, r0
  50:	21 e0       	ldi	r18, 0x01	; 1
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  52:	30 e0       	ldi	r19, 0x00	; 0
  54:	9b 81       	ldd	r25, Y+3	; 0x03
  56:	8c 81       	ldd	r24, Y+4	; 0x04
  58:	98 17       	cp	r25, r24
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  5a:	01 f0       	breq	.+0      	; 0x5c <_ZN22StreamHFA11xRS232WiFi24readEv+0x5c>

	inputBuffer->setPositionAndLimit( 0 , 0 );
	outputBuffer->setPositionAndLimit( 0 , 0 );
  5c:	20 e0       	ldi	r18, 0x00	; 0
  5e:	30 e0       	ldi	r19, 0x00	; 0
  60:	8a 81       	ldd	r24, Y+2	; 0x02
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  62:	90 e0       	ldi	r25, 0x00	; 0
  64:	28 17       	cp	r18, r24
  66:	39 07       	cpc	r19, r25
  68:	01 f4       	brne	.+0      	; 0x6a <_ZN22StreamHFA11xRS232WiFi24readEv+0x6a>
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  6a:	ce 01       	movw	r24, r28

	arr[0] = 0; // command
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi24readEv>
	arr[1] = 0; // sn
	arr[2] = 0; // reserved
  72:	1b 82       	std	Y+3, r1	; 0x03
	arr[3] = 0; // reserved
  74:	00 c0       	rjmp	.+0      	; 0x76 <_ZN22StreamHFA11xRS232WiFi24readEv+0x76>
	arr[4] = 0; // RECV: length to read, SEND: send data length
  76:	0f ef       	ldi	r16, 0xFF	; 255
	arr[5] = 0; // RECV: length to read, SEND: send data length
  78:	1f ef       	ldi	r17, 0xFF	; 255
}
  7a:	c8 01       	movw	r24, r16
  7c:	df 91       	pop	r29
  7e:	cf 91       	pop	r28
  80:	1f 91       	pop	r17
  82:	0f 91       	pop	r16
  84:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi2C2EP9AnyBufferIhhES2_P24StreamHFA11xRS232WiFiCRC:

00000000 <_ZN22StreamHFA11xRS232WiFi2C1EP9AnyBufferIhhES2_P24StreamHFA11xRS232WiFiCRC>:

#include "StreamHFA11xRS232WiFi2.h"

// =================================================

StreamHFA11xRS232WiFi2::StreamHFA11xRS232WiFi2( AnyBuffer< byte , byte >* _inputBuffer , AnyBuffer< byte , byte >* _outputBuffer , StreamHFA11xRS232WiFiCRC* _crcStream ) : dp( PSTR( "StreamHFA11xRS232WiFi2" ) , DEBUG_LEVEL_ALL )
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	8c 01       	movw	r16, r24
  12:	eb 01       	movw	r28, r22
  14:	6a 01       	movw	r12, r20
  16:	79 01       	movw	r14, r18
  18:	fc 01       	movw	r30, r24
  1a:	13 82       	std	Z+3, r1	; 0x03
  1c:	12 82       	std	Z+2, r1	; 0x02
  1e:	88 ee       	ldi	r24, 0xE8	; 232
  20:	93 e0       	ldi	r25, 0x03	; 3
  22:	a0 e0       	ldi	r26, 0x00	; 0
  24:	b0 e0       	ldi	r27, 0x00	; 0
  26:	84 83       	std	Z+4, r24	; 0x04
  28:	95 83       	std	Z+5, r25	; 0x05
  2a:	a6 83       	std	Z+6, r26	; 0x06
  2c:	b7 83       	std	Z+7, r27	; 0x07
  2e:	80 e0       	ldi	r24, 0x00	; 0
  30:	90 e0       	ldi	r25, 0x00	; 0
  32:	91 83       	std	Z+1, r25	; 0x01
  34:	80 83       	st	Z, r24
  36:	c8 01       	movw	r24, r16
  38:	0c 96       	adiw	r24, 0x0c	; 12
  3a:	60 e0       	ldi	r22, 0x00	; 0
  3c:	70 e0       	ldi	r23, 0x00	; 0
  3e:	4a e0       	ldi	r20, 0x0A	; 10
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi2C1EP9AnyBufferIhhES2_P24StreamHFA11xRS232WiFiCRC>
{
	inputBuffer = _inputBuffer;
  44:	f8 01       	movw	r30, r16
  46:	d0 8b       	std	Z+16, r29	; 0x10
  48:	c7 87       	std	Z+15, r28	; 0x0f
	outputBuffer = _outputBuffer;
  4a:	d2 8a       	std	Z+18, r13	; 0x12
  4c:	c1 8a       	std	Z+17, r12	; 0x11
	crcStream = _crcStream;
  4e:	f4 8a       	std	Z+20, r15	; 0x14
  50:	e3 8a       	std	Z+19, r14	; 0x13
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  52:	ce 01       	movw	r24, r28
  54:	60 e0       	ldi	r22, 0x00	; 0
  56:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi2C1EP9AnyBufferIhhES2_P24StreamHFA11xRS232WiFiCRC>
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  5a:	1b 82       	std	Y+3, r1	; 0x03

	inputBuffer->setPositionAndLimit( 0 , 0 );
	outputBuffer->setPositionAndLimit( 0 , 0 );
  5c:	f8 01       	movw	r30, r16
  5e:	c1 89       	ldd	r28, Z+17	; 0x11
  60:	d2 89       	ldd	r29, Z+18	; 0x12
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPositionAndLimit( SizeType _position , SizeType _limit )
{
	setLimit( _limit );
  62:	ce 01       	movw	r24, r28
  64:	60 e0       	ldi	r22, 0x00	; 0
  66:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi2C1EP9AnyBufferIhhES2_P24StreamHFA11xRS232WiFiCRC>
// =================================================

template< typename DataType , typename SizeType >
void AnyBuffer<DataType,SizeType>::setPosition( SizeType _position )
{
	position = _position > limit ? limit : ( _position < 0 ? 0 : _position );
  6a:	1b 82       	std	Y+3, r1	; 0x03

	arr[0] = 0; // command
  6c:	f8 01       	movw	r30, r16
  6e:	15 8a       	std	Z+21, r1	; 0x15
	arr[1] = 0; // sn
  70:	16 8a       	std	Z+22, r1	; 0x16
	arr[2] = 0; // reserved
  72:	17 8a       	std	Z+23, r1	; 0x17
	arr[3] = 0; // reserved
  74:	10 8e       	std	Z+24, r1	; 0x18
	arr[4] = 0; // RECV: length to read, SEND: send data length
  76:	11 8e       	std	Z+25, r1	; 0x19
	arr[5] = 0; // RECV: length to read, SEND: send data length
  78:	12 8e       	std	Z+26, r1	; 0x1a
}
  7a:	df 91       	pop	r29
  7c:	cf 91       	pop	r28
  7e:	1f 91       	pop	r17
  80:	0f 91       	pop	r16
  82:	ff 90       	pop	r15
  84:	ef 90       	pop	r14
  86:	df 90       	pop	r13
  88:	cf 90       	pop	r12
  8a:	08 95       	ret

StreamHFA11xRS232WiFi3.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         000020e8  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000057e0  00000000  00000000  0000211c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN22StreamHFA11xRS232WiFi3C2EP13AnyRingBufferIhES2_P24StreamHFA11xRS232WiFiCRC 0000006a  00000000  00000000  000078fc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb 000001f6  00000000  00000000  00007966  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN22StreamHFA11xRS232WiFi318resetInternalStateEv 0000003e  00000000  00000000  00007b5c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN13AnyRingBufferIhE4peekEv 000000d6  00000000  00000000  00007b9a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN13AnyRingBufferIhE5writeEP6Streamj 000000ea  00000000  00000000  00007c70  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv 00000836  00000000  00000000  00007d5a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv 000000be  00000000  00000000  00008590  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN22StreamHFA11xRS232WiFi39availableEv 00000030  00000000  00000000  0000864e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN22StreamHFA11xRS232WiFi34peekEv 00000044  00000000  00000000  0000867e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text._ZN13AnyRingBufferIhE19validateRecordsListEv 0000012e  00000000  00000000  000086c2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text._ZN13AnyRingBufferIhE17discardFirstBytesEj 0000005a  00000000  00000000  000087f0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text._ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj 000000f6  00000000  00000000  0000884a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text._ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv 000003f2  00000000  00000000  00008940  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text._ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv 000000fa  00000000  00000000  00008d32  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .text._ZN22StreamHFA11xRS232WiFi35writeEh 00000080  00000000  00000000  00008e2c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .text._ZN22StreamHFA11xRS232WiFi35flushEv 0000002e  00000000  00000000  00008eac  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 21 .text._ZN13AnyRingBufferIhE4readEv 000000d6  00000000  00000000  00008eda  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 22 .text._ZN22StreamHFA11xRS232WiFi34readEv 00000044  00000000  00000000  00008fb0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 23 .rodata._ZTV22StreamHFA11xRS232WiFi3 00000010  00000000  00000000  00008ff4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 24 .rodata._ZTV6Stream 00000010  00000000  00000000  00009004  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 25 .progmem.data 000006b8  00000000  00000000  00009014  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi3C2EP13AnyRingBufferIhES2_P24StreamHFA11xRS232WiFiCRC:

00000000 <_ZN22StreamHFA11xRS232WiFi3C1EP13AnyRingBufferIhES2_P24StreamHFA11xRS232WiFiCRC>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
// =================================================

template< typename DataType >
unsigned int AnyRingBuffer<DataType>::getUsedSpace()
{
	return writePosition - readPosition;
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	ec 01       	movw	r28, r24
  12:	6b 01       	movw	r12, r22
  14:	7a 01       	movw	r14, r20
  16:	89 01       	movw	r16, r18
  18:	1b 82       	std	Y+3, r1	; 0x03
  1a:	1a 82       	std	Y+2, r1	; 0x02
  1c:	88 ee       	ldi	r24, 0xE8	; 232

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	93 e0       	ldi	r25, 0x03	; 3
  20:	a0 e0       	ldi	r26, 0x00	; 0
  22:	b0 e0       	ldi	r27, 0x00	; 0
  24:	8c 83       	std	Y+4, r24	; 0x04
  26:	9d 83       	std	Y+5, r25	; 0x05
  28:	ae 83       	std	Y+6, r26	; 0x06
  2a:	bf 83       	std	Y+7, r27	; 0x07
  2c:	80 e0       	ldi	r24, 0x00	; 0
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	99 83       	std	Y+1, r25	; 0x01
	{
		return inputBuffer->read();
  32:	88 83       	st	Y, r24
  34:	ce 01       	movw	r24, r28
  36:	0c 96       	adiw	r24, 0x0c	; 12
  38:	60 e0       	ldi	r22, 0x00	; 0
	}
	else
	{
		return -1;
  3a:	70 e0       	ldi	r23, 0x00	; 0
  3c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi3C1EP13AnyRingBufferIhES2_P24StreamHFA11xRS232WiFiCRC>
	}
}
  40:	d8 8a       	std	Y+16, r13	; 0x10
  42:	cf 86       	std	Y+15, r12	; 0x0f
  44:	fa 8a       	std	Y+18, r15	; 0x12
  46:	e9 8a       	std	Y+17, r14	; 0x11
  48:	1c 8b       	std	Y+20, r17	; 0x14
  4a:	0b 8b       	std	Y+19, r16	; 0x13
  4c:	1d 8a       	std	Y+21, r1	; 0x15
  4e:	1e 8a       	std	Y+22, r1	; 0x16
  50:	1f 8a       	std	Y+23, r1	; 0x17
  52:	18 8e       	std	Y+24, r1	; 0x18
  54:	19 8e       	std	Y+25, r1	; 0x19
  56:	1a 8e       	std	Y+26, r1	; 0x1a
  58:	df 91       	pop	r29
  5a:	cf 91       	pop	r28
  5c:	1f 91       	pop	r17
  5e:	0f 91       	pop	r16
  60:	ff 90       	pop	r15
  62:	ef 90       	pop	r14
  64:	df 90       	pop	r13
  66:	cf 90       	pop	r12
  68:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb:

00000000 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	bf 92       	push	r11
  12:	cf 92       	push	r12
  14:	df 92       	push	r13
  16:	ef 92       	push	r14
  18:	ff 92       	push	r15
  1a:	0f 93       	push	r16
  1c:	1f 93       	push	r17

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	cf 93       	push	r28
  20:	df 93       	push	r29
  22:	ec 01       	movw	r28, r24
  24:	f6 2e       	mov	r15, r22
  26:	00 e0       	ldi	r16, 0x00	; 0
  28:	10 e0       	ldi	r17, 0x00	; 0
  2a:	00 c0       	rjmp	.+0      	; 0x2c <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x2c>
  2c:	0f 5f       	subi	r16, 0xFF	; 255
  2e:	1f 4f       	sbci	r17, 0xFF	; 255
  30:	eb 89       	ldd	r30, Y+19	; 0x13
	{
		return inputBuffer->read();
  32:	fc 89       	ldd	r31, Y+20	; 0x14
  34:	84 85       	ldd	r24, Z+12	; 0x0c
  36:	95 85       	ldd	r25, Z+13	; 0x0d
  38:	dc 01       	movw	r26, r24
	}
	else
	{
		return -1;
  3a:	ed 91       	ld	r30, X+
  3c:	fc 91       	ld	r31, X
	}
}
  3e:	06 80       	ldd	r0, Z+6	; 0x06
  40:	f7 81       	ldd	r31, Z+7	; 0x07
  42:	e0 2d       	mov	r30, r0
  44:	19 95       	eicall
  46:	bf ef       	ldi	r27, 0xFF	; 255
  48:	8f 3f       	cpi	r24, 0xFF	; 255
  4a:	9b 07       	cpc	r25, r27
  4c:	01 f4       	brne	.+0      	; 0x4e <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x4e>
  4e:	8e 85       	ldd	r24, Y+14	; 0x0e
  50:	8b 30       	cpi	r24, 0x0B	; 11
  52:	00 f4       	brcc	.+0      	; 0x54 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x54>
  54:	ce 01       	movw	r24, r28
  56:	0c 96       	adiw	r24, 0x0c	; 12
  58:	60 e0       	ldi	r22, 0x00	; 0
  5a:	70 e0       	ldi	r23, 0x00	; 0
  5c:	40 e0       	ldi	r20, 0x00	; 0
  5e:	50 e0       	ldi	r21, 0x00	; 0
  60:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
  64:	00 d0       	rcall	.+0      	; 0x66 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x66>
  66:	0f 92       	push	r0
  68:	80 e0       	ldi	r24, 0x00	; 0
  6a:	90 e0       	ldi	r25, 0x00	; 0
  6c:	ed b7       	in	r30, 0x3d	; 61
  6e:	fe b7       	in	r31, 0x3e	; 62
  70:	92 83       	std	Z+2, r25	; 0x02
  72:	81 83       	std	Z+1, r24	; 0x01
  74:	14 83       	std	Z+4, r17	; 0x04
  76:	03 83       	std	Z+3, r16	; 0x03
  78:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
  7c:	0f 90       	pop	r0
  7e:	0f 90       	pop	r0
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	ad b7       	in	r26, 0x3d	; 61
  86:	be b7       	in	r27, 0x3e	; 62
  88:	12 96       	adiw	r26, 0x02	; 2
  8a:	9c 93       	st	X, r25
  8c:	8e 93       	st	-X, r24
  8e:	11 97       	sbiw	r26, 0x01	; 1
  90:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
  94:	0f 90       	pop	r0
  96:	0f 90       	pop	r0
  98:	ff 20       	and	r15, r15
  9a:	01 f4       	brne	.+0      	; 0x9c <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x9c>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x9e>
  9e:	be 88       	ldd	r11, Y+22	; 0x16
  a0:	ee 24       	eor	r14, r14
  a2:	ff 24       	eor	r15, r15
  a4:	82 e0       	ldi	r24, 0x02	; 2
  a6:	d8 2e       	mov	r13, r24
  a8:	93 e0       	ldi	r25, 0x03	; 3
  aa:	c9 2e       	mov	r12, r25
  ac:	25 e1       	ldi	r18, 0x15	; 21
  ae:	82 2e       	mov	r8, r18
  b0:	91 2c       	mov	r9, r1
  b2:	8c 0e       	add	r8, r28
  b4:	9d 1e       	adc	r9, r29
  b6:	3c e0       	ldi	r19, 0x0C	; 12
  b8:	63 2e       	mov	r6, r19
  ba:	71 2c       	mov	r7, r1
  bc:	6c 0e       	add	r6, r28
  be:	7d 1e       	adc	r7, r29
  c0:	40 e0       	ldi	r20, 0x00	; 0
  c2:	44 2e       	mov	r4, r20
  c4:	40 e0       	ldi	r20, 0x00	; 0
  c6:	54 2e       	mov	r5, r20
  c8:	50 e0       	ldi	r21, 0x00	; 0
  ca:	25 2e       	mov	r2, r21
  cc:	50 e0       	ldi	r21, 0x00	; 0
  ce:	35 2e       	mov	r3, r21
  d0:	dd 8a       	std	Y+21, r13	; 0x15
  d2:	ee 8a       	std	Y+22, r14	; 0x16
  d4:	19 8e       	std	Y+25, r1	; 0x19
  d6:	ca 8e       	std	Y+26, r12	; 0x1a
  d8:	8b 89       	ldd	r24, Y+19	; 0x13
  da:	9c 89       	ldd	r25, Y+20	; 0x14
  dc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
  e0:	8b 89       	ldd	r24, Y+19	; 0x13
  e2:	9c 89       	ldd	r25, Y+20	; 0x14
  e4:	dc 01       	movw	r26, r24
  e6:	ed 91       	ld	r30, X+
  e8:	fc 91       	ld	r31, X
  ea:	02 80       	ldd	r0, Z+2	; 0x02
  ec:	f3 81       	ldd	r31, Z+3	; 0x03
  ee:	e0 2d       	mov	r30, r0
  f0:	b4 01       	movw	r22, r8
  f2:	46 e0       	ldi	r20, 0x06	; 6
  f4:	50 e0       	ldi	r21, 0x00	; 0
  f6:	19 95       	eicall
  f8:	8b 89       	ldd	r24, Y+19	; 0x13
  fa:	9c 89       	ldd	r25, Y+20	; 0x14
  fc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
 100:	8b 89       	ldd	r24, Y+19	; 0x13
 102:	9c 89       	ldd	r25, Y+20	; 0x14
 104:	dc 01       	movw	r26, r24
 106:	ed 91       	ld	r30, X+
 108:	fc 91       	ld	r31, X
 10a:	02 84       	ldd	r0, Z+10	; 0x0a
 10c:	f3 85       	ldd	r31, Z+11	; 0x0b
 10e:	e0 2d       	mov	r30, r0
 110:	19 95       	eicall
 112:	15 e0       	ldi	r17, 0x05	; 5
 114:	eb 89       	ldd	r30, Y+19	; 0x13
 116:	fc 89       	ldd	r31, Y+20	; 0x14
 118:	84 85       	ldd	r24, Z+12	; 0x0c
 11a:	95 85       	ldd	r25, Z+13	; 0x0d
 11c:	dc 01       	movw	r26, r24
 11e:	ed 91       	ld	r30, X+
 120:	fc 91       	ld	r31, X
 122:	04 80       	ldd	r0, Z+4	; 0x04
 124:	f5 81       	ldd	r31, Z+5	; 0x05
 126:	e0 2d       	mov	r30, r0
 128:	19 95       	eicall
 12a:	88 30       	cpi	r24, 0x08	; 8
 12c:	91 05       	cpc	r25, r1
 12e:	04 f4       	brge	.+0      	; 0x130 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x130>
 130:	00 c0       	rjmp	.+0      	; 0x132 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x132>
 132:	00 e0       	ldi	r16, 0x00	; 0
 134:	10 e0       	ldi	r17, 0x00	; 0
 136:	00 c0       	rjmp	.+0      	; 0x138 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x138>
 138:	0f 5f       	subi	r16, 0xFF	; 255
 13a:	1f 4f       	sbci	r17, 0xFF	; 255
 13c:	eb 89       	ldd	r30, Y+19	; 0x13
 13e:	fc 89       	ldd	r31, Y+20	; 0x14
 140:	84 85       	ldd	r24, Z+12	; 0x0c
 142:	95 85       	ldd	r25, Z+13	; 0x0d
 144:	dc 01       	movw	r26, r24
 146:	ed 91       	ld	r30, X+
 148:	fc 91       	ld	r31, X
 14a:	06 80       	ldd	r0, Z+6	; 0x06
 14c:	f7 81       	ldd	r31, Z+7	; 0x07
 14e:	e0 2d       	mov	r30, r0
 150:	19 95       	eicall
 152:	bf ef       	ldi	r27, 0xFF	; 255
 154:	8f 3f       	cpi	r24, 0xFF	; 255
 156:	9b 07       	cpc	r25, r27
 158:	01 f4       	brne	.+0      	; 0x15a <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x15a>
 15a:	8e 85       	ldd	r24, Y+14	; 0x0e
 15c:	85 31       	cpi	r24, 0x15	; 21
 15e:	00 f4       	brcc	.+0      	; 0x160 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x160>
 160:	c3 01       	movw	r24, r6
 162:	60 e0       	ldi	r22, 0x00	; 0
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
 16e:	00 d0       	rcall	.+0      	; 0x170 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x170>
 170:	00 d0       	rcall	.+0      	; 0x172 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x172>
 172:	ed b7       	in	r30, 0x3d	; 61
 174:	fe b7       	in	r31, 0x3e	; 62
 176:	31 96       	adiw	r30, 0x01	; 1
 178:	ad b7       	in	r26, 0x3d	; 61
 17a:	be b7       	in	r27, 0x3e	; 62
 17c:	12 96       	adiw	r26, 0x02	; 2
 17e:	5c 92       	st	X, r5
 180:	4e 92       	st	-X, r4
 182:	11 97       	sbiw	r26, 0x01	; 1
 184:	f3 82       	std	Z+3, r15	; 0x03
 186:	e2 82       	std	Z+2, r14	; 0x02
 188:	15 83       	std	Z+5, r17	; 0x05
 18a:	04 83       	std	Z+4, r16	; 0x04
 18c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	0f 90       	pop	r0
 196:	0f 90       	pop	r0
 198:	ed b7       	in	r30, 0x3d	; 61
 19a:	fe b7       	in	r31, 0x3e	; 62
 19c:	32 82       	std	Z+2, r3	; 0x02
 19e:	21 82       	std	Z+1, r2	; 0x01
 1a0:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
 1a4:	0f 90       	pop	r0
 1a6:	0f 90       	pop	r0
 1a8:	08 94       	sec
 1aa:	e1 1c       	adc	r14, r1
 1ac:	f1 1c       	adc	r15, r1
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	ef 16       	cp	r14, r31
 1b2:	f1 e0       	ldi	r31, 0x01	; 1
 1b4:	ff 06       	cpc	r15, r31
 1b6:	01 f0       	breq	.+0      	; 0x1b8 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x1b8>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x1ba>
 1ba:	be 8a       	std	Y+22, r11	; 0x16
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x1be>
 1be:	65 e0       	ldi	r22, 0x05	; 5
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb>
 1ca:	11 50       	subi	r17, 0x01	; 1
 1cc:	01 f4       	brne	.+0      	; 0x1ce <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x1ce>
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x1d0>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <_ZN22StreamHFA11xRS232WiFi339discardAnyWaitingDataInUnderlyingStreamEb+0x1d2>
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	0f 91       	pop	r16
 1da:	ff 90       	pop	r15
 1dc:	ef 90       	pop	r14
 1de:	df 90       	pop	r13
 1e0:	cf 90       	pop	r12
 1e2:	bf 90       	pop	r11
 1e4:	9f 90       	pop	r9
 1e6:	8f 90       	pop	r8
 1e8:	7f 90       	pop	r7
 1ea:	6f 90       	pop	r6
 1ec:	5f 90       	pop	r5
 1ee:	4f 90       	pop	r4
 1f0:	3f 90       	pop	r3
 1f2:	2f 90       	pop	r2
 1f4:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi318resetInternalStateEv:

00000000 <_ZN22StreamHFA11xRS232WiFi318resetInternalStateEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	61 e0       	ldi	r22, 0x01	; 1
   8:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi318resetInternalStateEv>
   c:	8b 89       	ldd	r24, Y+19	; 0x13
   e:	9c 89       	ldd	r25, Y+20	; 0x14
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi318resetInternalStateEv>
  14:	ef 85       	ldd	r30, Y+15	; 0x0f
  16:	f8 89       	ldd	r31, Y+16	; 0x10
  18:	11 86       	std	Z+9, r1	; 0x09
  1a:	13 86       	std	Z+11, r1	; 0x0b
  1c:	12 86       	std	Z+10, r1	; 0x0a

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	83 81       	ldd	r24, Z+3	; 0x03
  20:	94 81       	ldd	r25, Z+4	; 0x04
  22:	96 83       	std	Z+6, r25	; 0x06
  24:	85 83       	std	Z+5, r24	; 0x05
  26:	e9 89       	ldd	r30, Y+17	; 0x11
  28:	fa 89       	ldd	r31, Y+18	; 0x12
  2a:	11 86       	std	Z+9, r1	; 0x09
  2c:	13 86       	std	Z+11, r1	; 0x0b
  2e:	12 86       	std	Z+10, r1	; 0x0a
  30:	83 81       	ldd	r24, Z+3	; 0x03
	{
		return inputBuffer->read();
  32:	94 81       	ldd	r25, Z+4	; 0x04
  34:	96 83       	std	Z+6, r25	; 0x06
  36:	85 83       	std	Z+5, r24	; 0x05
  38:	df 91       	pop	r29
	}
	else
	{
		return -1;
  3a:	cf 91       	pop	r28
  3c:	08 95       	ret

Disassembly of section .text._ZN13AnyRingBufferIhE4peekEv:

00000000 <_ZN13AnyRingBufferIhE4peekEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	cf 93       	push	r28
   2:	dc 01       	movw	r26, r24
   4:	19 96       	adiw	r26, 0x09	; 9
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	2c 91       	ld	r18, X
   8:	19 97       	sbiw	r26, 0x09	; 9
   a:	30 e0       	ldi	r19, 0x00	; 0
   c:	1a 96       	adiw	r26, 0x0a	; 10
   e:	4d 91       	ld	r20, X+
  10:	5c 91       	ld	r21, X
  12:	1b 97       	sbiw	r26, 0x0b	; 11
  14:	24 17       	cp	r18, r20
  16:	35 07       	cpc	r19, r21
  18:	00 f4       	brcc	.+0      	; 0x1a <_ZN13AnyRingBufferIhE4peekEv+0x1a>
  1a:	13 96       	adiw	r26, 0x03	; 3
  1c:	ed 91       	ld	r30, X+

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	fc 91       	ld	r31, X
  20:	14 97       	sbiw	r26, 0x04	; 4
  22:	01 90       	ld	r0, Z+
  24:	f0 81       	ld	r31, Z
  26:	e0 2d       	mov	r30, r0
  28:	e2 0f       	add	r30, r18
  2a:	f3 1f       	adc	r31, r19
  2c:	c0 81       	ld	r28, Z
  2e:	12 96       	adiw	r26, 0x02	; 2
  30:	2c 91       	ld	r18, X
	{
		return inputBuffer->read();
  32:	12 97       	sbiw	r26, 0x02	; 2
  34:	2b 30       	cpi	r18, 0x0B	; 11
  36:	00 f0       	brcs	.+0      	; 0x38 <_ZN13AnyRingBufferIhE4peekEv+0x38>
  38:	00 c0       	rjmp	.+0      	; 0x3a <_ZN13AnyRingBufferIhE4peekEv+0x3a>
	}
	else
	{
		return -1;
  3a:	60 e0       	ldi	r22, 0x00	; 0
  3c:	70 e0       	ldi	r23, 0x00	; 0
	}
}
  3e:	40 e0       	ldi	r20, 0x00	; 0
  40:	50 e0       	ldi	r21, 0x00	; 0
  42:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4peekEv>
  46:	00 d0       	rcall	.+0      	; 0x48 <_ZN13AnyRingBufferIhE4peekEv+0x48>
  48:	00 d0       	rcall	.+0      	; 0x4a <_ZN13AnyRingBufferIhE4peekEv+0x4a>
  4a:	ed b7       	in	r30, 0x3d	; 61
  4c:	fe b7       	in	r31, 0x3e	; 62
  4e:	31 96       	adiw	r30, 0x01	; 1
  50:	80 e0       	ldi	r24, 0x00	; 0
  52:	90 e0       	ldi	r25, 0x00	; 0
  54:	ad b7       	in	r26, 0x3d	; 61
  56:	be b7       	in	r27, 0x3e	; 62
  58:	12 96       	adiw	r26, 0x02	; 2
  5a:	9c 93       	st	X, r25
  5c:	8e 93       	st	-X, r24
  5e:	11 97       	sbiw	r26, 0x01	; 1
  60:	c2 83       	std	Z+2, r28	; 0x02
  62:	13 82       	std	Z+3, r1	; 0x03
  64:	c4 83       	std	Z+4, r28	; 0x04
  66:	15 82       	std	Z+5, r1	; 0x05
  68:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4peekEv>
  6c:	0f 90       	pop	r0
  6e:	0f 90       	pop	r0
  70:	0f 90       	pop	r0
  72:	0f 90       	pop	r0
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	ed b7       	in	r30, 0x3d	; 61
  7a:	fe b7       	in	r31, 0x3e	; 62
  7c:	92 83       	std	Z+2, r25	; 0x02
  7e:	81 83       	std	Z+1, r24	; 0x01
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4peekEv>
  84:	0f 90       	pop	r0
  86:	0f 90       	pop	r0
  88:	00 c0       	rjmp	.+0      	; 0x8a <_ZN13AnyRingBufferIhE4peekEv+0x8a>
  8a:	dc 01       	movw	r26, r24
  8c:	12 96       	adiw	r26, 0x02	; 2
  8e:	2c 91       	ld	r18, X
  90:	12 97       	sbiw	r26, 0x02	; 2
  92:	2f 31       	cpi	r18, 0x1F	; 31
  94:	00 f4       	brcc	.+0      	; 0x96 <_ZN13AnyRingBufferIhE4peekEv+0x96>
  96:	60 e0       	ldi	r22, 0x00	; 0
  98:	70 e0       	ldi	r23, 0x00	; 0
  9a:	40 e0       	ldi	r20, 0x00	; 0
  9c:	50 e0       	ldi	r21, 0x00	; 0
  9e:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4peekEv>
  a2:	0f 92       	push	r0
  a4:	0f 92       	push	r0
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	ed b7       	in	r30, 0x3d	; 61
  ac:	fe b7       	in	r31, 0x3e	; 62
  ae:	92 83       	std	Z+2, r25	; 0x02
  b0:	81 83       	std	Z+1, r24	; 0x01
  b2:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4peekEv>
  b6:	80 e0       	ldi	r24, 0x00	; 0
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	ad b7       	in	r26, 0x3d	; 61
  bc:	be b7       	in	r27, 0x3e	; 62
  be:	12 96       	adiw	r26, 0x02	; 2
  c0:	9c 93       	st	X, r25
  c2:	8e 93       	st	-X, r24
  c4:	11 97       	sbiw	r26, 0x01	; 1
  c6:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4peekEv>
  ca:	0f 90       	pop	r0
  cc:	0f 90       	pop	r0
  ce:	c0 e0       	ldi	r28, 0x00	; 0
  d0:	8c 2f       	mov	r24, r28
  d2:	cf 91       	pop	r28
  d4:	08 95       	ret

Disassembly of section .text._ZN13AnyRingBufferIhE5writeEP6Streamj:

00000000 <_ZN13AnyRingBufferIhE5writeEP6Streamj>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	8c 01       	movw	r16, r24
  14:	5b 01       	movw	r10, r22
  16:	dc 01       	movw	r26, r24
  18:	1a 96       	adiw	r26, 0x0a	; 10
  1a:	ed 91       	ld	r30, X+
  1c:	fc 91       	ld	r31, X

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	1b 97       	sbiw	r26, 0x0b	; 11
  20:	18 96       	adiw	r26, 0x08	; 8
  22:	2c 91       	ld	r18, X
  24:	18 97       	sbiw	r26, 0x08	; 8
  26:	30 e0       	ldi	r19, 0x00	; 0
  28:	19 96       	adiw	r26, 0x09	; 9
  2a:	8c 91       	ld	r24, X
  2c:	19 97       	sbiw	r26, 0x09	; 9
  2e:	bf 01       	movw	r22, r30
  30:	68 1b       	sub	r22, r24
	{
		return inputBuffer->read();
  32:	71 09       	sbc	r23, r1
  34:	26 1b       	sub	r18, r22
  36:	37 0b       	sbc	r19, r23
  38:	7a 01       	movw	r14, r20
	}
	else
	{
		return -1;
  3a:	24 17       	cp	r18, r20
  3c:	35 07       	cpc	r19, r21
	}
}
  3e:	00 f4       	brcc	.+0      	; 0x40 <_ZN13AnyRingBufferIhE5writeEP6Streamj+0x40>
  40:	79 01       	movw	r14, r18
  42:	d8 01       	movw	r26, r16
  44:	17 96       	adiw	r26, 0x07	; 7
  46:	6c 91       	ld	r22, X
  48:	17 97       	sbiw	r26, 0x07	; 7
  4a:	cf 01       	movw	r24, r30
  4c:	70 e0       	ldi	r23, 0x00	; 0
  4e:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE5writeEP6Streamj>
  52:	c8 2f       	mov	r28, r24
  54:	cc 24       	eor	r12, r12
  56:	dd 24       	eor	r13, r13
  58:	00 c0       	rjmp	.+0      	; 0x5a <_ZN13AnyRingBufferIhE5writeEP6Streamj+0x5a>
  5a:	28 2f       	mov	r18, r24
  5c:	30 e0       	ldi	r19, 0x00	; 0
  5e:	c2 0e       	add	r12, r18
  60:	d3 1e       	adc	r13, r19
  62:	e2 1a       	sub	r14, r18
  64:	f3 0a       	sbc	r15, r19
  66:	c8 0f       	add	r28, r24
  68:	f8 01       	movw	r30, r16
  6a:	87 81       	ldd	r24, Z+7	; 0x07
  6c:	c8 17       	cp	r28, r24
  6e:	00 f0       	brcs	.+0      	; 0x70 <_ZN13AnyRingBufferIhE5writeEP6Streamj+0x70>
  70:	05 80       	ldd	r0, Z+5	; 0x05
  72:	f6 81       	ldd	r31, Z+6	; 0x06
  74:	e0 2d       	mov	r30, r0
  76:	82 81       	ldd	r24, Z+2	; 0x02
  78:	93 81       	ldd	r25, Z+3	; 0x03
  7a:	d8 01       	movw	r26, r16
  7c:	16 96       	adiw	r26, 0x06	; 6
  7e:	9c 93       	st	X, r25
  80:	8e 93       	st	-X, r24
  82:	15 97       	sbiw	r26, 0x05	; 5
  84:	c0 e0       	ldi	r28, 0x00	; 0
  86:	e1 14       	cp	r14, r1
  88:	f1 04       	cpc	r15, r1
  8a:	01 f0       	breq	.+0      	; 0x8c <_ZN13AnyRingBufferIhE5writeEP6Streamj+0x8c>
  8c:	d8 01       	movw	r26, r16
  8e:	15 96       	adiw	r26, 0x05	; 5
  90:	ed 91       	ld	r30, X+
  92:	fc 91       	ld	r31, X
  94:	16 97       	sbiw	r26, 0x06	; 6
  96:	30 97       	sbiw	r30, 0x00	; 0
  98:	01 f0       	breq	.+0      	; 0x9a <_ZN13AnyRingBufferIhE5writeEP6Streamj+0x9a>
  9a:	8c 2f       	mov	r24, r28
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	60 81       	ld	r22, Z
  a0:	71 81       	ldd	r23, Z+1	; 0x01
  a2:	68 0f       	add	r22, r24
  a4:	79 1f       	adc	r23, r25
  a6:	17 96       	adiw	r26, 0x07	; 7
  a8:	4c 91       	ld	r20, X
  aa:	17 97       	sbiw	r26, 0x07	; 7
  ac:	50 e0       	ldi	r21, 0x00	; 0
  ae:	48 1b       	sub	r20, r24
  b0:	59 0b       	sbc	r21, r25
  b2:	e4 16       	cp	r14, r20
  b4:	f5 06       	cpc	r15, r21
  b6:	00 f4       	brcc	.+0      	; 0xb8 <_ZN13AnyRingBufferIhE5writeEP6Streamj+0xb8>
  b8:	a7 01       	movw	r20, r14
  ba:	c5 01       	movw	r24, r10
  bc:	50 e0       	ldi	r21, 0x00	; 0
  be:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE5writeEP6Streamj>
  c2:	88 23       	and	r24, r24
  c4:	01 f4       	brne	.+0      	; 0xc6 <_ZN13AnyRingBufferIhE5writeEP6Streamj+0xc6>
  c6:	f8 01       	movw	r30, r16
  c8:	82 85       	ldd	r24, Z+10	; 0x0a
  ca:	93 85       	ldd	r25, Z+11	; 0x0b
  cc:	8c 0d       	add	r24, r12
  ce:	9d 1d       	adc	r25, r13
  d0:	93 87       	std	Z+11, r25	; 0x0b
  d2:	82 87       	std	Z+10, r24	; 0x0a
  d4:	c6 01       	movw	r24, r12
  d6:	cf 91       	pop	r28
  d8:	1f 91       	pop	r17
  da:	0f 91       	pop	r16
  dc:	ff 90       	pop	r15
  de:	ef 90       	pop	r14
  e0:	df 90       	pop	r13
  e2:	cf 90       	pop	r12
  e4:	bf 90       	pop	r11
  e6:	af 90       	pop	r10
  e8:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv:

00000000 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	1f 93       	push	r17
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	8c 01       	movw	r16, r24
  26:	dc 01       	movw	r26, r24
  28:	1f 96       	adiw	r26, 0x0f	; 15
  2a:	ed 91       	ld	r30, X+
  2c:	fc 91       	ld	r31, X
  2e:	50 97       	sbiw	r26, 0x10	; 16
  30:	c0 85       	ldd	r28, Z+8	; 0x08
	{
		return inputBuffer->read();
  32:	d0 e0       	ldi	r29, 0x00	; 0
  34:	21 85       	ldd	r18, Z+9	; 0x09
  36:	82 85       	ldd	r24, Z+10	; 0x0a
  38:	93 85       	ldd	r25, Z+11	; 0x0b
	}
	else
	{
		return -1;
  3a:	82 1b       	sub	r24, r18
  3c:	91 09       	sbc	r25, r1
	}
}
  3e:	c8 1b       	sub	r28, r24
  40:	d9 0b       	sbc	r29, r25
  42:	cc 2e       	mov	r12, r28
  44:	cc 23       	and	r28, r28
  46:	01 f4       	brne	.+0      	; 0x48 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x48>
  48:	00 c0       	rjmp	.+0      	; 0x4a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x4a>
  4a:	1e 96       	adiw	r26, 0x0e	; 14
  4c:	8c 91       	ld	r24, X
  4e:	1e 97       	sbiw	r26, 0x0e	; 14
  50:	8b 30       	cpi	r24, 0x0B	; 11
  52:	00 f4       	brcc	.+0      	; 0x54 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x54>
  54:	c8 01       	movw	r24, r16
  56:	0c 96       	adiw	r24, 0x0c	; 12
  58:	60 e0       	ldi	r22, 0x00	; 0
  5a:	70 e0       	ldi	r23, 0x00	; 0
  5c:	40 e0       	ldi	r20, 0x00	; 0
  5e:	50 e0       	ldi	r21, 0x00	; 0
  60:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
  64:	f8 01       	movw	r30, r16
  66:	83 89       	ldd	r24, Z+19	; 0x13
  68:	94 89       	ldd	r25, Z+20	; 0x14
  6a:	dc 01       	movw	r26, r24
  6c:	ed 91       	ld	r30, X+
  6e:	fc 91       	ld	r31, X
  70:	04 80       	ldd	r0, Z+4	; 0x04
  72:	f5 81       	ldd	r31, Z+5	; 0x05
  74:	e0 2d       	mov	r30, r0
  76:	19 95       	eicall
  78:	ed b7       	in	r30, 0x3d	; 61
  7a:	fe b7       	in	r31, 0x3e	; 62
  7c:	38 97       	sbiw	r30, 0x08	; 8
  7e:	0f b6       	in	r0, 0x3f	; 63
  80:	f8 94       	cli
  82:	fe bf       	out	0x3e, r31	; 62
  84:	0f be       	out	0x3f, r0	; 63
  86:	ed bf       	out	0x3d, r30	; 61
  88:	31 96       	adiw	r30, 0x01	; 1
  8a:	20 e0       	ldi	r18, 0x00	; 0
  8c:	30 e0       	ldi	r19, 0x00	; 0
  8e:	ad b7       	in	r26, 0x3d	; 61
  90:	be b7       	in	r27, 0x3e	; 62
  92:	12 96       	adiw	r26, 0x02	; 2
  94:	3c 93       	st	X, r19
  96:	2e 93       	st	-X, r18
  98:	11 97       	sbiw	r26, 0x01	; 1
  9a:	93 83       	std	Z+3, r25	; 0x03
  9c:	82 83       	std	Z+2, r24	; 0x02
  9e:	c4 83       	std	Z+4, r28	; 0x04
  a0:	15 82       	std	Z+5, r1	; 0x05
  a2:	d8 01       	movw	r26, r16
  a4:	56 96       	adiw	r26, 0x16	; 22
  a6:	8c 91       	ld	r24, X
  a8:	86 83       	std	Z+6, r24	; 0x06
  aa:	17 82       	std	Z+7, r1	; 0x07
  ac:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
  b0:	ed b7       	in	r30, 0x3d	; 61
  b2:	fe b7       	in	r31, 0x3e	; 62
  b4:	36 96       	adiw	r30, 0x06	; 6
  b6:	0f b6       	in	r0, 0x3f	; 63
  b8:	f8 94       	cli
  ba:	fe bf       	out	0x3e, r31	; 62
  bc:	0f be       	out	0x3f, r0	; 63
  be:	ed bf       	out	0x3d, r30	; 61
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	92 83       	std	Z+2, r25	; 0x02
  c6:	81 83       	std	Z+1, r24	; 0x01
  c8:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
  cc:	0f 90       	pop	r0
  ce:	0f 90       	pop	r0
  d0:	c8 01       	movw	r24, r16
  d2:	60 e0       	ldi	r22, 0x00	; 0
  d4:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
  d8:	d8 01       	movw	r26, r16
  da:	1e 96       	adiw	r26, 0x0e	; 14
  dc:	8c 91       	ld	r24, X
  de:	1e 97       	sbiw	r26, 0x0e	; 14
  e0:	8b 30       	cpi	r24, 0x0B	; 11
  e2:	00 f4       	brcc	.+0      	; 0xe4 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0xe4>
  e4:	c8 01       	movw	r24, r16
  e6:	0c 96       	adiw	r24, 0x0c	; 12
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	40 e0       	ldi	r20, 0x00	; 0
  ee:	50 e0       	ldi	r21, 0x00	; 0
  f0:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
  f4:	f8 01       	movw	r30, r16
  f6:	83 89       	ldd	r24, Z+19	; 0x13
  f8:	94 89       	ldd	r25, Z+20	; 0x14
  fa:	dc 01       	movw	r26, r24
  fc:	ed 91       	ld	r30, X+
  fe:	fc 91       	ld	r31, X
 100:	04 80       	ldd	r0, Z+4	; 0x04
 102:	f5 81       	ldd	r31, Z+5	; 0x05
 104:	e0 2d       	mov	r30, r0
 106:	19 95       	eicall
 108:	00 d0       	rcall	.+0      	; 0x10a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x10a>
 10a:	0f 92       	push	r0
 10c:	20 e0       	ldi	r18, 0x00	; 0
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	ed b7       	in	r30, 0x3d	; 61
 112:	fe b7       	in	r31, 0x3e	; 62
 114:	32 83       	std	Z+2, r19	; 0x02
 116:	21 83       	std	Z+1, r18	; 0x01
 118:	94 83       	std	Z+4, r25	; 0x04
 11a:	83 83       	std	Z+3, r24	; 0x03
 11c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 120:	0f 90       	pop	r0
 122:	0f 90       	pop	r0
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	ad b7       	in	r26, 0x3d	; 61
 12a:	be b7       	in	r27, 0x3e	; 62
 12c:	12 96       	adiw	r26, 0x02	; 2
 12e:	9c 93       	st	X, r25
 130:	8e 93       	st	-X, r24
 132:	11 97       	sbiw	r26, 0x01	; 1
 134:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 138:	0f 90       	pop	r0
 13a:	0f 90       	pop	r0
 13c:	f8 01       	movw	r30, r16
 13e:	83 89       	ldd	r24, Z+19	; 0x13
 140:	94 89       	ldd	r25, Z+20	; 0x14
 142:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 146:	82 e0       	ldi	r24, 0x02	; 2
 148:	d8 01       	movw	r26, r16
 14a:	55 96       	adiw	r26, 0x15	; 21
 14c:	8c 93       	st	X, r24
 14e:	55 97       	sbiw	r26, 0x15	; 21
 150:	59 96       	adiw	r26, 0x19	; 25
 152:	cc 92       	st	X, r12
 154:	59 97       	sbiw	r26, 0x19	; 25
 156:	5a 96       	adiw	r26, 0x1a	; 26
 158:	1c 92       	st	X, r1
 15a:	5a 97       	sbiw	r26, 0x1a	; 26
 15c:	53 96       	adiw	r26, 0x13	; 19
 15e:	8d 91       	ld	r24, X+
 160:	9c 91       	ld	r25, X
 162:	54 97       	sbiw	r26, 0x14	; 20
 164:	dc 01       	movw	r26, r24
 166:	ed 91       	ld	r30, X+
 168:	fc 91       	ld	r31, X
 16a:	b8 01       	movw	r22, r16
 16c:	6b 5e       	subi	r22, 0xEB	; 235
 16e:	7f 4f       	sbci	r23, 0xFF	; 255
 170:	02 80       	ldd	r0, Z+2	; 0x02
 172:	f3 81       	ldd	r31, Z+3	; 0x03
 174:	e0 2d       	mov	r30, r0
 176:	46 e0       	ldi	r20, 0x06	; 6
 178:	50 e0       	ldi	r21, 0x00	; 0
 17a:	19 95       	eicall
 17c:	f8 01       	movw	r30, r16
 17e:	26 85       	ldd	r18, Z+14	; 0x0e
 180:	86 30       	cpi	r24, 0x06	; 6
 182:	91 05       	cpc	r25, r1
 184:	01 f0       	breq	.+0      	; 0x186 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x186>
 186:	2f 31       	cpi	r18, 0x1F	; 31
 188:	00 f0       	brcs	.+0      	; 0x18a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x18a>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x18c>
 18c:	c8 01       	movw	r24, r16
 18e:	0c 96       	adiw	r24, 0x0c	; 12
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	70 e0       	ldi	r23, 0x00	; 0
 194:	40 e0       	ldi	r20, 0x00	; 0
 196:	50 e0       	ldi	r21, 0x00	; 0
 198:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 19c:	0f 92       	push	r0
 19e:	0f 92       	push	r0
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	ad b7       	in	r26, 0x3d	; 61
 1a6:	be b7       	in	r27, 0x3e	; 62
 1a8:	12 96       	adiw	r26, 0x02	; 2
 1aa:	9c 93       	st	X, r25
 1ac:	8e 93       	st	-X, r24
 1ae:	11 97       	sbiw	r26, 0x01	; 1
 1b0:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x1b6>
 1b6:	2b 30       	cpi	r18, 0x0B	; 11
 1b8:	00 f4       	brcc	.+0      	; 0x1ba <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x1ba>
 1ba:	c8 01       	movw	r24, r16
 1bc:	0c 96       	adiw	r24, 0x0c	; 12
 1be:	60 e0       	ldi	r22, 0x00	; 0
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	40 e0       	ldi	r20, 0x00	; 0
 1c4:	50 e0       	ldi	r21, 0x00	; 0
 1c6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 1ca:	d8 01       	movw	r26, r16
 1cc:	53 96       	adiw	r26, 0x13	; 19
 1ce:	8d 91       	ld	r24, X+
 1d0:	9c 91       	ld	r25, X
 1d2:	54 97       	sbiw	r26, 0x14	; 20
 1d4:	dc 01       	movw	r26, r24
 1d6:	ed 91       	ld	r30, X+
 1d8:	fc 91       	ld	r31, X
 1da:	04 80       	ldd	r0, Z+4	; 0x04
 1dc:	f5 81       	ldd	r31, Z+5	; 0x05
 1de:	e0 2d       	mov	r30, r0
 1e0:	19 95       	eicall
 1e2:	00 d0       	rcall	.+0      	; 0x1e4 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x1e4>
 1e4:	0f 92       	push	r0
 1e6:	20 e0       	ldi	r18, 0x00	; 0
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	ed b7       	in	r30, 0x3d	; 61
 1ec:	fe b7       	in	r31, 0x3e	; 62
 1ee:	32 83       	std	Z+2, r19	; 0x02
 1f0:	21 83       	std	Z+1, r18	; 0x01
 1f2:	94 83       	std	Z+4, r25	; 0x04
 1f4:	83 83       	std	Z+3, r24	; 0x03
 1f6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	ad b7       	in	r26, 0x3d	; 61
 204:	be b7       	in	r27, 0x3e	; 62
 206:	12 96       	adiw	r26, 0x02	; 2
 208:	9c 93       	st	X, r25
 20a:	8e 93       	st	-X, r24
 20c:	11 97       	sbiw	r26, 0x01	; 1
 20e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 212:	0f 90       	pop	r0
 214:	0f 90       	pop	r0
 216:	f8 01       	movw	r30, r16
 218:	83 89       	ldd	r24, Z+19	; 0x13
 21a:	94 89       	ldd	r25, Z+20	; 0x14
 21c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 220:	88 23       	and	r24, r24
 222:	01 f4       	brne	.+0      	; 0x224 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x224>
 224:	d8 01       	movw	r26, r16
 226:	1e 96       	adiw	r26, 0x0e	; 14
 228:	8c 91       	ld	r24, X
 22a:	1e 97       	sbiw	r26, 0x0e	; 14
 22c:	8f 31       	cpi	r24, 0x1F	; 31
 22e:	00 f0       	brcs	.+0      	; 0x230 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x230>
 230:	00 c0       	rjmp	.+0      	; 0x232 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x232>
 232:	c8 01       	movw	r24, r16
 234:	0c 96       	adiw	r24, 0x0c	; 12
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	70 e0       	ldi	r23, 0x00	; 0
 23a:	40 e0       	ldi	r20, 0x00	; 0
 23c:	50 e0       	ldi	r21, 0x00	; 0
 23e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 242:	0f 92       	push	r0
 244:	0f 92       	push	r0
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	00 c0       	rjmp	.+0      	; 0x24c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x24c>
 24c:	f8 01       	movw	r30, r16
 24e:	83 89       	ldd	r24, Z+19	; 0x13
 250:	94 89       	ldd	r25, Z+20	; 0x14
 252:	dc 01       	movw	r26, r24
 254:	ed 91       	ld	r30, X+
 256:	fc 91       	ld	r31, X
 258:	02 84       	ldd	r0, Z+10	; 0x0a
 25a:	f3 85       	ldd	r31, Z+11	; 0x0b
 25c:	e0 2d       	mov	r30, r0
 25e:	19 95       	eicall
 260:	f8 01       	movw	r30, r16
 262:	86 85       	ldd	r24, Z+14	; 0x0e
 264:	8b 30       	cpi	r24, 0x0B	; 11
 266:	00 f4       	brcc	.+0      	; 0x268 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x268>
 268:	c8 01       	movw	r24, r16
 26a:	0c 96       	adiw	r24, 0x0c	; 12
 26c:	60 e0       	ldi	r22, 0x00	; 0
 26e:	70 e0       	ldi	r23, 0x00	; 0
 270:	40 e0       	ldi	r20, 0x00	; 0
 272:	50 e0       	ldi	r21, 0x00	; 0
 274:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 278:	d8 01       	movw	r26, r16
 27a:	53 96       	adiw	r26, 0x13	; 19
 27c:	8d 91       	ld	r24, X+
 27e:	9c 91       	ld	r25, X
 280:	54 97       	sbiw	r26, 0x14	; 20
 282:	dc 01       	movw	r26, r24
 284:	ed 91       	ld	r30, X+
 286:	fc 91       	ld	r31, X
 288:	04 80       	ldd	r0, Z+4	; 0x04
 28a:	f5 81       	ldd	r31, Z+5	; 0x05
 28c:	e0 2d       	mov	r30, r0
 28e:	19 95       	eicall
 290:	00 d0       	rcall	.+0      	; 0x292 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x292>
 292:	0f 92       	push	r0
 294:	20 e0       	ldi	r18, 0x00	; 0
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	ed b7       	in	r30, 0x3d	; 61
 29a:	fe b7       	in	r31, 0x3e	; 62
 29c:	32 83       	std	Z+2, r19	; 0x02
 29e:	21 83       	std	Z+1, r18	; 0x01
 2a0:	94 83       	std	Z+4, r25	; 0x04
 2a2:	83 83       	std	Z+3, r24	; 0x03
 2a4:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 2a8:	0f 90       	pop	r0
 2aa:	0f 90       	pop	r0
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	ad b7       	in	r26, 0x3d	; 61
 2b2:	be b7       	in	r27, 0x3e	; 62
 2b4:	12 96       	adiw	r26, 0x02	; 2
 2b6:	9c 93       	st	X, r25
 2b8:	8e 93       	st	-X, r24
 2ba:	11 97       	sbiw	r26, 0x01	; 1
 2bc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 2c0:	0f 90       	pop	r0
 2c2:	0f 90       	pop	r0
 2c4:	f8 01       	movw	r30, r16
 2c6:	83 89       	ldd	r24, Z+19	; 0x13
 2c8:	94 89       	ldd	r25, Z+20	; 0x14
 2ca:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 2ce:	d8 01       	movw	r26, r16
 2d0:	53 96       	adiw	r26, 0x13	; 19
 2d2:	8d 91       	ld	r24, X+
 2d4:	9c 91       	ld	r25, X
 2d6:	54 97       	sbiw	r26, 0x14	; 20
 2d8:	dc 01       	movw	r26, r24
 2da:	ed 91       	ld	r30, X+
 2dc:	fc 91       	ld	r31, X
 2de:	04 80       	ldd	r0, Z+4	; 0x04
 2e0:	f5 81       	ldd	r31, Z+5	; 0x05
 2e2:	e0 2d       	mov	r30, r0
 2e4:	19 95       	eicall
 2e6:	86 30       	cpi	r24, 0x06	; 6
 2e8:	91 05       	cpc	r25, r1
 2ea:	04 f0       	brlt	.+0      	; 0x2ec <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x2ec>
 2ec:	f8 01       	movw	r30, r16
 2ee:	83 89       	ldd	r24, Z+19	; 0x13
 2f0:	94 89       	ldd	r25, Z+20	; 0x14
 2f2:	dc 01       	movw	r26, r24
 2f4:	ed 91       	ld	r30, X+
 2f6:	fc 91       	ld	r31, X
 2f8:	06 80       	ldd	r0, Z+6	; 0x06
 2fa:	f7 81       	ldd	r31, Z+7	; 0x07
 2fc:	e0 2d       	mov	r30, r0
 2fe:	19 95       	eicall
 300:	c8 2f       	mov	r28, r24
 302:	82 30       	cpi	r24, 0x02	; 2
 304:	01 f0       	breq	.+0      	; 0x306 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x306>
 306:	f8 01       	movw	r30, r16
 308:	86 85       	ldd	r24, Z+14	; 0x0e
 30a:	8f 31       	cpi	r24, 0x1F	; 31
 30c:	00 f0       	brcs	.+0      	; 0x30e <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x30e>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x310>
 310:	c8 01       	movw	r24, r16
 312:	0c 96       	adiw	r24, 0x0c	; 12
 314:	60 e0       	ldi	r22, 0x00	; 0
 316:	70 e0       	ldi	r23, 0x00	; 0
 318:	40 e0       	ldi	r20, 0x00	; 0
 31a:	50 e0       	ldi	r21, 0x00	; 0
 31c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 320:	00 d0       	rcall	.+0      	; 0x322 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x322>
 322:	0f 92       	push	r0
 324:	ed b7       	in	r30, 0x3d	; 61
 326:	fe b7       	in	r31, 0x3e	; 62
 328:	31 96       	adiw	r30, 0x01	; 1
 32a:	80 e0       	ldi	r24, 0x00	; 0
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	ad b7       	in	r26, 0x3d	; 61
 330:	be b7       	in	r27, 0x3e	; 62
 332:	12 96       	adiw	r26, 0x02	; 2
 334:	9c 93       	st	X, r25
 336:	8e 93       	st	-X, r24
 338:	11 97       	sbiw	r26, 0x01	; 1
 33a:	c2 83       	std	Z+2, r28	; 0x02
 33c:	13 82       	std	Z+3, r1	; 0x03
 33e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 342:	0f 90       	pop	r0
 344:	0f 90       	pop	r0
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	ed b7       	in	r30, 0x3d	; 61
 34c:	fe b7       	in	r31, 0x3e	; 62
 34e:	92 83       	std	Z+2, r25	; 0x02
 350:	81 83       	std	Z+1, r24	; 0x01
 352:	00 c0       	rjmp	.+0      	; 0x354 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x354>
 354:	d8 01       	movw	r26, r16
 356:	53 96       	adiw	r26, 0x13	; 19
 358:	8d 91       	ld	r24, X+
 35a:	9c 91       	ld	r25, X
 35c:	54 97       	sbiw	r26, 0x14	; 20
 35e:	dc 01       	movw	r26, r24
 360:	ed 91       	ld	r30, X+
 362:	fc 91       	ld	r31, X
 364:	06 80       	ldd	r0, Z+6	; 0x06
 366:	f7 81       	ldd	r31, Z+7	; 0x07
 368:	e0 2d       	mov	r30, r0
 36a:	19 95       	eicall
 36c:	c8 2f       	mov	r28, r24
 36e:	f8 01       	movw	r30, r16
 370:	86 89       	ldd	r24, Z+22	; 0x16
 372:	c8 17       	cp	r28, r24
 374:	01 f0       	breq	.+0      	; 0x376 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x376>
 376:	86 85       	ldd	r24, Z+14	; 0x0e
 378:	8f 31       	cpi	r24, 0x1F	; 31
 37a:	00 f0       	brcs	.+0      	; 0x37c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x37c>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x37e>
 37e:	c8 01       	movw	r24, r16
 380:	0c 96       	adiw	r24, 0x0c	; 12
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	40 e0       	ldi	r20, 0x00	; 0
 388:	50 e0       	ldi	r21, 0x00	; 0
 38a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 38e:	00 d0       	rcall	.+0      	; 0x390 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x390>
 390:	00 d0       	rcall	.+0      	; 0x392 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x392>
 392:	ed b7       	in	r30, 0x3d	; 61
 394:	fe b7       	in	r31, 0x3e	; 62
 396:	31 96       	adiw	r30, 0x01	; 1
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	ad b7       	in	r26, 0x3d	; 61
 39e:	be b7       	in	r27, 0x3e	; 62
 3a0:	12 96       	adiw	r26, 0x02	; 2
 3a2:	9c 93       	st	X, r25
 3a4:	8e 93       	st	-X, r24
 3a6:	11 97       	sbiw	r26, 0x01	; 1
 3a8:	c2 83       	std	Z+2, r28	; 0x02
 3aa:	13 82       	std	Z+3, r1	; 0x03
 3ac:	d8 01       	movw	r26, r16
 3ae:	56 96       	adiw	r26, 0x16	; 22
 3b0:	8c 91       	ld	r24, X
 3b2:	56 97       	sbiw	r26, 0x16	; 22
 3b4:	84 83       	std	Z+4, r24	; 0x04
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x3b8>
 3b8:	83 89       	ldd	r24, Z+19	; 0x13
 3ba:	94 89       	ldd	r25, Z+20	; 0x14
 3bc:	dc 01       	movw	r26, r24
 3be:	ed 91       	ld	r30, X+
 3c0:	fc 91       	ld	r31, X
 3c2:	06 80       	ldd	r0, Z+6	; 0x06
 3c4:	f7 81       	ldd	r31, Z+7	; 0x07
 3c6:	e0 2d       	mov	r30, r0
 3c8:	19 95       	eicall
 3ca:	c8 2f       	mov	r28, r24
 3cc:	88 23       	and	r24, r24
 3ce:	01 f0       	breq	.+0      	; 0x3d0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x3d0>
 3d0:	f8 01       	movw	r30, r16
 3d2:	86 85       	ldd	r24, Z+14	; 0x0e
 3d4:	8f 31       	cpi	r24, 0x1F	; 31
 3d6:	00 f0       	brcs	.+0      	; 0x3d8 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x3d8>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x3da>
 3da:	c8 01       	movw	r24, r16
 3dc:	0c 96       	adiw	r24, 0x0c	; 12
 3de:	60 e0       	ldi	r22, 0x00	; 0
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	40 e0       	ldi	r20, 0x00	; 0
 3e4:	50 e0       	ldi	r21, 0x00	; 0
 3e6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 3ea:	00 d0       	rcall	.+0      	; 0x3ec <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x3ec>
 3ec:	0f 92       	push	r0
 3ee:	ed b7       	in	r30, 0x3d	; 61
 3f0:	fe b7       	in	r31, 0x3e	; 62
 3f2:	31 96       	adiw	r30, 0x01	; 1
 3f4:	80 e0       	ldi	r24, 0x00	; 0
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x3fa>
 3fa:	d8 01       	movw	r26, r16
 3fc:	53 96       	adiw	r26, 0x13	; 19
 3fe:	8d 91       	ld	r24, X+
 400:	9c 91       	ld	r25, X
 402:	54 97       	sbiw	r26, 0x14	; 20
 404:	dc 01       	movw	r26, r24
 406:	ed 91       	ld	r30, X+
 408:	fc 91       	ld	r31, X
 40a:	06 80       	ldd	r0, Z+6	; 0x06
 40c:	f7 81       	ldd	r31, Z+7	; 0x07
 40e:	e0 2d       	mov	r30, r0
 410:	19 95       	eicall
 412:	c8 2f       	mov	r28, r24
 414:	88 23       	and	r24, r24
 416:	01 f0       	breq	.+0      	; 0x418 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x418>
 418:	f8 01       	movw	r30, r16
 41a:	86 85       	ldd	r24, Z+14	; 0x0e
 41c:	8f 31       	cpi	r24, 0x1F	; 31
 41e:	00 f0       	brcs	.+0      	; 0x420 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x420>
 420:	00 c0       	rjmp	.+0      	; 0x422 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x422>
 422:	c8 01       	movw	r24, r16
 424:	0c 96       	adiw	r24, 0x0c	; 12
 426:	60 e0       	ldi	r22, 0x00	; 0
 428:	70 e0       	ldi	r23, 0x00	; 0
 42a:	40 e0       	ldi	r20, 0x00	; 0
 42c:	50 e0       	ldi	r21, 0x00	; 0
 42e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 432:	00 d0       	rcall	.+0      	; 0x434 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x434>
 434:	0f 92       	push	r0
 436:	ed b7       	in	r30, 0x3d	; 61
 438:	fe b7       	in	r31, 0x3e	; 62
 43a:	31 96       	adiw	r30, 0x01	; 1
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	00 c0       	rjmp	.+0      	; 0x442 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x442>
 442:	d8 01       	movw	r26, r16
 444:	53 96       	adiw	r26, 0x13	; 19
 446:	8d 91       	ld	r24, X+
 448:	9c 91       	ld	r25, X
 44a:	54 97       	sbiw	r26, 0x14	; 20
 44c:	dc 01       	movw	r26, r24
 44e:	ed 91       	ld	r30, X+
 450:	fc 91       	ld	r31, X
 452:	06 80       	ldd	r0, Z+6	; 0x06
 454:	f7 81       	ldd	r31, Z+7	; 0x07
 456:	e0 2d       	mov	r30, r0
 458:	19 95       	eicall
 45a:	7c 01       	movw	r14, r24
 45c:	f8 01       	movw	r30, r16
 45e:	83 89       	ldd	r24, Z+19	; 0x13
 460:	94 89       	ldd	r25, Z+20	; 0x14
 462:	dc 01       	movw	r26, r24
 464:	ed 91       	ld	r30, X+
 466:	fc 91       	ld	r31, X
 468:	06 80       	ldd	r0, Z+6	; 0x06
 46a:	f7 81       	ldd	r31, Z+7	; 0x07
 46c:	e0 2d       	mov	r30, r0
 46e:	19 95       	eicall
 470:	38 2f       	mov	r19, r24
 472:	20 e0       	ldi	r18, 0x00	; 0
 474:	e2 0e       	add	r14, r18
 476:	f3 1e       	adc	r15, r19
 478:	8c 2d       	mov	r24, r12
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	f8 01       	movw	r30, r16
 47e:	26 85       	ldd	r18, Z+14	; 0x0e
 480:	8e 15       	cp	r24, r14
 482:	9f 05       	cpc	r25, r15
 484:	00 f4       	brcc	.+0      	; 0x486 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x486>
 486:	2f 31       	cpi	r18, 0x1F	; 31
 488:	00 f0       	brcs	.+0      	; 0x48a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x48a>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x48c>
 48c:	c8 01       	movw	r24, r16
 48e:	0c 96       	adiw	r24, 0x0c	; 12
 490:	60 e0       	ldi	r22, 0x00	; 0
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	40 e0       	ldi	r20, 0x00	; 0
 496:	50 e0       	ldi	r21, 0x00	; 0
 498:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 49c:	00 d0       	rcall	.+0      	; 0x49e <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x49e>
 49e:	00 d0       	rcall	.+0      	; 0x4a0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x4a0>
 4a0:	ed b7       	in	r30, 0x3d	; 61
 4a2:	fe b7       	in	r31, 0x3e	; 62
 4a4:	31 96       	adiw	r30, 0x01	; 1
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	ad b7       	in	r26, 0x3d	; 61
 4ac:	be b7       	in	r27, 0x3e	; 62
 4ae:	12 96       	adiw	r26, 0x02	; 2
 4b0:	9c 93       	st	X, r25
 4b2:	8e 93       	st	-X, r24
 4b4:	11 97       	sbiw	r26, 0x01	; 1
 4b6:	f3 82       	std	Z+3, r15	; 0x03
 4b8:	e2 82       	std	Z+2, r14	; 0x02
 4ba:	c4 82       	std	Z+4, r12	; 0x04
 4bc:	15 82       	std	Z+5, r1	; 0x05
 4be:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 4c2:	0f 90       	pop	r0
 4c4:	0f 90       	pop	r0
 4c6:	0f 90       	pop	r0
 4c8:	0f 90       	pop	r0
 4ca:	00 c0       	rjmp	.+0      	; 0x4cc <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x4cc>
 4cc:	2b 30       	cpi	r18, 0x0B	; 11
 4ce:	00 f4       	brcc	.+0      	; 0x4d0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x4d0>
 4d0:	c8 01       	movw	r24, r16
 4d2:	0c 96       	adiw	r24, 0x0c	; 12
 4d4:	60 e0       	ldi	r22, 0x00	; 0
 4d6:	70 e0       	ldi	r23, 0x00	; 0
 4d8:	40 e0       	ldi	r20, 0x00	; 0
 4da:	50 e0       	ldi	r21, 0x00	; 0
 4dc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 4e0:	00 d0       	rcall	.+0      	; 0x4e2 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x4e2>
 4e2:	00 d0       	rcall	.+0      	; 0x4e4 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x4e4>
 4e4:	ed b7       	in	r30, 0x3d	; 61
 4e6:	fe b7       	in	r31, 0x3e	; 62
 4e8:	31 96       	adiw	r30, 0x01	; 1
 4ea:	80 e0       	ldi	r24, 0x00	; 0
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	ad b7       	in	r26, 0x3d	; 61
 4f0:	be b7       	in	r27, 0x3e	; 62
 4f2:	12 96       	adiw	r26, 0x02	; 2
 4f4:	9c 93       	st	X, r25
 4f6:	8e 93       	st	-X, r24
 4f8:	11 97       	sbiw	r26, 0x01	; 1
 4fa:	c2 82       	std	Z+2, r12	; 0x02
 4fc:	13 82       	std	Z+3, r1	; 0x03
 4fe:	f5 82       	std	Z+5, r15	; 0x05
 500:	e4 82       	std	Z+4, r14	; 0x04
 502:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 506:	0f 90       	pop	r0
 508:	0f 90       	pop	r0
 50a:	0f 90       	pop	r0
 50c:	0f 90       	pop	r0
 50e:	80 e0       	ldi	r24, 0x00	; 0
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	ed b7       	in	r30, 0x3d	; 61
 514:	fe b7       	in	r31, 0x3e	; 62
 516:	92 83       	std	Z+2, r25	; 0x02
 518:	81 83       	std	Z+1, r24	; 0x01
 51a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 51e:	0f 90       	pop	r0
 520:	0f 90       	pop	r0
 522:	aa 24       	eor	r10, r10
 524:	bb 24       	eor	r11, r11
 526:	6c e0       	ldi	r22, 0x0C	; 12
 528:	86 2e       	mov	r8, r22
 52a:	91 2c       	mov	r9, r1
 52c:	80 0e       	add	r8, r16
 52e:	91 1e       	adc	r9, r17
 530:	70 e0       	ldi	r23, 0x00	; 0
 532:	47 2e       	mov	r4, r23
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	57 2e       	mov	r5, r23
 538:	e0 e0       	ldi	r30, 0x00	; 0
 53a:	6e 2e       	mov	r6, r30
 53c:	e0 e0       	ldi	r30, 0x00	; 0
 53e:	7e 2e       	mov	r7, r30
 540:	f0 e0       	ldi	r31, 0x00	; 0
 542:	2f 2e       	mov	r2, r31
 544:	f0 e0       	ldi	r31, 0x00	; 0
 546:	3f 2e       	mov	r3, r31
 548:	00 c0       	rjmp	.+0      	; 0x54a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x54a>
 54a:	d8 01       	movw	r26, r16
 54c:	53 96       	adiw	r26, 0x13	; 19
 54e:	8d 91       	ld	r24, X+
 550:	9c 91       	ld	r25, X
 552:	54 97       	sbiw	r26, 0x14	; 20
 554:	dc 01       	movw	r26, r24
 556:	ed 91       	ld	r30, X+
 558:	fc 91       	ld	r31, X
 55a:	04 80       	ldd	r0, Z+4	; 0x04
 55c:	f5 81       	ldd	r31, Z+5	; 0x05
 55e:	e0 2d       	mov	r30, r0
 560:	19 95       	eicall
 562:	ec 01       	movw	r28, r24
 564:	f8 01       	movw	r30, r16
 566:	86 85       	ldd	r24, Z+14	; 0x0e
 568:	20 97       	sbiw	r28, 0x00	; 0
 56a:	01 f4       	brne	.+0      	; 0x56c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x56c>
 56c:	00 c0       	rjmp	.+0      	; 0x56e <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x56e>
 56e:	85 31       	cpi	r24, 0x15	; 21
 570:	00 f4       	brcc	.+0      	; 0x572 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x572>
 572:	c4 01       	movw	r24, r8
 574:	60 e0       	ldi	r22, 0x00	; 0
 576:	70 e0       	ldi	r23, 0x00	; 0
 578:	40 e0       	ldi	r20, 0x00	; 0
 57a:	50 e0       	ldi	r21, 0x00	; 0
 57c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 580:	00 d0       	rcall	.+0      	; 0x582 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x582>
 582:	0f 92       	push	r0
 584:	e0 e0       	ldi	r30, 0x00	; 0
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	ad b7       	in	r26, 0x3d	; 61
 58a:	be b7       	in	r27, 0x3e	; 62
 58c:	12 96       	adiw	r26, 0x02	; 2
 58e:	fc 93       	st	X, r31
 590:	ee 93       	st	-X, r30
 592:	11 97       	sbiw	r26, 0x01	; 1
 594:	14 96       	adiw	r26, 0x04	; 4
 596:	dc 93       	st	X, r29
 598:	ce 93       	st	-X, r28
 59a:	13 97       	sbiw	r26, 0x03	; 3
 59c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 5a0:	0f 90       	pop	r0
 5a2:	0f 90       	pop	r0
 5a4:	ad b7       	in	r26, 0x3d	; 61
 5a6:	be b7       	in	r27, 0x3e	; 62
 5a8:	12 96       	adiw	r26, 0x02	; 2
 5aa:	7c 92       	st	X, r7
 5ac:	6e 92       	st	-X, r6
 5ae:	11 97       	sbiw	r26, 0x01	; 1
 5b0:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 5b4:	0f 90       	pop	r0
 5b6:	0f 90       	pop	r0
 5b8:	c7 01       	movw	r24, r14
 5ba:	8a 19       	sub	r24, r10
 5bc:	9b 09       	sbc	r25, r11
 5be:	8c 17       	cp	r24, r28
 5c0:	9d 07       	cpc	r25, r29
 5c2:	00 f4       	brcc	.+0      	; 0x5c4 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x5c4>
 5c4:	ec 01       	movw	r28, r24
 5c6:	f8 01       	movw	r30, r16
 5c8:	63 89       	ldd	r22, Z+19	; 0x13
 5ca:	74 89       	ldd	r23, Z+20	; 0x14
 5cc:	87 85       	ldd	r24, Z+15	; 0x0f
 5ce:	90 89       	ldd	r25, Z+16	; 0x10
 5d0:	ae 01       	movw	r20, r28
 5d2:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 5d6:	6c 01       	movw	r12, r24
 5d8:	d8 01       	movw	r26, r16
 5da:	1e 96       	adiw	r26, 0x0e	; 14
 5dc:	8c 91       	ld	r24, X
 5de:	1e 97       	sbiw	r26, 0x0e	; 14
 5e0:	85 31       	cpi	r24, 0x15	; 21
 5e2:	00 f4       	brcc	.+0      	; 0x5e4 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x5e4>
 5e4:	c4 01       	movw	r24, r8
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	40 e0       	ldi	r20, 0x00	; 0
 5ec:	50 e0       	ldi	r21, 0x00	; 0
 5ee:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 5f2:	ed b7       	in	r30, 0x3d	; 61
 5f4:	fe b7       	in	r31, 0x3e	; 62
 5f6:	3a 97       	sbiw	r30, 0x0a	; 10
 5f8:	0f b6       	in	r0, 0x3f	; 63
 5fa:	f8 94       	cli
 5fc:	fe bf       	out	0x3e, r31	; 62
 5fe:	0f be       	out	0x3f, r0	; 63
 600:	ed bf       	out	0x3d, r30	; 61
 602:	31 96       	adiw	r30, 0x01	; 1
 604:	ad b7       	in	r26, 0x3d	; 61
 606:	be b7       	in	r27, 0x3e	; 62
 608:	12 96       	adiw	r26, 0x02	; 2
 60a:	3c 92       	st	X, r3
 60c:	2e 92       	st	-X, r2
 60e:	11 97       	sbiw	r26, 0x01	; 1
 610:	d3 83       	std	Z+3, r29	; 0x03
 612:	c2 83       	std	Z+2, r28	; 0x02
 614:	d5 82       	std	Z+5, r13	; 0x05
 616:	c4 82       	std	Z+4, r12	; 0x04
 618:	b7 82       	std	Z+7, r11	; 0x07
 61a:	a6 82       	std	Z+6, r10	; 0x06
 61c:	f1 86       	std	Z+9, r15	; 0x09
 61e:	e0 86       	std	Z+8, r14	; 0x08
 620:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 624:	ed b7       	in	r30, 0x3d	; 61
 626:	fe b7       	in	r31, 0x3e	; 62
 628:	38 96       	adiw	r30, 0x08	; 8
 62a:	0f b6       	in	r0, 0x3f	; 63
 62c:	f8 94       	cli
 62e:	fe bf       	out	0x3e, r31	; 62
 630:	0f be       	out	0x3f, r0	; 63
 632:	ed bf       	out	0x3d, r30	; 61
 634:	72 82       	std	Z+2, r7	; 0x02
 636:	61 82       	std	Z+1, r6	; 0x01
 638:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 63c:	0f 90       	pop	r0
 63e:	0f 90       	pop	r0
 640:	ac 0c       	add	r10, r12
 642:	bd 1c       	adc	r11, r13
 644:	00 c0       	rjmp	.+0      	; 0x646 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x646>
 646:	8b 30       	cpi	r24, 0x0B	; 11
 648:	00 f4       	brcc	.+0      	; 0x64a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x64a>
 64a:	c4 01       	movw	r24, r8
 64c:	60 e0       	ldi	r22, 0x00	; 0
 64e:	70 e0       	ldi	r23, 0x00	; 0
 650:	40 e0       	ldi	r20, 0x00	; 0
 652:	50 e0       	ldi	r21, 0x00	; 0
 654:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 658:	00 d0       	rcall	.+0      	; 0x65a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x65a>
 65a:	00 d0       	rcall	.+0      	; 0x65c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x65c>
 65c:	ed b7       	in	r30, 0x3d	; 61
 65e:	fe b7       	in	r31, 0x3e	; 62
 660:	31 96       	adiw	r30, 0x01	; 1
 662:	ad b7       	in	r26, 0x3d	; 61
 664:	be b7       	in	r27, 0x3e	; 62
 666:	12 96       	adiw	r26, 0x02	; 2
 668:	5c 92       	st	X, r5
 66a:	4e 92       	st	-X, r4
 66c:	11 97       	sbiw	r26, 0x01	; 1
 66e:	b3 82       	std	Z+3, r11	; 0x03
 670:	a2 82       	std	Z+2, r10	; 0x02
 672:	f5 82       	std	Z+5, r15	; 0x05
 674:	e4 82       	std	Z+4, r14	; 0x04
 676:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 67a:	0f 90       	pop	r0
 67c:	0f 90       	pop	r0
 67e:	0f 90       	pop	r0
 680:	0f 90       	pop	r0
 682:	ed b7       	in	r30, 0x3d	; 61
 684:	fe b7       	in	r31, 0x3e	; 62
 686:	72 82       	std	Z+2, r7	; 0x02
 688:	61 82       	std	Z+1, r6	; 0x01
 68a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 68e:	0f 90       	pop	r0
 690:	0f 90       	pop	r0
 692:	ae 14       	cp	r10, r14
 694:	bf 04       	cpc	r11, r15
 696:	00 f4       	brcc	.+0      	; 0x698 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x698>
 698:	00 c0       	rjmp	.+0      	; 0x69a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x69a>
 69a:	d8 01       	movw	r26, r16
 69c:	53 96       	adiw	r26, 0x13	; 19
 69e:	8d 91       	ld	r24, X+
 6a0:	9c 91       	ld	r25, X
 6a2:	54 97       	sbiw	r26, 0x14	; 20
 6a4:	dc 01       	movw	r26, r24
 6a6:	ed 91       	ld	r30, X+
 6a8:	fc 91       	ld	r31, X
 6aa:	04 80       	ldd	r0, Z+4	; 0x04
 6ac:	f5 81       	ldd	r31, Z+5	; 0x05
 6ae:	e0 2d       	mov	r30, r0
 6b0:	19 95       	eicall
 6b2:	82 30       	cpi	r24, 0x02	; 2
 6b4:	91 05       	cpc	r25, r1
 6b6:	04 f0       	brlt	.+0      	; 0x6b8 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x6b8>
 6b8:	f8 01       	movw	r30, r16
 6ba:	86 85       	ldd	r24, Z+14	; 0x0e
 6bc:	8b 30       	cpi	r24, 0x0B	; 11
 6be:	00 f4       	brcc	.+0      	; 0x6c0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x6c0>
 6c0:	c8 01       	movw	r24, r16
 6c2:	0c 96       	adiw	r24, 0x0c	; 12
 6c4:	60 e0       	ldi	r22, 0x00	; 0
 6c6:	70 e0       	ldi	r23, 0x00	; 0
 6c8:	40 e0       	ldi	r20, 0x00	; 0
 6ca:	50 e0       	ldi	r21, 0x00	; 0
 6cc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 6d0:	d8 01       	movw	r26, r16
 6d2:	53 96       	adiw	r26, 0x13	; 19
 6d4:	8d 91       	ld	r24, X+
 6d6:	9c 91       	ld	r25, X
 6d8:	54 97       	sbiw	r26, 0x14	; 20
 6da:	dc 01       	movw	r26, r24
 6dc:	ed 91       	ld	r30, X+
 6de:	fc 91       	ld	r31, X
 6e0:	04 80       	ldd	r0, Z+4	; 0x04
 6e2:	f5 81       	ldd	r31, Z+5	; 0x05
 6e4:	e0 2d       	mov	r30, r0
 6e6:	19 95       	eicall
 6e8:	00 d0       	rcall	.+0      	; 0x6ea <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x6ea>
 6ea:	0f 92       	push	r0
 6ec:	20 e0       	ldi	r18, 0x00	; 0
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	ed b7       	in	r30, 0x3d	; 61
 6f2:	fe b7       	in	r31, 0x3e	; 62
 6f4:	32 83       	std	Z+2, r19	; 0x02
 6f6:	21 83       	std	Z+1, r18	; 0x01
 6f8:	94 83       	std	Z+4, r25	; 0x04
 6fa:	83 83       	std	Z+3, r24	; 0x03
 6fc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 700:	0f 90       	pop	r0
 702:	0f 90       	pop	r0
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	ad b7       	in	r26, 0x3d	; 61
 70a:	be b7       	in	r27, 0x3e	; 62
 70c:	12 96       	adiw	r26, 0x02	; 2
 70e:	9c 93       	st	X, r25
 710:	8e 93       	st	-X, r24
 712:	11 97       	sbiw	r26, 0x01	; 1
 714:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 718:	0f 90       	pop	r0
 71a:	0f 90       	pop	r0
 71c:	f8 01       	movw	r30, r16
 71e:	83 89       	ldd	r24, Z+19	; 0x13
 720:	94 89       	ldd	r25, Z+20	; 0x14
 722:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 726:	88 23       	and	r24, r24
 728:	01 f0       	breq	.+0      	; 0x72a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x72a>
 72a:	d8 01       	movw	r26, r16
 72c:	56 96       	adiw	r26, 0x16	; 22
 72e:	8c 91       	ld	r24, X
 730:	56 97       	sbiw	r26, 0x16	; 22
 732:	8f 5f       	subi	r24, 0xFF	; 255
 734:	56 96       	adiw	r26, 0x16	; 22
 736:	8c 93       	st	X, r24
 738:	56 97       	sbiw	r26, 0x16	; 22
 73a:	00 c0       	rjmp	.+0      	; 0x73c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x73c>
 73c:	f8 01       	movw	r30, r16
 73e:	c7 85       	ldd	r28, Z+15	; 0x0f
 740:	d0 89       	ldd	r29, Z+16	; 0x10
 742:	4a 85       	ldd	r20, Y+10	; 0x0a
 744:	5b 85       	ldd	r21, Y+11	; 0x0b
 746:	89 85       	ldd	r24, Y+9	; 0x09
 748:	9a 01       	movw	r18, r20
 74a:	28 1b       	sub	r18, r24
 74c:	31 09       	sbc	r19, r1
 74e:	c5 01       	movw	r24, r10
 750:	2a 15       	cp	r18, r10
 752:	3b 05       	cpc	r19, r11
 754:	00 f4       	brcc	.+0      	; 0x756 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x756>
 756:	c9 01       	movw	r24, r18
 758:	7a 01       	movw	r14, r20
 75a:	e8 1a       	sub	r14, r24
 75c:	f9 0a       	sbc	r15, r25
 75e:	fb 86       	std	Y+11, r15	; 0x0b
 760:	ea 86       	std	Y+10, r14	; 0x0a
 762:	cb 80       	ldd	r12, Y+3	; 0x03
 764:	dc 80       	ldd	r13, Y+4	; 0x04
 766:	8a 81       	ldd	r24, Y+2	; 0x02
 768:	8b 30       	cpi	r24, 0x0B	; 11
 76a:	00 f4       	brcc	.+0      	; 0x76c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x76c>
 76c:	ce 01       	movw	r24, r28
 76e:	60 e0       	ldi	r22, 0x00	; 0
 770:	70 e0       	ldi	r23, 0x00	; 0
 772:	40 e0       	ldi	r20, 0x00	; 0
 774:	50 e0       	ldi	r21, 0x00	; 0
 776:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 77a:	00 d0       	rcall	.+0      	; 0x77c <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x77c>
 77c:	00 d0       	rcall	.+0      	; 0x77e <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x77e>
 77e:	ed b7       	in	r30, 0x3d	; 61
 780:	fe b7       	in	r31, 0x3e	; 62
 782:	31 96       	adiw	r30, 0x01	; 1
 784:	80 e0       	ldi	r24, 0x00	; 0
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	ad b7       	in	r26, 0x3d	; 61
 78a:	be b7       	in	r27, 0x3e	; 62
 78c:	12 96       	adiw	r26, 0x02	; 2
 78e:	9c 93       	st	X, r25
 790:	8e 93       	st	-X, r24
 792:	11 97       	sbiw	r26, 0x01	; 1
 794:	13 82       	std	Z+3, r1	; 0x03
 796:	12 82       	std	Z+2, r1	; 0x02
 798:	f5 82       	std	Z+5, r15	; 0x05
 79a:	e4 82       	std	Z+4, r14	; 0x04
 79c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 7a0:	0f 90       	pop	r0
 7a2:	0f 90       	pop	r0
 7a4:	0f 90       	pop	r0
 7a6:	0f 90       	pop	r0
 7a8:	80 e0       	ldi	r24, 0x00	; 0
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	ed b7       	in	r30, 0x3d	; 61
 7ae:	fe b7       	in	r31, 0x3e	; 62
 7b0:	92 83       	std	Z+2, r25	; 0x02
 7b2:	81 83       	std	Z+1, r24	; 0x01
 7b4:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 7b8:	0f 90       	pop	r0
 7ba:	0f 90       	pop	r0
 7bc:	de 82       	std	Y+6, r13	; 0x06
 7be:	cd 82       	std	Y+5, r12	; 0x05
 7c0:	d8 01       	movw	r26, r16
 7c2:	1e 96       	adiw	r26, 0x0e	; 14
 7c4:	8c 91       	ld	r24, X
 7c6:	1e 97       	sbiw	r26, 0x0e	; 14
 7c8:	8f 31       	cpi	r24, 0x1F	; 31
 7ca:	00 f4       	brcc	.+0      	; 0x7cc <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x7cc>
 7cc:	c8 01       	movw	r24, r16
 7ce:	0c 96       	adiw	r24, 0x0c	; 12
 7d0:	60 e0       	ldi	r22, 0x00	; 0
 7d2:	70 e0       	ldi	r23, 0x00	; 0
 7d4:	40 e0       	ldi	r20, 0x00	; 0
 7d6:	50 e0       	ldi	r21, 0x00	; 0
 7d8:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 7dc:	0f 92       	push	r0
 7de:	0f 92       	push	r0
 7e0:	80 e0       	ldi	r24, 0x00	; 0
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	ed b7       	in	r30, 0x3d	; 61
 7e6:	fe b7       	in	r31, 0x3e	; 62
 7e8:	92 83       	std	Z+2, r25	; 0x02
 7ea:	81 83       	std	Z+1, r24	; 0x01
 7ec:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 7f0:	80 e0       	ldi	r24, 0x00	; 0
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	ad b7       	in	r26, 0x3d	; 61
 7f6:	be b7       	in	r27, 0x3e	; 62
 7f8:	12 96       	adiw	r26, 0x02	; 2
 7fa:	9c 93       	st	X, r25
 7fc:	8e 93       	st	-X, r24
 7fe:	11 97       	sbiw	r26, 0x01	; 1
 800:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv>
 804:	0f 90       	pop	r0
 806:	0f 90       	pop	r0
 808:	00 c0       	rjmp	.+0      	; 0x80a <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x80a>
 80a:	81 e0       	ldi	r24, 0x01	; 1
 80c:	00 c0       	rjmp	.+0      	; 0x80e <_ZN22StreamHFA11xRS232WiFi322sendRECVAndReadRECVACKEv+0x80e>
 80e:	80 e0       	ldi	r24, 0x00	; 0
 810:	df 91       	pop	r29
 812:	cf 91       	pop	r28
 814:	1f 91       	pop	r17
 816:	0f 91       	pop	r16
 818:	ff 90       	pop	r15
 81a:	ef 90       	pop	r14
 81c:	df 90       	pop	r13
 81e:	cf 90       	pop	r12
 820:	bf 90       	pop	r11
 822:	af 90       	pop	r10
 824:	9f 90       	pop	r9
 826:	8f 90       	pop	r8
 828:	7f 90       	pop	r7
 82a:	6f 90       	pop	r6
 82c:	5f 90       	pop	r5
 82e:	4f 90       	pop	r4
 830:	3f 90       	pop	r3
 832:	2f 90       	pop	r2
 834:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv:

00000000 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	8c 01       	movw	r16, r24
  1a:	c0 e0       	ldi	r28, 0x00	; 0
  1c:	d0 e0       	ldi	r29, 0x00	; 0

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	ac e0       	ldi	r26, 0x0C	; 12
  20:	ea 2e       	mov	r14, r26
  22:	f1 2c       	mov	r15, r1
  24:	e8 0e       	add	r14, r24
  26:	f9 1e       	adc	r15, r25
  28:	b0 e0       	ldi	r27, 0x00	; 0
  2a:	cb 2e       	mov	r12, r27
  2c:	b0 e0       	ldi	r27, 0x00	; 0
  2e:	db 2e       	mov	r13, r27
  30:	24 e1       	ldi	r18, 0x14	; 20
	{
		return inputBuffer->read();
  32:	a2 2e       	mov	r10, r18
  34:	b1 2c       	mov	r11, r1
  36:	30 e0       	ldi	r19, 0x00	; 0
  38:	83 2e       	mov	r8, r19
	}
	else
	{
		return -1;
  3a:	30 e0       	ldi	r19, 0x00	; 0
  3c:	93 2e       	mov	r9, r19
	}
}
  3e:	c8 01       	movw	r24, r16
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv>
  44:	88 23       	and	r24, r24
  46:	01 f4       	brne	.+0      	; 0x48 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv+0x48>
  48:	d8 01       	movw	r26, r16
  4a:	1e 96       	adiw	r26, 0x0e	; 14
  4c:	8c 91       	ld	r24, X
  4e:	1e 97       	sbiw	r26, 0x0e	; 14
  50:	85 31       	cpi	r24, 0x15	; 21
  52:	00 f4       	brcc	.+0      	; 0x54 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv+0x54>
  54:	c7 01       	movw	r24, r14
  56:	60 e0       	ldi	r22, 0x00	; 0
  58:	70 e0       	ldi	r23, 0x00	; 0
  5a:	40 e0       	ldi	r20, 0x00	; 0
  5c:	50 e0       	ldi	r21, 0x00	; 0
  5e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv>
  62:	00 d0       	rcall	.+0      	; 0x64 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv+0x64>
  64:	00 d0       	rcall	.+0      	; 0x66 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv+0x66>
  66:	ed b7       	in	r30, 0x3d	; 61
  68:	fe b7       	in	r31, 0x3e	; 62
  6a:	31 96       	adiw	r30, 0x01	; 1
  6c:	ad b7       	in	r26, 0x3d	; 61
  6e:	be b7       	in	r27, 0x3e	; 62
  70:	12 96       	adiw	r26, 0x02	; 2
  72:	dc 92       	st	X, r13
  74:	ce 92       	st	-X, r12
  76:	11 97       	sbiw	r26, 0x01	; 1
  78:	d3 83       	std	Z+3, r29	; 0x03
  7a:	c2 83       	std	Z+2, r28	; 0x02
  7c:	b5 82       	std	Z+5, r11	; 0x05
  7e:	a4 82       	std	Z+4, r10	; 0x04
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv>
  84:	0f 90       	pop	r0
  86:	0f 90       	pop	r0
  88:	0f 90       	pop	r0
  8a:	0f 90       	pop	r0
  8c:	ed b7       	in	r30, 0x3d	; 61
  8e:	fe b7       	in	r31, 0x3e	; 62
  90:	92 82       	std	Z+2, r9	; 0x02
  92:	81 82       	std	Z+1, r8	; 0x01
  94:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv>
  98:	0f 90       	pop	r0
  9a:	0f 90       	pop	r0
  9c:	21 96       	adiw	r28, 0x01	; 1
  9e:	c4 31       	cpi	r28, 0x14	; 20
  a0:	d1 05       	cpc	r29, r1
  a2:	01 f4       	brne	.+0      	; 0xa4 <_ZN22StreamHFA11xRS232WiFi315doFullReadCycleEv+0xa4>
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	1f 91       	pop	r17
  aa:	0f 91       	pop	r16
  ac:	ff 90       	pop	r15
  ae:	ef 90       	pop	r14
  b0:	df 90       	pop	r13
  b2:	cf 90       	pop	r12
  b4:	bf 90       	pop	r11
  b6:	af 90       	pop	r10
  b8:	9f 90       	pop	r9
  ba:	8f 90       	pop	r8
  bc:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi39availableEv:

00000000 <_ZN22StreamHFA11xRS232WiFi39availableEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	ef 85       	ldd	r30, Y+15	; 0x0f
   8:	f8 89       	ldd	r31, Y+16	; 0x10
   a:	91 85       	ldd	r25, Z+9	; 0x09
   c:	82 85       	ldd	r24, Z+10	; 0x0a
   e:	89 1b       	sub	r24, r25
  10:	01 f4       	brne	.+0      	; 0x12 <_ZN22StreamHFA11xRS232WiFi39availableEv+0x12>
  12:	ce 01       	movw	r24, r28
  14:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi39availableEv>
  18:	ef 85       	ldd	r30, Y+15	; 0x0f
  1a:	f8 89       	ldd	r31, Y+16	; 0x10
  1c:	21 85       	ldd	r18, Z+9	; 0x09

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	82 85       	ldd	r24, Z+10	; 0x0a
  20:	93 85       	ldd	r25, Z+11	; 0x0b
  22:	82 1b       	sub	r24, r18
  24:	91 09       	sbc	r25, r1
  26:	00 c0       	rjmp	.+0      	; 0x28 <_ZN22StreamHFA11xRS232WiFi39availableEv+0x28>
  28:	90 e0       	ldi	r25, 0x00	; 0
  2a:	df 91       	pop	r29
  2c:	cf 91       	pop	r28
  2e:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi34peekEv:

00000000 <_ZN22StreamHFA11xRS232WiFi34peekEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	ef 85       	ldd	r30, Y+15	; 0x0f
   8:	f8 89       	ldd	r31, Y+16	; 0x10
   a:	81 85       	ldd	r24, Z+9	; 0x09
   c:	90 e0       	ldi	r25, 0x00	; 0
   e:	22 85       	ldd	r18, Z+10	; 0x0a
  10:	33 85       	ldd	r19, Z+11	; 0x0b
  12:	28 17       	cp	r18, r24
  14:	39 07       	cpc	r19, r25
  16:	01 f4       	brne	.+0      	; 0x18 <_ZN22StreamHFA11xRS232WiFi34peekEv+0x18>
  18:	ce 01       	movw	r24, r28
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi34peekEv>

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	8f 85       	ldd	r24, Y+15	; 0x0f
  20:	98 89       	ldd	r25, Y+16	; 0x10
  22:	fc 01       	movw	r30, r24
  24:	21 85       	ldd	r18, Z+9	; 0x09
  26:	30 e0       	ldi	r19, 0x00	; 0
  28:	42 85       	ldd	r20, Z+10	; 0x0a
  2a:	53 85       	ldd	r21, Z+11	; 0x0b
  2c:	42 17       	cp	r20, r18
  2e:	53 07       	cpc	r21, r19
  30:	01 f0       	breq	.+0      	; 0x32 <_ZN22StreamHFA11xRS232WiFi34peekEv+0x32>
	{
		return inputBuffer->read();
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi34peekEv>
  36:	90 e0       	ldi	r25, 0x00	; 0
  38:	00 c0       	rjmp	.+0      	; 0x3a <_ZN22StreamHFA11xRS232WiFi34peekEv+0x3a>
	}
	else
	{
		return -1;
  3a:	8f ef       	ldi	r24, 0xFF	; 255
  3c:	9f ef       	ldi	r25, 0xFF	; 255
	}
}
  3e:	df 91       	pop	r29
  40:	cf 91       	pop	r28
  42:	08 95       	ret

Disassembly of section .text._ZN13AnyRingBufferIhE19validateRecordsListEv:

00000000 <_ZN13AnyRingBufferIhE19validateRecordsListEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	49 85       	ldd	r20, Y+9	; 0x09
   8:	24 2f       	mov	r18, r20
   a:	30 e0       	ldi	r19, 0x00	; 0
   c:	8a 85       	ldd	r24, Y+10	; 0x0a
   e:	9b 85       	ldd	r25, Y+11	; 0x0b
  10:	28 17       	cp	r18, r24
  12:	39 07       	cpc	r19, r25
  14:	01 f4       	brne	.+0      	; 0x16 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x16>
  16:	8a 81       	ldd	r24, Y+2	; 0x02
  18:	8b 30       	cpi	r24, 0x0B	; 11
  1a:	00 f4       	brcc	.+0      	; 0x1c <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x1c>
  1c:	ce 01       	movw	r24, r28

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	60 e0       	ldi	r22, 0x00	; 0
  20:	70 e0       	ldi	r23, 0x00	; 0
  22:	40 e0       	ldi	r20, 0x00	; 0
  24:	50 e0       	ldi	r21, 0x00	; 0
  26:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE19validateRecordsListEv>
  2a:	00 d0       	rcall	.+0      	; 0x2c <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x2c>
  2c:	00 d0       	rcall	.+0      	; 0x2e <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x2e>
  2e:	ed b7       	in	r30, 0x3d	; 61
  30:	fe b7       	in	r31, 0x3e	; 62
	{
		return inputBuffer->read();
  32:	31 96       	adiw	r30, 0x01	; 1
  34:	80 e0       	ldi	r24, 0x00	; 0
  36:	90 e0       	ldi	r25, 0x00	; 0
  38:	ad b7       	in	r26, 0x3d	; 61
	}
	else
	{
		return -1;
  3a:	be b7       	in	r27, 0x3e	; 62
  3c:	12 96       	adiw	r26, 0x02	; 2
	}
}
  3e:	9c 93       	st	X, r25
  40:	8e 93       	st	-X, r24
  42:	11 97       	sbiw	r26, 0x01	; 1
  44:	89 85       	ldd	r24, Y+9	; 0x09
  46:	82 83       	std	Z+2, r24	; 0x02
  48:	13 82       	std	Z+3, r1	; 0x03
  4a:	8a 85       	ldd	r24, Y+10	; 0x0a
  4c:	9b 85       	ldd	r25, Y+11	; 0x0b
  4e:	95 83       	std	Z+5, r25	; 0x05
  50:	84 83       	std	Z+4, r24	; 0x04
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE19validateRecordsListEv>
  56:	0f 90       	pop	r0
  58:	0f 90       	pop	r0
  5a:	0f 90       	pop	r0
  5c:	0f 90       	pop	r0
  5e:	80 e0       	ldi	r24, 0x00	; 0
  60:	90 e0       	ldi	r25, 0x00	; 0
  62:	ed b7       	in	r30, 0x3d	; 61
  64:	fe b7       	in	r31, 0x3e	; 62
  66:	92 83       	std	Z+2, r25	; 0x02
  68:	81 83       	std	Z+1, r24	; 0x01
  6a:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE19validateRecordsListEv>
  6e:	0f 90       	pop	r0
  70:	0f 90       	pop	r0
  72:	19 86       	std	Y+9, r1	; 0x09
  74:	1b 86       	std	Y+11, r1	; 0x0b
  76:	1a 86       	std	Y+10, r1	; 0x0a
  78:	8b 81       	ldd	r24, Y+3	; 0x03
  7a:	9c 81       	ldd	r25, Y+4	; 0x04
  7c:	9e 83       	std	Y+6, r25	; 0x06
  7e:	8d 83       	std	Y+5, r24	; 0x05
  80:	00 c0       	rjmp	.+0      	; 0x82 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x82>
  82:	8f 81       	ldd	r24, Y+7	; 0x07
  84:	48 17       	cp	r20, r24
  86:	00 f4       	brcc	.+0      	; 0x88 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x88>
  88:	00 c0       	rjmp	.+0      	; 0x8a <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x8a>
  8a:	8a 81       	ldd	r24, Y+2	; 0x02
  8c:	8b 30       	cpi	r24, 0x0B	; 11
  8e:	00 f4       	brcc	.+0      	; 0x90 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x90>
  90:	ce 01       	movw	r24, r28
  92:	60 e0       	ldi	r22, 0x00	; 0
  94:	70 e0       	ldi	r23, 0x00	; 0
  96:	40 e0       	ldi	r20, 0x00	; 0
  98:	50 e0       	ldi	r21, 0x00	; 0
  9a:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE19validateRecordsListEv>
  9e:	00 d0       	rcall	.+0      	; 0xa0 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0xa0>
  a0:	00 d0       	rcall	.+0      	; 0xa2 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0xa2>
  a2:	ed b7       	in	r30, 0x3d	; 61
  a4:	fe b7       	in	r31, 0x3e	; 62
  a6:	31 96       	adiw	r30, 0x01	; 1
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	ad b7       	in	r26, 0x3d	; 61
  ae:	be b7       	in	r27, 0x3e	; 62
  b0:	12 96       	adiw	r26, 0x02	; 2
  b2:	9c 93       	st	X, r25
  b4:	8e 93       	st	-X, r24
  b6:	11 97       	sbiw	r26, 0x01	; 1
  b8:	89 85       	ldd	r24, Y+9	; 0x09
  ba:	82 83       	std	Z+2, r24	; 0x02
  bc:	13 82       	std	Z+3, r1	; 0x03
  be:	8f 81       	ldd	r24, Y+7	; 0x07
  c0:	84 83       	std	Z+4, r24	; 0x04
  c2:	15 82       	std	Z+5, r1	; 0x05
  c4:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE19validateRecordsListEv>
  c8:	0f 90       	pop	r0
  ca:	0f 90       	pop	r0
  cc:	0f 90       	pop	r0
  ce:	0f 90       	pop	r0
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	ed b7       	in	r30, 0x3d	; 61
  d6:	fe b7       	in	r31, 0x3e	; 62
  d8:	92 83       	std	Z+2, r25	; 0x02
  da:	81 83       	std	Z+1, r24	; 0x01
  dc:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE19validateRecordsListEv>
  e0:	0f 90       	pop	r0
  e2:	0f 90       	pop	r0
  e4:	ab 81       	ldd	r26, Y+3	; 0x03
  e6:	bc 81       	ldd	r27, Y+4	; 0x04
  e8:	12 96       	adiw	r26, 0x02	; 2
  ea:	ed 91       	ld	r30, X+
  ec:	fc 91       	ld	r31, X
  ee:	13 97       	sbiw	r26, 0x03	; 3
  f0:	fc 83       	std	Y+4, r31	; 0x04
  f2:	eb 83       	std	Y+3, r30	; 0x03
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0xf6>
  f6:	fc 01       	movw	r30, r24
  f8:	82 81       	ldd	r24, Z+2	; 0x02
  fa:	93 81       	ldd	r25, Z+3	; 0x03
  fc:	00 97       	sbiw	r24, 0x00	; 0
  fe:	01 f4       	brne	.+0      	; 0x100 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x100>
 100:	b3 83       	std	Z+3, r27	; 0x03
 102:	a2 83       	std	Z+2, r26	; 0x02
 104:	13 96       	adiw	r26, 0x03	; 3
 106:	1c 92       	st	X, r1
 108:	1e 92       	st	-X, r1
 10a:	12 97       	sbiw	r26, 0x02	; 2
 10c:	8d 81       	ldd	r24, Y+5	; 0x05
 10e:	9e 81       	ldd	r25, Y+6	; 0x06
 110:	00 97       	sbiw	r24, 0x00	; 0
 112:	01 f4       	brne	.+0      	; 0x114 <_ZN13AnyRingBufferIhE19validateRecordsListEv+0x114>
 114:	be 83       	std	Y+6, r27	; 0x06
 116:	ad 83       	std	Y+5, r26	; 0x05
 118:	19 86       	std	Y+9, r1	; 0x09
 11a:	2f 81       	ldd	r18, Y+7	; 0x07
 11c:	8a 85       	ldd	r24, Y+10	; 0x0a
 11e:	9b 85       	ldd	r25, Y+11	; 0x0b
 120:	82 1b       	sub	r24, r18
 122:	91 09       	sbc	r25, r1
 124:	9b 87       	std	Y+11, r25	; 0x0b
 126:	8a 87       	std	Y+10, r24	; 0x0a
 128:	df 91       	pop	r29
 12a:	cf 91       	pop	r28
 12c:	08 95       	ret

Disassembly of section .text._ZN13AnyRingBufferIhE17discardFirstBytesEj:

00000000 <_ZN13AnyRingBufferIhE17discardFirstBytesEj>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	fc 01       	movw	r30, r24
   c:	21 85       	ldd	r18, Z+9	; 0x09
   e:	82 85       	ldd	r24, Z+10	; 0x0a
  10:	93 85       	ldd	r25, Z+11	; 0x0b
  12:	82 1b       	sub	r24, r18
  14:	91 09       	sbc	r25, r1
  16:	eb 01       	movw	r28, r22
  18:	86 17       	cp	r24, r22
  1a:	97 07       	cpc	r25, r23
  1c:	00 f4       	brcc	.+0      	; 0x1e <_ZN13AnyRingBufferIhE17discardFirstBytesEj+0x1e>

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	ec 01       	movw	r28, r24
  20:	00 c0       	rjmp	.+0      	; 0x22 <_ZN13AnyRingBufferIhE17discardFirstBytesEj+0x22>
  22:	f8 01       	movw	r30, r16
  24:	21 85       	ldd	r18, Z+9	; 0x09
  26:	87 81       	ldd	r24, Z+7	; 0x07
  28:	90 e0       	ldi	r25, 0x00	; 0
  2a:	82 1b       	sub	r24, r18
  2c:	91 09       	sbc	r25, r1
  2e:	3c 2f       	mov	r19, r28
  30:	8c 17       	cp	r24, r28
	{
		return inputBuffer->read();
  32:	9d 07       	cpc	r25, r29
  34:	00 f4       	brcc	.+0      	; 0x36 <_ZN13AnyRingBufferIhE17discardFirstBytesEj+0x36>
  36:	38 2f       	mov	r19, r24
  38:	23 0f       	add	r18, r19
	}
	else
	{
		return -1;
  3a:	f8 01       	movw	r30, r16
  3c:	21 87       	std	Z+9, r18	; 0x09
	}
}
  3e:	c3 1b       	sub	r28, r19
  40:	d1 09       	sbc	r29, r1
  42:	c8 01       	movw	r24, r16
  44:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE17discardFirstBytesEj>
  48:	20 97       	sbiw	r28, 0x00	; 0
  4a:	01 f4       	brne	.+0      	; 0x4c <_ZN13AnyRingBufferIhE17discardFirstBytesEj+0x4c>
  4c:	80 e0       	ldi	r24, 0x00	; 0
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	1f 91       	pop	r17
  56:	0f 91       	pop	r16
  58:	08 95       	ret

Disassembly of section .text._ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj:

00000000 <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	0f 93       	push	r16
  1a:	1f 93       	push	r17
  1c:	cf 93       	push	r28

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	df 93       	push	r29
  20:	8c 01       	movw	r16, r24
  22:	46 2e       	mov	r4, r22
  24:	3a 01       	movw	r6, r20
  26:	dc 01       	movw	r26, r24
  28:	19 96       	adiw	r26, 0x09	; 9
  2a:	ac 90       	ld	r10, X
  2c:	19 97       	sbiw	r26, 0x09	; 9
  2e:	bb 24       	eor	r11, r11
  30:	1a 96       	adiw	r26, 0x0a	; 10
	{
		return inputBuffer->read();
  32:	8d 91       	ld	r24, X+
  34:	9c 91       	ld	r25, X
  36:	1b 97       	sbiw	r26, 0x0b	; 11
  38:	8a 19       	sub	r24, r10
	}
	else
	{
		return -1;
  3a:	9b 09       	sbc	r25, r11
  3c:	e9 01       	movw	r28, r18
	}
}
  3e:	82 17       	cp	r24, r18
  40:	93 07       	cpc	r25, r19
  42:	00 f4       	brcc	.+0      	; 0x44 <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj+0x44>
  44:	ec 01       	movw	r28, r24
  46:	f8 01       	movw	r30, r16
  48:	e3 80       	ldd	r14, Z+3	; 0x03
  4a:	f4 80       	ldd	r15, Z+4	; 0x04
  4c:	cc 24       	eor	r12, r12
  4e:	dd 24       	eor	r13, r13
  50:	86 2c       	mov	r8, r6
  52:	57 2c       	mov	r5, r7
  54:	00 c0       	rjmp	.+0      	; 0x56 <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj+0x56>
  56:	d7 01       	movw	r26, r14
  58:	12 96       	adiw	r26, 0x02	; 2
  5a:	ed 90       	ld	r14, X+
  5c:	fc 90       	ld	r15, X
  5e:	13 97       	sbiw	r26, 0x03	; 3
  60:	20 97       	sbiw	r28, 0x00	; 0
  62:	01 f0       	breq	.+0      	; 0x64 <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj+0x64>
  64:	e1 14       	cp	r14, r1
  66:	f1 04       	cpc	r15, r1
  68:	01 f0       	breq	.+0      	; 0x6a <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj+0x6a>
  6a:	f8 01       	movw	r30, r16
  6c:	27 81       	ldd	r18, Z+7	; 0x07
  6e:	30 e0       	ldi	r19, 0x00	; 0
  70:	c5 01       	movw	r24, r10
  72:	b9 01       	movw	r22, r18
  74:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj>
  78:	98 2e       	mov	r9, r24
  7a:	d3 01       	movw	r26, r6
  7c:	ed 91       	ld	r30, X+
  7e:	fc 91       	ld	r31, X
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	d7 01       	movw	r26, r14
  84:	6d 91       	ld	r22, X+
  86:	7c 91       	ld	r23, X
  88:	11 97       	sbiw	r26, 0x01	; 1
  8a:	68 0f       	add	r22, r24
  8c:	79 1f       	adc	r23, r25
  8e:	a9 01       	movw	r20, r18
  90:	48 1b       	sub	r20, r24
  92:	59 0b       	sbc	r21, r25
  94:	c4 17       	cp	r28, r20
  96:	d5 07       	cpc	r29, r21
  98:	00 f4       	brcc	.+0      	; 0x9a <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj+0x9a>
  9a:	ae 01       	movw	r20, r28
  9c:	02 80       	ldd	r0, Z+2	; 0x02
  9e:	f3 81       	ldd	r31, Z+3	; 0x03
  a0:	e0 2d       	mov	r30, r0
  a2:	88 2d       	mov	r24, r8
  a4:	95 2d       	mov	r25, r5
  a6:	50 e0       	ldi	r21, 0x00	; 0
  a8:	19 95       	eicall
  aa:	28 2f       	mov	r18, r24
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	c2 0e       	add	r12, r18
  b0:	d3 1e       	adc	r13, r19
  b2:	c2 1b       	sub	r28, r18
  b4:	d3 0b       	sbc	r29, r19
  b6:	a2 0e       	add	r10, r18
  b8:	b3 1e       	adc	r11, r19
  ba:	98 0e       	add	r9, r24
  bc:	f8 01       	movw	r30, r16
  be:	97 81       	ldd	r25, Z+7	; 0x07
  c0:	99 16       	cp	r9, r25
  c2:	00 f4       	brcc	.+0      	; 0xc4 <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj+0xc4>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj+0xc6>
  c6:	44 20       	and	r4, r4
  c8:	01 f0       	breq	.+0      	; 0xca <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj+0xca>
  ca:	c8 01       	movw	r24, r16
  cc:	b6 01       	movw	r22, r12
  ce:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE10readOrPeekEbP6Streamj>
  d2:	c6 01       	movw	r24, r12
  d4:	df 91       	pop	r29
  d6:	cf 91       	pop	r28
  d8:	1f 91       	pop	r17
  da:	0f 91       	pop	r16
  dc:	ff 90       	pop	r15
  de:	ef 90       	pop	r14
  e0:	df 90       	pop	r13
  e2:	cf 90       	pop	r12
  e4:	bf 90       	pop	r11
  e6:	af 90       	pop	r10
  e8:	9f 90       	pop	r9
  ea:	8f 90       	pop	r8
  ec:	7f 90       	pop	r7
  ee:	6f 90       	pop	r6
  f0:	5f 90       	pop	r5
  f2:	4f 90       	pop	r4
  f4:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv:

00000000 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ff 92       	push	r15
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	ec 01       	movw	r28, r24
  10:	e9 89       	ldd	r30, Y+17	; 0x11
  12:	fa 89       	ldd	r31, Y+18	; 0x12
  14:	81 85       	ldd	r24, Z+9	; 0x09
  16:	02 85       	ldd	r16, Z+10	; 0x0a
  18:	13 85       	ldd	r17, Z+11	; 0x0b
  1a:	08 1b       	sub	r16, r24
  1c:	11 09       	sbc	r17, r1

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	f0 2e       	mov	r15, r16
  20:	00 23       	and	r16, r16
  22:	01 f4       	brne	.+0      	; 0x24 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x24>
  24:	00 c0       	rjmp	.+0      	; 0x26 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x26>
  26:	8e 85       	ldd	r24, Y+14	; 0x0e
  28:	8b 30       	cpi	r24, 0x0B	; 11
  2a:	00 f4       	brcc	.+0      	; 0x2c <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x2c>
  2c:	ce 01       	movw	r24, r28
  2e:	0c 96       	adiw	r24, 0x0c	; 12
  30:	60 e0       	ldi	r22, 0x00	; 0
	{
		return inputBuffer->read();
  32:	70 e0       	ldi	r23, 0x00	; 0
  34:	40 e0       	ldi	r20, 0x00	; 0
  36:	50 e0       	ldi	r21, 0x00	; 0
  38:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
	}
	else
	{
		return -1;
  3c:	8b 89       	ldd	r24, Y+19	; 0x13
	}
}
  3e:	9c 89       	ldd	r25, Y+20	; 0x14
  40:	dc 01       	movw	r26, r24
  42:	ed 91       	ld	r30, X+
  44:	fc 91       	ld	r31, X
  46:	04 80       	ldd	r0, Z+4	; 0x04
  48:	f5 81       	ldd	r31, Z+5	; 0x05
  4a:	e0 2d       	mov	r30, r0
  4c:	19 95       	eicall
  4e:	ed b7       	in	r30, 0x3d	; 61
  50:	fe b7       	in	r31, 0x3e	; 62
  52:	38 97       	sbiw	r30, 0x08	; 8
  54:	0f b6       	in	r0, 0x3f	; 63
  56:	f8 94       	cli
  58:	fe bf       	out	0x3e, r31	; 62
  5a:	0f be       	out	0x3f, r0	; 63
  5c:	ed bf       	out	0x3d, r30	; 61
  5e:	31 96       	adiw	r30, 0x01	; 1
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	30 e0       	ldi	r19, 0x00	; 0
  64:	ad b7       	in	r26, 0x3d	; 61
  66:	be b7       	in	r27, 0x3e	; 62
  68:	12 96       	adiw	r26, 0x02	; 2
  6a:	3c 93       	st	X, r19
  6c:	2e 93       	st	-X, r18
  6e:	11 97       	sbiw	r26, 0x01	; 1
  70:	93 83       	std	Z+3, r25	; 0x03
  72:	82 83       	std	Z+2, r24	; 0x02
  74:	04 83       	std	Z+4, r16	; 0x04
  76:	15 82       	std	Z+5, r1	; 0x05
  78:	8e 89       	ldd	r24, Y+22	; 0x16
  7a:	86 83       	std	Z+6, r24	; 0x06
  7c:	17 82       	std	Z+7, r1	; 0x07
  7e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
  82:	ed b7       	in	r30, 0x3d	; 61
  84:	fe b7       	in	r31, 0x3e	; 62
  86:	36 96       	adiw	r30, 0x06	; 6
  88:	0f b6       	in	r0, 0x3f	; 63
  8a:	f8 94       	cli
  8c:	fe bf       	out	0x3e, r31	; 62
  8e:	0f be       	out	0x3f, r0	; 63
  90:	ed bf       	out	0x3d, r30	; 61
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	92 83       	std	Z+2, r25	; 0x02
  98:	81 83       	std	Z+1, r24	; 0x01
  9a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
  9e:	0f 90       	pop	r0
  a0:	0f 90       	pop	r0
  a2:	ce 01       	movw	r24, r28
  a4:	60 e0       	ldi	r22, 0x00	; 0
  a6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
  aa:	8e 85       	ldd	r24, Y+14	; 0x0e
  ac:	8b 30       	cpi	r24, 0x0B	; 11
  ae:	00 f4       	brcc	.+0      	; 0xb0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0xb0>
  b0:	ce 01       	movw	r24, r28
  b2:	0c 96       	adiw	r24, 0x0c	; 12
  b4:	60 e0       	ldi	r22, 0x00	; 0
  b6:	70 e0       	ldi	r23, 0x00	; 0
  b8:	40 e0       	ldi	r20, 0x00	; 0
  ba:	50 e0       	ldi	r21, 0x00	; 0
  bc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
  c0:	8b 89       	ldd	r24, Y+19	; 0x13
  c2:	9c 89       	ldd	r25, Y+20	; 0x14
  c4:	dc 01       	movw	r26, r24
  c6:	ed 91       	ld	r30, X+
  c8:	fc 91       	ld	r31, X
  ca:	04 80       	ldd	r0, Z+4	; 0x04
  cc:	f5 81       	ldd	r31, Z+5	; 0x05
  ce:	e0 2d       	mov	r30, r0
  d0:	19 95       	eicall
  d2:	00 d0       	rcall	.+0      	; 0xd4 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0xd4>
  d4:	0f 92       	push	r0
  d6:	20 e0       	ldi	r18, 0x00	; 0
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	ed b7       	in	r30, 0x3d	; 61
  dc:	fe b7       	in	r31, 0x3e	; 62
  de:	32 83       	std	Z+2, r19	; 0x02
  e0:	21 83       	std	Z+1, r18	; 0x01
  e2:	94 83       	std	Z+4, r25	; 0x04
  e4:	83 83       	std	Z+3, r24	; 0x03
  e6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
  ea:	0f 90       	pop	r0
  ec:	0f 90       	pop	r0
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	ad b7       	in	r26, 0x3d	; 61
  f4:	be b7       	in	r27, 0x3e	; 62
  f6:	12 96       	adiw	r26, 0x02	; 2
  f8:	9c 93       	st	X, r25
  fa:	8e 93       	st	-X, r24
  fc:	11 97       	sbiw	r26, 0x01	; 1
  fe:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 102:	0f 90       	pop	r0
 104:	0f 90       	pop	r0
 106:	8b 89       	ldd	r24, Y+19	; 0x13
 108:	9c 89       	ldd	r25, Y+20	; 0x14
 10a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	8d 8b       	std	Y+21, r24	; 0x15
 112:	f9 8e       	std	Y+25, r15	; 0x19
 114:	1a 8e       	std	Y+26, r1	; 0x1a
 116:	8b 89       	ldd	r24, Y+19	; 0x13
 118:	9c 89       	ldd	r25, Y+20	; 0x14
 11a:	dc 01       	movw	r26, r24
 11c:	ed 91       	ld	r30, X+
 11e:	fc 91       	ld	r31, X
 120:	be 01       	movw	r22, r28
 122:	6b 5e       	subi	r22, 0xEB	; 235
 124:	7f 4f       	sbci	r23, 0xFF	; 255
 126:	02 80       	ldd	r0, Z+2	; 0x02
 128:	f3 81       	ldd	r31, Z+3	; 0x03
 12a:	e0 2d       	mov	r30, r0
 12c:	46 e0       	ldi	r20, 0x06	; 6
 12e:	50 e0       	ldi	r21, 0x00	; 0
 130:	19 95       	eicall
 132:	86 30       	cpi	r24, 0x06	; 6
 134:	91 05       	cpc	r25, r1
 136:	01 f0       	breq	.+0      	; 0x138 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x138>
 138:	8e 85       	ldd	r24, Y+14	; 0x0e
 13a:	8f 31       	cpi	r24, 0x1F	; 31
 13c:	00 f0       	brcs	.+0      	; 0x13e <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x13e>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x140>
 140:	ce 01       	movw	r24, r28
 142:	0c 96       	adiw	r24, 0x0c	; 12
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	70 e0       	ldi	r23, 0x00	; 0
 148:	40 e0       	ldi	r20, 0x00	; 0
 14a:	50 e0       	ldi	r21, 0x00	; 0
 14c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 150:	0f 92       	push	r0
 152:	0f 92       	push	r0
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	00 c0       	rjmp	.+0      	; 0x15a <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x15a>
 15a:	0f 2d       	mov	r16, r15
 15c:	10 e0       	ldi	r17, 0x00	; 0
 15e:	4b 89       	ldd	r20, Y+19	; 0x13
 160:	5c 89       	ldd	r21, Y+20	; 0x14
 162:	89 89       	ldd	r24, Y+17	; 0x11
 164:	9a 89       	ldd	r25, Y+18	; 0x12
 166:	60 e0       	ldi	r22, 0x00	; 0
 168:	98 01       	movw	r18, r16
 16a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 16e:	6c 01       	movw	r12, r24
 170:	80 17       	cp	r24, r16
 172:	91 07       	cpc	r25, r17
 174:	01 f0       	breq	.+0      	; 0x176 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x176>
 176:	8e 85       	ldd	r24, Y+14	; 0x0e
 178:	8f 31       	cpi	r24, 0x1F	; 31
 17a:	00 f0       	brcs	.+0      	; 0x17c <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x17c>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x17e>
 17e:	ce 01       	movw	r24, r28
 180:	0c 96       	adiw	r24, 0x0c	; 12
 182:	60 e0       	ldi	r22, 0x00	; 0
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	40 e0       	ldi	r20, 0x00	; 0
 188:	50 e0       	ldi	r21, 0x00	; 0
 18a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 18e:	00 d0       	rcall	.+0      	; 0x190 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x190>
 190:	0f 92       	push	r0
 192:	ed b7       	in	r30, 0x3d	; 61
 194:	fe b7       	in	r31, 0x3e	; 62
 196:	31 96       	adiw	r30, 0x01	; 1
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	ad b7       	in	r26, 0x3d	; 61
 19e:	be b7       	in	r27, 0x3e	; 62
 1a0:	12 96       	adiw	r26, 0x02	; 2
 1a2:	9c 93       	st	X, r25
 1a4:	8e 93       	st	-X, r24
 1a6:	11 97       	sbiw	r26, 0x01	; 1
 1a8:	f2 82       	std	Z+2, r15	; 0x02
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x1ac>
 1ac:	8b 89       	ldd	r24, Y+19	; 0x13
 1ae:	9c 89       	ldd	r25, Y+20	; 0x14
 1b0:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 1b4:	88 23       	and	r24, r24
 1b6:	01 f4       	brne	.+0      	; 0x1b8 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x1b8>
 1b8:	8e 85       	ldd	r24, Y+14	; 0x0e
 1ba:	8f 31       	cpi	r24, 0x1F	; 31
 1bc:	00 f0       	brcs	.+0      	; 0x1be <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x1be>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x1c0>
 1c0:	ce 01       	movw	r24, r28
 1c2:	0c 96       	adiw	r24, 0x0c	; 12
 1c4:	60 e0       	ldi	r22, 0x00	; 0
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	40 e0       	ldi	r20, 0x00	; 0
 1ca:	50 e0       	ldi	r21, 0x00	; 0
 1cc:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 1d0:	0f 92       	push	r0
 1d2:	0f 92       	push	r0
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	ad b7       	in	r26, 0x3d	; 61
 1da:	be b7       	in	r27, 0x3e	; 62
 1dc:	12 96       	adiw	r26, 0x02	; 2
 1de:	9c 93       	st	X, r25
 1e0:	8e 93       	st	-X, r24
 1e2:	11 97       	sbiw	r26, 0x01	; 1
 1e4:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x1ea>
 1ea:	8b 89       	ldd	r24, Y+19	; 0x13
 1ec:	9c 89       	ldd	r25, Y+20	; 0x14
 1ee:	dc 01       	movw	r26, r24
 1f0:	ed 91       	ld	r30, X+
 1f2:	fc 91       	ld	r31, X
 1f4:	02 84       	ldd	r0, Z+10	; 0x0a
 1f6:	f3 85       	ldd	r31, Z+11	; 0x0b
 1f8:	e0 2d       	mov	r30, r0
 1fa:	19 95       	eicall
 1fc:	8b 89       	ldd	r24, Y+19	; 0x13
 1fe:	9c 89       	ldd	r25, Y+20	; 0x14
 200:	dc 01       	movw	r26, r24
 202:	ed 91       	ld	r30, X+
 204:	fc 91       	ld	r31, X
 206:	04 80       	ldd	r0, Z+4	; 0x04
 208:	f5 81       	ldd	r31, Z+5	; 0x05
 20a:	e0 2d       	mov	r30, r0
 20c:	19 95       	eicall
 20e:	85 30       	cpi	r24, 0x05	; 5
 210:	91 05       	cpc	r25, r1
 212:	04 f0       	brlt	.+0      	; 0x214 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x214>
 214:	eb 89       	ldd	r30, Y+19	; 0x13
 216:	fc 89       	ldd	r31, Y+20	; 0x14
 218:	84 85       	ldd	r24, Z+12	; 0x0c
 21a:	95 85       	ldd	r25, Z+13	; 0x0d
 21c:	dc 01       	movw	r26, r24
 21e:	ed 91       	ld	r30, X+
 220:	fc 91       	ld	r31, X
 222:	06 80       	ldd	r0, Z+6	; 0x06
 224:	f7 81       	ldd	r31, Z+7	; 0x07
 226:	e0 2d       	mov	r30, r0
 228:	19 95       	eicall
 22a:	18 2f       	mov	r17, r24
 22c:	81 30       	cpi	r24, 0x01	; 1
 22e:	01 f0       	breq	.+0      	; 0x230 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x230>
 230:	8e 85       	ldd	r24, Y+14	; 0x0e
 232:	8f 31       	cpi	r24, 0x1F	; 31
 234:	00 f0       	brcs	.+0      	; 0x236 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x236>
 236:	00 c0       	rjmp	.+0      	; 0x238 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x238>
 238:	ce 01       	movw	r24, r28
 23a:	0c 96       	adiw	r24, 0x0c	; 12
 23c:	60 e0       	ldi	r22, 0x00	; 0
 23e:	70 e0       	ldi	r23, 0x00	; 0
 240:	40 e0       	ldi	r20, 0x00	; 0
 242:	50 e0       	ldi	r21, 0x00	; 0
 244:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 248:	00 d0       	rcall	.+0      	; 0x24a <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x24a>
 24a:	0f 92       	push	r0
 24c:	ed b7       	in	r30, 0x3d	; 61
 24e:	fe b7       	in	r31, 0x3e	; 62
 250:	31 96       	adiw	r30, 0x01	; 1
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	ad b7       	in	r26, 0x3d	; 61
 258:	be b7       	in	r27, 0x3e	; 62
 25a:	12 96       	adiw	r26, 0x02	; 2
 25c:	9c 93       	st	X, r25
 25e:	8e 93       	st	-X, r24
 260:	11 97       	sbiw	r26, 0x01	; 1
 262:	12 83       	std	Z+2, r17	; 0x02
 264:	13 82       	std	Z+3, r1	; 0x03
 266:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 26a:	0f 90       	pop	r0
 26c:	0f 90       	pop	r0
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	ed b7       	in	r30, 0x3d	; 61
 274:	fe b7       	in	r31, 0x3e	; 62
 276:	92 83       	std	Z+2, r25	; 0x02
 278:	81 83       	std	Z+1, r24	; 0x01
 27a:	00 c0       	rjmp	.+0      	; 0x27c <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x27c>
 27c:	eb 89       	ldd	r30, Y+19	; 0x13
 27e:	fc 89       	ldd	r31, Y+20	; 0x14
 280:	84 85       	ldd	r24, Z+12	; 0x0c
 282:	95 85       	ldd	r25, Z+13	; 0x0d
 284:	dc 01       	movw	r26, r24
 286:	ed 91       	ld	r30, X+
 288:	fc 91       	ld	r31, X
 28a:	06 80       	ldd	r0, Z+6	; 0x06
 28c:	f7 81       	ldd	r31, Z+7	; 0x07
 28e:	e0 2d       	mov	r30, r0
 290:	19 95       	eicall
 292:	18 2f       	mov	r17, r24
 294:	8e 89       	ldd	r24, Y+22	; 0x16
 296:	18 17       	cp	r17, r24
 298:	01 f0       	breq	.+0      	; 0x29a <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x29a>
 29a:	8e 85       	ldd	r24, Y+14	; 0x0e
 29c:	8f 31       	cpi	r24, 0x1F	; 31
 29e:	00 f0       	brcs	.+0      	; 0x2a0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x2a0>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x2a2>
 2a2:	ce 01       	movw	r24, r28
 2a4:	0c 96       	adiw	r24, 0x0c	; 12
 2a6:	60 e0       	ldi	r22, 0x00	; 0
 2a8:	70 e0       	ldi	r23, 0x00	; 0
 2aa:	40 e0       	ldi	r20, 0x00	; 0
 2ac:	50 e0       	ldi	r21, 0x00	; 0
 2ae:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 2b2:	00 d0       	rcall	.+0      	; 0x2b4 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x2b4>
 2b4:	00 d0       	rcall	.+0      	; 0x2b6 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x2b6>
 2b6:	ed b7       	in	r30, 0x3d	; 61
 2b8:	fe b7       	in	r31, 0x3e	; 62
 2ba:	31 96       	adiw	r30, 0x01	; 1
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	ad b7       	in	r26, 0x3d	; 61
 2c2:	be b7       	in	r27, 0x3e	; 62
 2c4:	12 96       	adiw	r26, 0x02	; 2
 2c6:	9c 93       	st	X, r25
 2c8:	8e 93       	st	-X, r24
 2ca:	11 97       	sbiw	r26, 0x01	; 1
 2cc:	12 83       	std	Z+2, r17	; 0x02
 2ce:	13 82       	std	Z+3, r1	; 0x03
 2d0:	8e 89       	ldd	r24, Y+22	; 0x16
 2d2:	84 83       	std	Z+4, r24	; 0x04
 2d4:	15 82       	std	Z+5, r1	; 0x05
 2d6:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 2da:	0f 90       	pop	r0
 2dc:	0f 90       	pop	r0
 2de:	0f 90       	pop	r0
 2e0:	0f 90       	pop	r0
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x2e4>
 2e4:	eb 89       	ldd	r30, Y+19	; 0x13
 2e6:	fc 89       	ldd	r31, Y+20	; 0x14
 2e8:	84 85       	ldd	r24, Z+12	; 0x0c
 2ea:	95 85       	ldd	r25, Z+13	; 0x0d
 2ec:	dc 01       	movw	r26, r24
 2ee:	ed 91       	ld	r30, X+
 2f0:	fc 91       	ld	r31, X
 2f2:	06 80       	ldd	r0, Z+6	; 0x06
 2f4:	f7 81       	ldd	r31, Z+7	; 0x07
 2f6:	e0 2d       	mov	r30, r0
 2f8:	19 95       	eicall
 2fa:	18 2f       	mov	r17, r24
 2fc:	88 23       	and	r24, r24
 2fe:	01 f0       	breq	.+0      	; 0x300 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x300>
 300:	8e 85       	ldd	r24, Y+14	; 0x0e
 302:	8f 31       	cpi	r24, 0x1F	; 31
 304:	00 f0       	brcs	.+0      	; 0x306 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x306>
 306:	00 c0       	rjmp	.+0      	; 0x308 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x308>
 308:	ce 01       	movw	r24, r28
 30a:	0c 96       	adiw	r24, 0x0c	; 12
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	70 e0       	ldi	r23, 0x00	; 0
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	50 e0       	ldi	r21, 0x00	; 0
 314:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 318:	00 d0       	rcall	.+0      	; 0x31a <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x31a>
 31a:	0f 92       	push	r0
 31c:	ed b7       	in	r30, 0x3d	; 61
 31e:	fe b7       	in	r31, 0x3e	; 62
 320:	31 96       	adiw	r30, 0x01	; 1
 322:	80 e0       	ldi	r24, 0x00	; 0
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	00 c0       	rjmp	.+0      	; 0x328 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x328>
 328:	eb 89       	ldd	r30, Y+19	; 0x13
 32a:	fc 89       	ldd	r31, Y+20	; 0x14
 32c:	84 85       	ldd	r24, Z+12	; 0x0c
 32e:	95 85       	ldd	r25, Z+13	; 0x0d
 330:	dc 01       	movw	r26, r24
 332:	ed 91       	ld	r30, X+
 334:	fc 91       	ld	r31, X
 336:	06 80       	ldd	r0, Z+6	; 0x06
 338:	f7 81       	ldd	r31, Z+7	; 0x07
 33a:	e0 2d       	mov	r30, r0
 33c:	19 95       	eicall
 33e:	18 2f       	mov	r17, r24
 340:	88 23       	and	r24, r24
 342:	01 f0       	breq	.+0      	; 0x344 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x344>
 344:	8e 85       	ldd	r24, Y+14	; 0x0e
 346:	8f 31       	cpi	r24, 0x1F	; 31
 348:	00 f0       	brcs	.+0      	; 0x34a <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x34a>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x34c>
 34c:	ce 01       	movw	r24, r28
 34e:	0c 96       	adiw	r24, 0x0c	; 12
 350:	60 e0       	ldi	r22, 0x00	; 0
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	40 e0       	ldi	r20, 0x00	; 0
 356:	50 e0       	ldi	r21, 0x00	; 0
 358:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 35c:	00 d0       	rcall	.+0      	; 0x35e <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x35e>
 35e:	0f 92       	push	r0
 360:	ed b7       	in	r30, 0x3d	; 61
 362:	fe b7       	in	r31, 0x3e	; 62
 364:	31 96       	adiw	r30, 0x01	; 1
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	00 c0       	rjmp	.+0      	; 0x36c <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x36c>
 36c:	eb 89       	ldd	r30, Y+19	; 0x13
 36e:	fc 89       	ldd	r31, Y+20	; 0x14
 370:	84 85       	ldd	r24, Z+12	; 0x0c
 372:	95 85       	ldd	r25, Z+13	; 0x0d
 374:	dc 01       	movw	r26, r24
 376:	ed 91       	ld	r30, X+
 378:	fc 91       	ld	r31, X
 37a:	06 80       	ldd	r0, Z+6	; 0x06
 37c:	f7 81       	ldd	r31, Z+7	; 0x07
 37e:	e0 2d       	mov	r30, r0
 380:	19 95       	eicall
 382:	88 23       	and	r24, r24
 384:	01 f4       	brne	.+0      	; 0x386 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x386>
 386:	89 89       	ldd	r24, Y+17	; 0x11
 388:	9a 89       	ldd	r25, Y+18	; 0x12
 38a:	b6 01       	movw	r22, r12
 38c:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 390:	8e 89       	ldd	r24, Y+22	; 0x16
 392:	8f 5f       	subi	r24, 0xFF	; 255
 394:	8e 8b       	std	Y+22, r24	; 0x16
 396:	00 c0       	rjmp	.+0      	; 0x398 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x398>
 398:	8e 85       	ldd	r24, Y+14	; 0x0e
 39a:	8f 31       	cpi	r24, 0x1F	; 31
 39c:	00 f4       	brcc	.+0      	; 0x39e <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x39e>
 39e:	ce 01       	movw	r24, r28
 3a0:	0c 96       	adiw	r24, 0x0c	; 12
 3a2:	60 e0       	ldi	r22, 0x00	; 0
 3a4:	70 e0       	ldi	r23, 0x00	; 0
 3a6:	40 e0       	ldi	r20, 0x00	; 0
 3a8:	50 e0       	ldi	r21, 0x00	; 0
 3aa:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 3ae:	0f 92       	push	r0
 3b0:	0f 92       	push	r0
 3b2:	80 e0       	ldi	r24, 0x00	; 0
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	ed b7       	in	r30, 0x3d	; 61
 3b8:	fe b7       	in	r31, 0x3e	; 62
 3ba:	92 83       	std	Z+2, r25	; 0x02
 3bc:	81 83       	std	Z+1, r24	; 0x01
 3be:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	ad b7       	in	r26, 0x3d	; 61
 3c8:	be b7       	in	r27, 0x3e	; 62
 3ca:	12 96       	adiw	r26, 0x02	; 2
 3cc:	9c 93       	st	X, r25
 3ce:	8e 93       	st	-X, r24
 3d0:	11 97       	sbiw	r26, 0x01	; 1
 3d2:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv>
 3d6:	0f 90       	pop	r0
 3d8:	0f 90       	pop	r0
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x3dc>
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	00 c0       	rjmp	.+0      	; 0x3e0 <_ZN22StreamHFA11xRS232WiFi322sendSENDAndReadSENDACKEv+0x3e0>
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	df 91       	pop	r29
 3e4:	cf 91       	pop	r28
 3e6:	1f 91       	pop	r17
 3e8:	0f 91       	pop	r16
 3ea:	ff 90       	pop	r15
 3ec:	df 90       	pop	r13
 3ee:	cf 90       	pop	r12
 3f0:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv:

00000000 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	8c 01       	movw	r16, r24
  1a:	c0 e0       	ldi	r28, 0x00	; 0
  1c:	d0 e0       	ldi	r29, 0x00	; 0

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	4c e0       	ldi	r20, 0x0C	; 12
  20:	e4 2e       	mov	r14, r20
  22:	f1 2c       	mov	r15, r1
  24:	e8 0e       	add	r14, r24
  26:	f9 1e       	adc	r15, r25
  28:	50 e0       	ldi	r21, 0x00	; 0
  2a:	c5 2e       	mov	r12, r21
  2c:	50 e0       	ldi	r21, 0x00	; 0
  2e:	d5 2e       	mov	r13, r21
  30:	64 e1       	ldi	r22, 0x14	; 20
	{
		return inputBuffer->read();
  32:	a6 2e       	mov	r10, r22
  34:	b1 2c       	mov	r11, r1
  36:	70 e0       	ldi	r23, 0x00	; 0
  38:	87 2e       	mov	r8, r23
	}
	else
	{
		return -1;
  3a:	70 e0       	ldi	r23, 0x00	; 0
  3c:	97 2e       	mov	r9, r23
	}
}
  3e:	c8 01       	movw	r24, r16
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv>
  44:	88 23       	and	r24, r24
  46:	01 f0       	breq	.+0      	; 0x48 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv+0x48>
  48:	00 c0       	rjmp	.+0      	; 0x4a <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv+0x4a>
  4a:	d8 01       	movw	r26, r16
  4c:	1e 96       	adiw	r26, 0x0e	; 14
  4e:	8c 91       	ld	r24, X
  50:	1e 97       	sbiw	r26, 0x0e	; 14
  52:	8f 31       	cpi	r24, 0x1F	; 31
  54:	00 f0       	brcs	.+0      	; 0x56 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv+0x56>
  56:	00 c0       	rjmp	.+0      	; 0x58 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv+0x58>
  58:	c7 01       	movw	r24, r14
  5a:	60 e0       	ldi	r22, 0x00	; 0
  5c:	70 e0       	ldi	r23, 0x00	; 0
  5e:	40 e0       	ldi	r20, 0x00	; 0
  60:	50 e0       	ldi	r21, 0x00	; 0
  62:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv>
  66:	f8 01       	movw	r30, r16
  68:	41 89       	ldd	r20, Z+17	; 0x11
  6a:	52 89       	ldd	r21, Z+18	; 0x12
  6c:	8d b7       	in	r24, 0x3d	; 61
  6e:	9e b7       	in	r25, 0x3e	; 62
  70:	08 97       	sbiw	r24, 0x08	; 8
  72:	0f b6       	in	r0, 0x3f	; 63
  74:	f8 94       	cli
  76:	9e bf       	out	0x3e, r25	; 62
  78:	0f be       	out	0x3f, r0	; 63
  7a:	8d bf       	out	0x3d, r24	; 61
  7c:	ad b7       	in	r26, 0x3d	; 61
  7e:	be b7       	in	r27, 0x3e	; 62
  80:	11 96       	adiw	r26, 0x01	; 1
  82:	ed b7       	in	r30, 0x3d	; 61
  84:	fe b7       	in	r31, 0x3e	; 62
  86:	d2 82       	std	Z+2, r13	; 0x02
  88:	c1 82       	std	Z+1, r12	; 0x01
  8a:	fa 01       	movw	r30, r20
  8c:	21 85       	ldd	r18, Z+9	; 0x09
  8e:	82 85       	ldd	r24, Z+10	; 0x0a
  90:	93 85       	ldd	r25, Z+11	; 0x0b
  92:	82 1b       	sub	r24, r18
  94:	91 09       	sbc	r25, r1
  96:	13 96       	adiw	r26, 0x03	; 3
  98:	9c 93       	st	X, r25
  9a:	8e 93       	st	-X, r24
  9c:	12 97       	sbiw	r26, 0x02	; 2
  9e:	15 96       	adiw	r26, 0x05	; 5
  a0:	dc 93       	st	X, r29
  a2:	ce 93       	st	-X, r28
  a4:	14 97       	sbiw	r26, 0x04	; 4
  a6:	17 96       	adiw	r26, 0x07	; 7
  a8:	bc 92       	st	X, r11
  aa:	ae 92       	st	-X, r10
  ac:	16 97       	sbiw	r26, 0x06	; 6
  ae:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv>
  b2:	8d b7       	in	r24, 0x3d	; 61
  b4:	9e b7       	in	r25, 0x3e	; 62
  b6:	06 96       	adiw	r24, 0x06	; 6
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	f8 94       	cli
  bc:	9e bf       	out	0x3e, r25	; 62
  be:	0f be       	out	0x3f, r0	; 63
  c0:	8d bf       	out	0x3d, r24	; 61
  c2:	ad b7       	in	r26, 0x3d	; 61
  c4:	be b7       	in	r27, 0x3e	; 62
  c6:	12 96       	adiw	r26, 0x02	; 2
  c8:	9c 92       	st	X, r9
  ca:	8e 92       	st	-X, r8
  cc:	11 97       	sbiw	r26, 0x01	; 1
  ce:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv>
  d2:	0f 90       	pop	r0
  d4:	0f 90       	pop	r0
  d6:	21 96       	adiw	r28, 0x01	; 1
  d8:	c4 31       	cpi	r28, 0x14	; 20
  da:	d1 05       	cpc	r29, r1
  dc:	01 f0       	breq	.+0      	; 0xde <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv+0xde>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <_ZN22StreamHFA11xRS232WiFi315doFullSendCycleEv+0xe0>
  e0:	df 91       	pop	r29
  e2:	cf 91       	pop	r28
  e4:	1f 91       	pop	r17
  e6:	0f 91       	pop	r16
  e8:	ff 90       	pop	r15
  ea:	ef 90       	pop	r14
  ec:	df 90       	pop	r13
  ee:	cf 90       	pop	r12
  f0:	bf 90       	pop	r11
  f2:	af 90       	pop	r10
  f4:	9f 90       	pop	r9
  f6:	8f 90       	pop	r8
  f8:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi35writeEh:

00000000 <_ZN22StreamHFA11xRS232WiFi35writeEh>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	1f 93       	push	r17
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	ec 01       	movw	r28, r24
   8:	16 2f       	mov	r17, r22
   a:	00 c0       	rjmp	.+0      	; 0xc <_ZN22StreamHFA11xRS232WiFi35writeEh+0xc>
   c:	ce 01       	movw	r24, r28
   e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi35writeEh>
  12:	e9 89       	ldd	r30, Y+17	; 0x11
  14:	fa 89       	ldd	r31, Y+18	; 0x12
  16:	40 85       	ldd	r20, Z+8	; 0x08
  18:	50 e0       	ldi	r21, 0x00	; 0
  1a:	22 85       	ldd	r18, Z+10	; 0x0a
  1c:	33 85       	ldd	r19, Z+11	; 0x0b

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	81 85       	ldd	r24, Z+9	; 0x09
  20:	b9 01       	movw	r22, r18
  22:	68 1b       	sub	r22, r24
  24:	71 09       	sbc	r23, r1
  26:	46 17       	cp	r20, r22
  28:	57 07       	cpc	r21, r23
  2a:	01 f0       	breq	.+0      	; 0x2c <_ZN22StreamHFA11xRS232WiFi35writeEh+0x2c>
  2c:	c5 81       	ldd	r28, Z+5	; 0x05
  2e:	d6 81       	ldd	r29, Z+6	; 0x06
  30:	20 97       	sbiw	r28, 0x00	; 0
	{
		return inputBuffer->read();
  32:	01 f0       	breq	.+0      	; 0x34 <_ZN22StreamHFA11xRS232WiFi35writeEh+0x34>
  34:	67 81       	ldd	r22, Z+7	; 0x07
  36:	c9 01       	movw	r24, r18
  38:	70 e0       	ldi	r23, 0x00	; 0
	}
	else
	{
		return -1;
  3a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi35writeEh>
	}
}
  3e:	a8 81       	ld	r26, Y
  40:	b9 81       	ldd	r27, Y+1	; 0x01
  42:	a8 0f       	add	r26, r24
  44:	b9 1f       	adc	r27, r25
  46:	1c 93       	st	X, r17
  48:	82 85       	ldd	r24, Z+10	; 0x0a
  4a:	93 85       	ldd	r25, Z+11	; 0x0b
  4c:	01 96       	adiw	r24, 0x01	; 1
  4e:	93 87       	std	Z+11, r25	; 0x0b
  50:	82 87       	std	Z+10, r24	; 0x0a
  52:	67 81       	ldd	r22, Z+7	; 0x07
  54:	70 e0       	ldi	r23, 0x00	; 0
  56:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi35writeEh>
  5a:	00 97       	sbiw	r24, 0x00	; 0
  5c:	01 f4       	brne	.+0      	; 0x5e <_ZN22StreamHFA11xRS232WiFi35writeEh+0x5e>
  5e:	a5 81       	ldd	r26, Z+5	; 0x05
  60:	b6 81       	ldd	r27, Z+6	; 0x06
  62:	12 96       	adiw	r26, 0x02	; 2
  64:	8d 91       	ld	r24, X+
  66:	9c 91       	ld	r25, X
  68:	13 97       	sbiw	r26, 0x03	; 3
  6a:	96 83       	std	Z+6, r25	; 0x06
  6c:	85 83       	std	Z+5, r24	; 0x05
  6e:	00 c0       	rjmp	.+0      	; 0x70 <_ZN22StreamHFA11xRS232WiFi35writeEh+0x70>
  70:	80 e0       	ldi	r24, 0x00	; 0
  72:	00 c0       	rjmp	.+0      	; 0x74 <_ZN22StreamHFA11xRS232WiFi35writeEh+0x74>
  74:	81 e0       	ldi	r24, 0x01	; 1
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	df 91       	pop	r29
  7a:	cf 91       	pop	r28
  7c:	1f 91       	pop	r17
  7e:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi35flushEv:

00000000 <_ZN22StreamHFA11xRS232WiFi35flushEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	1f 93       	push	r17
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	ec 01       	movw	r28, r24
   8:	1a e0       	ldi	r17, 0x0A	; 10
   a:	e9 89       	ldd	r30, Y+17	; 0x11
   c:	fa 89       	ldd	r31, Y+18	; 0x12
   e:	81 85       	ldd	r24, Z+9	; 0x09
  10:	90 e0       	ldi	r25, 0x00	; 0
  12:	22 85       	ldd	r18, Z+10	; 0x0a
  14:	33 85       	ldd	r19, Z+11	; 0x0b
  16:	28 17       	cp	r18, r24
  18:	39 07       	cpc	r19, r25
  1a:	01 f0       	breq	.+0      	; 0x1c <_ZN22StreamHFA11xRS232WiFi35flushEv+0x1c>
  1c:	ce 01       	movw	r24, r28

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi35flushEv>
  22:	11 50       	subi	r17, 0x01	; 1
  24:	01 f4       	brne	.+0      	; 0x26 <_ZN22StreamHFA11xRS232WiFi35flushEv+0x26>
  26:	df 91       	pop	r29
  28:	cf 91       	pop	r28
  2a:	1f 91       	pop	r17
  2c:	08 95       	ret

Disassembly of section .text._ZN13AnyRingBufferIhE4readEv:

00000000 <_ZN13AnyRingBufferIhE4readEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	1f 93       	push	r17
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	ec 01       	movw	r28, r24
   8:	49 85       	ldd	r20, Y+9	; 0x09
   a:	84 2f       	mov	r24, r20
   c:	90 e0       	ldi	r25, 0x00	; 0
   e:	2a 85       	ldd	r18, Y+10	; 0x0a
  10:	3b 85       	ldd	r19, Y+11	; 0x0b
  12:	82 17       	cp	r24, r18
  14:	93 07       	cpc	r25, r19
  16:	00 f4       	brcc	.+0      	; 0x18 <_ZN13AnyRingBufferIhE4readEv+0x18>
  18:	eb 81       	ldd	r30, Y+3	; 0x03
  1a:	fc 81       	ldd	r31, Y+4	; 0x04
  1c:	01 90       	ld	r0, Z+

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	f0 81       	ld	r31, Z
  20:	e0 2d       	mov	r30, r0
  22:	e8 0f       	add	r30, r24
  24:	f9 1f       	adc	r31, r25
  26:	10 81       	ld	r17, Z
  28:	4f 5f       	subi	r20, 0xFF	; 255
  2a:	49 87       	std	Y+9, r20	; 0x09
  2c:	8a 81       	ldd	r24, Y+2	; 0x02
  2e:	8b 30       	cpi	r24, 0x0B	; 11
  30:	00 f4       	brcc	.+0      	; 0x32 <_ZN13AnyRingBufferIhE4readEv+0x32>
	{
		return inputBuffer->read();
  32:	ce 01       	movw	r24, r28
  34:	60 e0       	ldi	r22, 0x00	; 0
  36:	70 e0       	ldi	r23, 0x00	; 0
  38:	40 e0       	ldi	r20, 0x00	; 0
	}
	else
	{
		return -1;
  3a:	50 e0       	ldi	r21, 0x00	; 0
  3c:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4readEv>
	}
}
  40:	00 d0       	rcall	.+0      	; 0x42 <_ZN13AnyRingBufferIhE4readEv+0x42>
  42:	00 d0       	rcall	.+0      	; 0x44 <_ZN13AnyRingBufferIhE4readEv+0x44>
  44:	ed b7       	in	r30, 0x3d	; 61
  46:	fe b7       	in	r31, 0x3e	; 62
  48:	31 96       	adiw	r30, 0x01	; 1
  4a:	80 e0       	ldi	r24, 0x00	; 0
  4c:	90 e0       	ldi	r25, 0x00	; 0
  4e:	ad b7       	in	r26, 0x3d	; 61
  50:	be b7       	in	r27, 0x3e	; 62
  52:	12 96       	adiw	r26, 0x02	; 2
  54:	9c 93       	st	X, r25
  56:	8e 93       	st	-X, r24
  58:	11 97       	sbiw	r26, 0x01	; 1
  5a:	12 83       	std	Z+2, r17	; 0x02
  5c:	13 82       	std	Z+3, r1	; 0x03
  5e:	14 83       	std	Z+4, r17	; 0x04
  60:	15 82       	std	Z+5, r1	; 0x05
  62:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4readEv>
  66:	0f 90       	pop	r0
  68:	0f 90       	pop	r0
  6a:	0f 90       	pop	r0
  6c:	0f 90       	pop	r0
  6e:	80 e0       	ldi	r24, 0x00	; 0
  70:	90 e0       	ldi	r25, 0x00	; 0
  72:	ed b7       	in	r30, 0x3d	; 61
  74:	fe b7       	in	r31, 0x3e	; 62
  76:	92 83       	std	Z+2, r25	; 0x02
  78:	81 83       	std	Z+1, r24	; 0x01
  7a:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4readEv>
  7e:	0f 90       	pop	r0
  80:	0f 90       	pop	r0
  82:	ce 01       	movw	r24, r28
  84:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4readEv>
  88:	00 c0       	rjmp	.+0      	; 0x8a <_ZN13AnyRingBufferIhE4readEv+0x8a>
  8a:	8a 81       	ldd	r24, Y+2	; 0x02
  8c:	8f 31       	cpi	r24, 0x1F	; 31
  8e:	00 f4       	brcc	.+0      	; 0x90 <_ZN13AnyRingBufferIhE4readEv+0x90>
  90:	ce 01       	movw	r24, r28
  92:	60 e0       	ldi	r22, 0x00	; 0
  94:	70 e0       	ldi	r23, 0x00	; 0
  96:	40 e0       	ldi	r20, 0x00	; 0
  98:	50 e0       	ldi	r21, 0x00	; 0
  9a:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4readEv>
  9e:	0f 92       	push	r0
  a0:	0f 92       	push	r0
  a2:	80 e0       	ldi	r24, 0x00	; 0
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	ad b7       	in	r26, 0x3d	; 61
  a8:	be b7       	in	r27, 0x3e	; 62
  aa:	12 96       	adiw	r26, 0x02	; 2
  ac:	9c 93       	st	X, r25
  ae:	8e 93       	st	-X, r24
  b0:	11 97       	sbiw	r26, 0x01	; 1
  b2:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4readEv>
  b6:	80 e0       	ldi	r24, 0x00	; 0
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	ed b7       	in	r30, 0x3d	; 61
  bc:	fe b7       	in	r31, 0x3e	; 62
  be:	92 83       	std	Z+2, r25	; 0x02
  c0:	81 83       	std	Z+1, r24	; 0x01
  c2:	0e 94 00 00 	call	0	; 0x0 <_ZN13AnyRingBufferIhE4readEv>
  c6:	0f 90       	pop	r0
  c8:	0f 90       	pop	r0
  ca:	10 e0       	ldi	r17, 0x00	; 0
  cc:	81 2f       	mov	r24, r17
  ce:	df 91       	pop	r29
  d0:	cf 91       	pop	r28
  d2:	1f 91       	pop	r17
  d4:	08 95       	ret

Disassembly of section .text._ZN22StreamHFA11xRS232WiFi34readEv:

00000000 <_ZN22StreamHFA11xRS232WiFi34readEv>:
}

// =================================================

int StreamHFA11xRS232WiFi3::read()
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
	if( inputBuffer->getUsedSpace() == 0 ) doFullReadCycle();
   6:	ef 85       	ldd	r30, Y+15	; 0x0f
   8:	f8 89       	ldd	r31, Y+16	; 0x10
   a:	81 85       	ldd	r24, Z+9	; 0x09
   c:	90 e0       	ldi	r25, 0x00	; 0
   e:	22 85       	ldd	r18, Z+10	; 0x0a
  10:	33 85       	ldd	r19, Z+11	; 0x0b
  12:	28 17       	cp	r18, r24
  14:	39 07       	cpc	r19, r25
  16:	01 f4       	brne	.+0      	; 0x18 <_ZN22StreamHFA11xRS232WiFi34readEv+0x18>
  18:	ce 01       	movw	r24, r28
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi34readEv>

	if( inputBuffer->getUsedSpace() > 0 )
  1e:	8f 85       	ldd	r24, Y+15	; 0x0f
  20:	98 89       	ldd	r25, Y+16	; 0x10
  22:	fc 01       	movw	r30, r24
  24:	21 85       	ldd	r18, Z+9	; 0x09
  26:	30 e0       	ldi	r19, 0x00	; 0
  28:	42 85       	ldd	r20, Z+10	; 0x0a
  2a:	53 85       	ldd	r21, Z+11	; 0x0b
  2c:	42 17       	cp	r20, r18
  2e:	53 07       	cpc	r21, r19
  30:	01 f0       	breq	.+0      	; 0x32 <_ZN22StreamHFA11xRS232WiFi34readEv+0x32>
	{
		return inputBuffer->read();
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN22StreamHFA11xRS232WiFi34readEv>
  36:	90 e0       	ldi	r25, 0x00	; 0
  38:	00 c0       	rjmp	.+0      	; 0x3a <_ZN22StreamHFA11xRS232WiFi34readEv+0x3a>
	}
	else
	{
		return -1;
  3a:	8f ef       	ldi	r24, 0xFF	; 255
  3c:	9f ef       	ldi	r25, 0xFF	; 255
	}
}
  3e:	df 91       	pop	r29
  40:	cf 91       	pop	r28
  42:	08 95       	ret

StreamHFA11xRS232WiFiCRC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000ccc  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      0000421e  00000000  00000000  00000d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN24StreamHFA11xRS232WiFiCRC4peekEv 0000001a  00000000  00000000  00004f1e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN24StreamHFA11xRS232WiFiCRC5flushEv 0000001a  00000000  00000000  00004f38  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN24StreamHFA11xRS232WiFiCRC9availableEv 0000001a  00000000  00000000  00004f52  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN24StreamHFA11xRS232WiFiCRC5writeEPKhj 00000044  00000000  00000000  00004f6c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN24StreamHFA11xRS232WiFiCRC5writeEh 0000002c  00000000  00000000  00004fb0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN24StreamHFA11xRS232WiFiCRC4readEv 00000042  00000000  00000000  00004fdc  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN24StreamHFA11xRS232WiFiCRC9setStreamEP6Stream 00000008  00000000  00000000  0000501e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text._ZN24StreamHFA11xRS232WiFiCRC18resetInternalStateEv 0000001a  00000000  00000000  00005026  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN24StreamHFA11xRS232WiFiCRCC2EP6Stream 00000058  00000000  00000000  00005040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text._ZN24StreamHFA11xRS232WiFiCRC18resetOutgoingStateEv 00000008  00000000  00000000  00005098  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text._ZN24StreamHFA11xRS232WiFiCRC19resetIncommingStateEv 00000008  00000000  00000000  000050a0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text._ZN24StreamHFA11xRS232WiFiCRC8writeCRCEv 0000000e  00000000  00000000  000050a8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text._ZN24StreamHFA11xRS232WiFiCRC6getCRCEv 00000008  00000000  00000000  000050b6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text._ZN24StreamHFA11xRS232WiFiCRC19isIncommingCRCMatchEv 0000005e  00000000  00000000  000050be  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .text._ZN24StreamHFA11xRS232WiFiCRC13getWriteErrorEv 00000010  00000000  00000000  0000511c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text._ZN24StreamHFA11xRS232WiFiCRC15clearWriteErrorEv 00000010  00000000  00000000  0000512c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .rodata._ZTV24StreamHFA11xRS232WiFiCRC 00000010  00000000  00000000  0000513c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 22 .rodata._ZTV6Stream 00000010  00000000  00000000  0000514c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 23 .progmem.data 00000019  00000000  00000000  0000515c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC4peekEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC4peekEv>:
  private:
    int write_error;
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
   0:	dc 01       	movw	r26, r24
   2:	1c 96       	adiw	r26, 0x0c	; 12
   4:	8d 91       	ld	r24, X+
   6:	9c 91       	ld	r25, X
   8:	1d 97       	sbiw	r26, 0x0d	; 13
   a:	dc 01       	movw	r26, r24
   c:	ed 91       	ld	r30, X+
// =================================================

void StreamHFA11xRS232WiFiCRC::clearWriteError()
{
	underlyingStream->clearWriteError();
}
   e:	fc 91       	ld	r31, X
  10:	00 84       	ldd	r0, Z+8	; 0x08
  12:	f1 85       	ldd	r31, Z+9	; 0x09
  14:	e0 2d       	mov	r30, r0
  16:	19 95       	eicall
  18:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC5flushEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC5flushEv>:
   0:	dc 01       	movw	r26, r24
   2:	1c 96       	adiw	r26, 0x0c	; 12
   4:	8d 91       	ld	r24, X+
   6:	9c 91       	ld	r25, X
   8:	1d 97       	sbiw	r26, 0x0d	; 13
   a:	dc 01       	movw	r26, r24
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	02 84       	ldd	r0, Z+10	; 0x0a
  12:	f3 85       	ldd	r31, Z+11	; 0x0b
  14:	e0 2d       	mov	r30, r0
  16:	19 95       	eicall
  18:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC9availableEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC9availableEv>:
   0:	dc 01       	movw	r26, r24
   2:	1c 96       	adiw	r26, 0x0c	; 12
   4:	8d 91       	ld	r24, X+
   6:	9c 91       	ld	r25, X
   8:	1d 97       	sbiw	r26, 0x0d	; 13
   a:	dc 01       	movw	r26, r24
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	04 80       	ldd	r0, Z+4	; 0x04
  12:	f5 81       	ldd	r31, Z+5	; 0x05
  14:	e0 2d       	mov	r30, r0
  16:	19 95       	eicall
  18:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC5writeEPKhj:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC5writeEPKhj>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	7b 01       	movw	r14, r22
  10:	14 2f       	mov	r17, r20
  12:	05 2f       	mov	r16, r21
  14:	41 96       	adiw	r24, 0x11	; 17
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC5writeEPKhj>
  1a:	8c 85       	ldd	r24, Y+12	; 0x0c
  1c:	9d 85       	ldd	r25, Y+13	; 0x0d
  1e:	dc 01       	movw	r26, r24
  20:	ed 91       	ld	r30, X+
  22:	fc 91       	ld	r31, X
  24:	02 80       	ldd	r0, Z+2	; 0x02
  26:	f3 81       	ldd	r31, Z+3	; 0x03
  28:	e0 2d       	mov	r30, r0
  2a:	b7 01       	movw	r22, r14
  2c:	41 2f       	mov	r20, r17
  2e:	50 2f       	mov	r21, r16
  30:	19 95       	eicall
  32:	81 2f       	mov	r24, r17
  34:	90 2f       	mov	r25, r16
  36:	df 91       	pop	r29
  38:	cf 91       	pop	r28
  3a:	1f 91       	pop	r17
  3c:	0f 91       	pop	r16
  3e:	ff 90       	pop	r15
  40:	ef 90       	pop	r14
  42:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC5writeEh:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC5writeEh>:
   0:	1f 93       	push	r17
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
   6:	ec 01       	movw	r28, r24
   8:	16 2f       	mov	r17, r22
   a:	41 96       	adiw	r24, 0x11	; 17
   c:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC5writeEh>
  10:	8c 85       	ldd	r24, Y+12	; 0x0c
  12:	9d 85       	ldd	r25, Y+13	; 0x0d
  14:	dc 01       	movw	r26, r24
  16:	ed 91       	ld	r30, X+
  18:	fc 91       	ld	r31, X
  1a:	01 90       	ld	r0, Z+
  1c:	f0 81       	ld	r31, Z
  1e:	e0 2d       	mov	r30, r0
  20:	61 2f       	mov	r22, r17
  22:	19 95       	eicall
  24:	df 91       	pop	r29
  26:	cf 91       	pop	r28
  28:	1f 91       	pop	r17
  2a:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC4readEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC4readEv>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	dc 01       	movw	r26, r24
   c:	1c 96       	adiw	r26, 0x0c	; 12
   e:	8d 91       	ld	r24, X+
  10:	9c 91       	ld	r25, X
  12:	1d 97       	sbiw	r26, 0x0d	; 13
  14:	dc 01       	movw	r26, r24
  16:	ed 91       	ld	r30, X+
  18:	fc 91       	ld	r31, X
  1a:	06 80       	ldd	r0, Z+6	; 0x06
  1c:	f7 81       	ldd	r31, Z+7	; 0x07
  1e:	e0 2d       	mov	r30, r0
  20:	19 95       	eicall
  22:	ec 01       	movw	r28, r24
  24:	bf ef       	ldi	r27, 0xFF	; 255
  26:	8f 3f       	cpi	r24, 0xFF	; 255
  28:	9b 07       	cpc	r25, r27
  2a:	01 f0       	breq	.+0      	; 0x2c <_ZN24StreamHFA11xRS232WiFiCRC4readEv+0x2c>
  2c:	c8 01       	movw	r24, r16
  2e:	4b 96       	adiw	r24, 0x1b	; 27
  30:	6c 2f       	mov	r22, r28
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC4readEv>
  36:	ce 01       	movw	r24, r28
  38:	df 91       	pop	r29
  3a:	cf 91       	pop	r28
  3c:	1f 91       	pop	r17
  3e:	0f 91       	pop	r16
  40:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC9setStreamEP6Stream:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC9setStreamEP6Stream>:
   0:	fc 01       	movw	r30, r24
   2:	75 87       	std	Z+13, r23	; 0x0d
   4:	64 87       	std	Z+12, r22	; 0x0c
   6:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC18resetInternalStateEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC18resetInternalStateEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	4b 96       	adiw	r24, 0x1b	; 27
   8:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC18resetInternalStateEv>
   c:	ce 01       	movw	r24, r28
   e:	41 96       	adiw	r24, 0x11	; 17
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC18resetInternalStateEv>
  14:	df 91       	pop	r29
  16:	cf 91       	pop	r28
  18:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRCC2EP6Stream:

00000000 <_ZN24StreamHFA11xRS232WiFiCRCC1EP6Stream>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
   c:	1b 82       	std	Y+3, r1	; 0x03
   e:	1a 82       	std	Y+2, r1	; 0x02
  10:	88 ee       	ldi	r24, 0xE8	; 232
  12:	93 e0       	ldi	r25, 0x03	; 3
  14:	a0 e0       	ldi	r26, 0x00	; 0
  16:	b0 e0       	ldi	r27, 0x00	; 0
  18:	8c 83       	std	Y+4, r24	; 0x04
  1a:	9d 83       	std	Y+5, r25	; 0x05
  1c:	ae 83       	std	Y+6, r26	; 0x06
  1e:	bf 83       	std	Y+7, r27	; 0x07
  20:	80 e0       	ldi	r24, 0x00	; 0
  22:	90 e0       	ldi	r25, 0x00	; 0
  24:	99 83       	std	Y+1, r25	; 0x01
  26:	88 83       	st	Y, r24
  28:	ce 01       	movw	r24, r28
  2a:	0e 96       	adiw	r24, 0x0e	; 14
  2c:	60 e0       	ldi	r22, 0x00	; 0
  2e:	70 e0       	ldi	r23, 0x00	; 0
  30:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRCC1EP6Stream>
  34:	ce 01       	movw	r24, r28
  36:	41 96       	adiw	r24, 0x11	; 17
  38:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRCC1EP6Stream>
  3c:	ce 01       	movw	r24, r28
  3e:	4b 96       	adiw	r24, 0x1b	; 27
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRCC1EP6Stream>
  44:	1d 87       	std	Y+13, r17	; 0x0d
  46:	0c 87       	std	Y+12, r16	; 0x0c
  48:	ce 01       	movw	r24, r28
  4a:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRCC1EP6Stream>
  4e:	df 91       	pop	r29
  50:	cf 91       	pop	r28
  52:	1f 91       	pop	r17
  54:	0f 91       	pop	r16
  56:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC18resetOutgoingStateEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC18resetOutgoingStateEv>:
   0:	41 96       	adiw	r24, 0x11	; 17
   2:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC18resetOutgoingStateEv>
   6:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC19resetIncommingStateEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC19resetIncommingStateEv>:
   0:	4b 96       	adiw	r24, 0x1b	; 27
   2:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC19resetIncommingStateEv>
   6:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC8writeCRCEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC8writeCRCEv>:
   0:	fc 01       	movw	r30, r24
   2:	64 85       	ldd	r22, Z+12	; 0x0c
   4:	75 85       	ldd	r23, Z+13	; 0x0d
   6:	41 96       	adiw	r24, 0x11	; 17
   8:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC8writeCRCEv>
   c:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC6getCRCEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC6getCRCEv>:
   0:	4b 96       	adiw	r24, 0x1b	; 27
   2:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC6getCRCEv>
   6:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC19isIncommingCRCMatchEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC19isIncommingCRCMatchEv>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	4b 96       	adiw	r24, 0x1b	; 27
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN24StreamHFA11xRS232WiFiCRC19isIncommingCRCMatchEv>
  14:	7c 01       	movw	r14, r24
  16:	8c 85       	ldd	r24, Y+12	; 0x0c
  18:	9d 85       	ldd	r25, Y+13	; 0x0d
  1a:	dc 01       	movw	r26, r24
  1c:	ed 91       	ld	r30, X+
  1e:	fc 91       	ld	r31, X
  20:	06 80       	ldd	r0, Z+6	; 0x06
  22:	f7 81       	ldd	r31, Z+7	; 0x07
  24:	e0 2d       	mov	r30, r0
  26:	19 95       	eicall
  28:	08 2f       	mov	r16, r24
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	8c 85       	ldd	r24, Y+12	; 0x0c
  2e:	9d 85       	ldd	r25, Y+13	; 0x0d
  30:	dc 01       	movw	r26, r24
  32:	ed 91       	ld	r30, X+
  34:	fc 91       	ld	r31, X
  36:	06 80       	ldd	r0, Z+6	; 0x06
  38:	f7 81       	ldd	r31, Z+7	; 0x07
  3a:	e0 2d       	mov	r30, r0
  3c:	19 95       	eicall
  3e:	38 2f       	mov	r19, r24
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	02 0f       	add	r16, r18
  44:	13 1f       	adc	r17, r19
  46:	81 e0       	ldi	r24, 0x01	; 1
  48:	0e 15       	cp	r16, r14
  4a:	1f 05       	cpc	r17, r15
  4c:	01 f0       	breq	.+0      	; 0x4e <_ZN24StreamHFA11xRS232WiFiCRC19isIncommingCRCMatchEv+0x4e>
  4e:	80 e0       	ldi	r24, 0x00	; 0
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	1f 91       	pop	r17
  56:	0f 91       	pop	r16
  58:	ff 90       	pop	r15
  5a:	ef 90       	pop	r14
  5c:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC13getWriteErrorEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC13getWriteErrorEv>:
   0:	dc 01       	movw	r26, r24
   2:	1c 96       	adiw	r26, 0x0c	; 12
   4:	ed 91       	ld	r30, X+
   6:	fc 91       	ld	r31, X
   8:	1d 97       	sbiw	r26, 0x0d	; 13
   a:	82 81       	ldd	r24, Z+2	; 0x02
   c:	93 81       	ldd	r25, Z+3	; 0x03
   e:	08 95       	ret

Disassembly of section .text._ZN24StreamHFA11xRS232WiFiCRC15clearWriteErrorEv:

00000000 <_ZN24StreamHFA11xRS232WiFiCRC15clearWriteErrorEv>:
   0:	dc 01       	movw	r26, r24
   2:	1c 96       	adiw	r26, 0x0c	; 12
   4:	ed 91       	ld	r30, X+
   6:	fc 91       	ld	r31, X
   8:	1d 97       	sbiw	r26, 0x0d	; 13
   a:	13 82       	std	Z+3, r1	; 0x03
   c:	12 82       	std	Z+2, r1	; 0x02
   e:	08 95       	ret

_StreamHFA11xRS232WiFi.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000004a5  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING

_StreamHFA11xRS232WiFiCRC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000004ab  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
