In archive libSatelita1_RestServer.a:

DeterminateHttpMethodSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001f  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000053  2**0
                  ALLOC
  3 .stab         000007e0  00000000  00000000  00000054  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003bb2  00000000  00000000  00000834  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN28DeterminateHttpMethodSubTask14getSubTaskNameEv 00000006  00000000  00000000  000043e6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN28DeterminateHttpMethodSubTask18resetInternalStateEv 00000002  00000000  00000000  000043ec  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream 0000006c  00000000  00000000  000043ee  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN28DeterminateHttpMethodSubTaskC2EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP19ReadHttpPathSubTask 00000052  00000000  00000000  0000445a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .rodata._ZTV28DeterminateHttpMethodSubTask 0000000a  00000000  00000000  000044ac  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 10 .rodata._ZTV17RestServerSubTask 0000000a  00000000  00000000  000044b6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 11 .progmem.data 0000001d  00000000  00000000  000044c0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN28DeterminateHttpMethodSubTask14getSubTaskNameEv:

00000000 <_ZN28DeterminateHttpMethodSubTask14getSubTaskNameEv>:

#include "DeterminateHttpMethodSubTask.h"

// =================================================

DeterminateHttpMethodSubTask::DeterminateHttpMethodSubTask( RestServerSubTask* _errorSubTask , SkipBytesUntilSequenceSubTask* _skipBytesUntilSequenceSubTask , ReadHttpPathSubTask* _readHttpPathSubTask ) : dp( PSTR( "DeterminateHttpMethodSubTask" ) )//: p( _p )
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN28DeterminateHttpMethodSubTask18resetInternalStateEv:

00000000 <_ZN28DeterminateHttpMethodSubTask18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream:

00000000 <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	ec 01       	movw	r28, r24
   c:	2b 96       	adiw	r28, 0x0b	; 11
   e:	ce 01       	movw	r24, r28
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream>
  14:	ce 01       	movw	r24, r28
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream>
  1a:	ec 01       	movw	r28, r24
  1c:	8f ef       	ldi	r24, 0xFF	; 255
  1e:	cf 3f       	cpi	r28, 0xFF	; 255
  20:	d8 07       	cpc	r29, r24
  22:	01 f0       	breq	.+0      	; 0x24 <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream+0x24>
  24:	f8 01       	movw	r30, r16
  26:	c2 30       	cpi	r28, 0x02	; 2
  28:	d1 05       	cpc	r29, r1
  2a:	01 f4       	brne	.+0      	; 0x2c <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream+0x2c>
  2c:	85 81       	ldd	r24, Z+5	; 0x05
  2e:	96 81       	ldd	r25, Z+6	; 0x06
  30:	00 c0       	rjmp	.+0      	; 0x32 <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream+0x32>
  32:	81 85       	ldd	r24, Z+9	; 0x09
{
	errorSubTask = _errorSubTask;
  34:	92 85       	ldd	r25, Z+10	; 0x0a
  36:	61 e0       	ldi	r22, 0x01	; 1
	skipBytesUntilSequenceSubTask = _skipBytesUntilSequenceSubTask;
  38:	20 97       	sbiw	r28, 0x00	; 0
  3a:	01 f0       	breq	.+0      	; 0x3c <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream+0x3c>
	readHttpPathSubTask = _readHttpPathSubTask;
  3c:	60 e0       	ldi	r22, 0x00	; 0
  3e:	0e 94 00 00 	call	0	; 0x0 <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream>
}
  42:	be 01       	movw	r22, r28
  44:	6c 5f       	subi	r22, 0xFC	; 252
  46:	7f 4f       	sbci	r23, 0xFF	; 255
  48:	f8 01       	movw	r30, r16
  4a:	41 85       	ldd	r20, Z+9	; 0x09
  4c:	52 85       	ldd	r21, Z+10	; 0x0a
  4e:	87 81       	ldd	r24, Z+7	; 0x07
  50:	90 85       	ldd	r25, Z+8	; 0x08
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream>
  56:	f8 01       	movw	r30, r16
  58:	87 81       	ldd	r24, Z+7	; 0x07
  5a:	90 85       	ldd	r25, Z+8	; 0x08
  5c:	00 c0       	rjmp	.+0      	; 0x5e <_ZN28DeterminateHttpMethodSubTask14executeSubTaskEP6Stream+0x5e>
  5e:	80 e0       	ldi	r24, 0x00	; 0
  60:	90 e0       	ldi	r25, 0x00	; 0
  62:	df 91       	pop	r29
  64:	cf 91       	pop	r28
  66:	1f 91       	pop	r17
  68:	0f 91       	pop	r16
  6a:	08 95       	ret

Disassembly of section .text._ZN28DeterminateHttpMethodSubTaskC2EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP19ReadHttpPathSubTask:

00000000 <_ZN28DeterminateHttpMethodSubTaskC1EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP19ReadHttpPathSubTask>:

#include "DeterminateHttpMethodSubTask.h"

// =================================================

DeterminateHttpMethodSubTask::DeterminateHttpMethodSubTask( RestServerSubTask* _errorSubTask , SkipBytesUntilSequenceSubTask* _skipBytesUntilSequenceSubTask , ReadHttpPathSubTask* _readHttpPathSubTask ) : dp( PSTR( "DeterminateHttpMethodSubTask" ) )//: p( _p )
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	ec 01       	movw	r28, r24
  12:	6b 01       	movw	r12, r22
  14:	7a 01       	movw	r14, r20
  16:	89 01       	movw	r16, r18
  18:	20 e0       	ldi	r18, 0x00	; 0
  1a:	30 e0       	ldi	r19, 0x00	; 0
  1c:	fc 01       	movw	r30, r24
  1e:	21 93       	st	Z+, r18
  20:	31 93       	st	Z+, r19
  22:	cf 01       	movw	r24, r30
  24:	60 e0       	ldi	r22, 0x00	; 0
  26:	70 e0       	ldi	r23, 0x00	; 0
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN28DeterminateHttpMethodSubTaskC1EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP19ReadHttpPathSubTask>
  2c:	ce 01       	movw	r24, r28
  2e:	0b 96       	adiw	r24, 0x0b	; 11
  30:	0e 94 00 00 	call	0	; 0x0 <_ZN28DeterminateHttpMethodSubTaskC1EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP19ReadHttpPathSubTask>
{
	errorSubTask = _errorSubTask;
  34:	de 82       	std	Y+6, r13	; 0x06
  36:	cd 82       	std	Y+5, r12	; 0x05
	skipBytesUntilSequenceSubTask = _skipBytesUntilSequenceSubTask;
  38:	f8 86       	std	Y+8, r15	; 0x08
  3a:	ef 82       	std	Y+7, r14	; 0x07
	readHttpPathSubTask = _readHttpPathSubTask;
  3c:	1a 87       	std	Y+10, r17	; 0x0a
  3e:	09 87       	std	Y+9, r16	; 0x09
}
  40:	df 91       	pop	r29
  42:	cf 91       	pop	r28
  44:	1f 91       	pop	r17
  46:	0f 91       	pop	r16
  48:	ff 90       	pop	r15
  4a:	ef 90       	pop	r14
  4c:	df 90       	pop	r13
  4e:	cf 90       	pop	r12
  50:	08 95       	ret

ErrorSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000f  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000043  2**0
                  ALLOC
  3 .stab         00000684  00000000  00000000  00000044  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003065  00000000  00000000  000006c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN12ErrorSubTask14getSubTaskNameEv 00000006  00000000  00000000  0000372d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN12ErrorSubTask18resetInternalStateEv 00000002  00000000  00000000  00003733  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN12ErrorSubTask14executeSubTaskEP6Stream 00000006  00000000  00000000  00003735  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .rodata._ZTV12ErrorSubTask 0000000a  00000000  00000000  0000373b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN12ErrorSubTask14getSubTaskNameEv:

00000000 <_ZN12ErrorSubTask14getSubTaskNameEv>:
// =================================================

RestServerSubTask* ErrorSubTask::executeSubTask( Stream* stream )
{
	return NULL;
}
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN12ErrorSubTask18resetInternalStateEv:

00000000 <_ZN12ErrorSubTask18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN12ErrorSubTask14executeSubTaskEP6Stream:

00000000 <_ZN12ErrorSubTask14executeSubTaskEP6Stream>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

HttpChunkedTransferEncodingStream.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000b  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000003f  2**0
                  ALLOC
  3 .stab         000009d8  00000000  00000000  00000040  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003607  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN33HttpChunkedTransferEncodingStream9availableEv 0000001a  00000000  00000000  0000401f  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN33HttpChunkedTransferEncodingStream4readEv 0000001a  00000000  00000000  00004039  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN33HttpChunkedTransferEncodingStream4peekEv 0000001a  00000000  00000000  00004053  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN33HttpChunkedTransferEncodingStream5writeEh 00000032  00000000  00000000  0000406d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN5Print5writeEPKc 00000022  00000000  00000000  0000409f  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN33HttpChunkedTransferEncodingStream5flushEv 00000064  00000000  00000000  000040c1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN33HttpChunkedTransferEncodingStreamC2EPhh 00000026  00000000  00000000  00004125  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN33HttpChunkedTransferEncodingStream11resetStreamEP6Stream 0000000a  00000000  00000000  0000414b  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text._ZN33HttpChunkedTransferEncodingStream25finishChunkedTransmissionEv 00000024  00000000  00000000  00004155  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .rodata._ZTV33HttpChunkedTransferEncodingStream 00000010  00000000  00000000  00004179  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 15 .rodata._ZTV6Stream 00000010  00000000  00000000  00004189  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN33HttpChunkedTransferEncodingStream9availableEv:

00000000 <_ZN33HttpChunkedTransferEncodingStream9availableEv>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	dc 01       	movw	r26, r24
   2:	1c 96       	adiw	r26, 0x0c	; 12
   4:	8d 91       	ld	r24, X+
	flush();
   6:	9c 91       	ld	r25, X
   8:	1d 97       	sbiw	r26, 0x0d	; 13
   a:	dc 01       	movw	r26, r24
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	04 80       	ldd	r0, Z+4	; 0x04

	mainStream->write( "0\r\n\r\n" );
  12:	f5 81       	ldd	r31, Z+5	; 0x05
  14:	e0 2d       	mov	r30, r0
  16:	19 95       	eicall
  18:	08 95       	ret

Disassembly of section .text._ZN33HttpChunkedTransferEncodingStream4readEv:

00000000 <_ZN33HttpChunkedTransferEncodingStream4readEv>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	dc 01       	movw	r26, r24
   2:	1c 96       	adiw	r26, 0x0c	; 12
   4:	8d 91       	ld	r24, X+
	flush();
   6:	9c 91       	ld	r25, X
   8:	1d 97       	sbiw	r26, 0x0d	; 13
   a:	dc 01       	movw	r26, r24
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	06 80       	ldd	r0, Z+6	; 0x06

	mainStream->write( "0\r\n\r\n" );
  12:	f7 81       	ldd	r31, Z+7	; 0x07
  14:	e0 2d       	mov	r30, r0
  16:	19 95       	eicall
  18:	08 95       	ret

Disassembly of section .text._ZN33HttpChunkedTransferEncodingStream4peekEv:

00000000 <_ZN33HttpChunkedTransferEncodingStream4peekEv>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	dc 01       	movw	r26, r24
   2:	1c 96       	adiw	r26, 0x0c	; 12
   4:	8d 91       	ld	r24, X+
	flush();
   6:	9c 91       	ld	r25, X
   8:	1d 97       	sbiw	r26, 0x0d	; 13
   a:	dc 01       	movw	r26, r24
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	00 84       	ldd	r0, Z+8	; 0x08

	mainStream->write( "0\r\n\r\n" );
  12:	f1 85       	ldd	r31, Z+9	; 0x09
  14:	e0 2d       	mov	r30, r0
  16:	19 95       	eicall
  18:	08 95       	ret

Disassembly of section .text._ZN33HttpChunkedTransferEncodingStream5writeEh:

00000000 <_ZN33HttpChunkedTransferEncodingStream5writeEh>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	fc 01       	movw	r30, r24
   2:	81 89       	ldd	r24, Z+17	; 0x11
   4:	a6 85       	ldd	r26, Z+14	; 0x0e
	flush();
   6:	b7 85       	ldd	r27, Z+15	; 0x0f
   8:	a8 0f       	add	r26, r24
   a:	b1 1d       	adc	r27, r1
   c:	6c 93       	st	X, r22
   e:	81 89       	ldd	r24, Z+17	; 0x11
  10:	8f 5f       	subi	r24, 0xFF	; 255

	mainStream->write( "0\r\n\r\n" );
  12:	81 8b       	std	Z+17, r24	; 0x11
  14:	90 89       	ldd	r25, Z+16	; 0x10
  16:	89 17       	cp	r24, r25
  18:	01 f4       	brne	.+0      	; 0x1a <_ZN33HttpChunkedTransferEncodingStream5writeEh+0x1a>
  1a:	a0 81       	ld	r26, Z
  1c:	b1 81       	ldd	r27, Z+1	; 0x01
}
  1e:	1a 96       	adiw	r26, 0x0a	; 10
  20:	2d 91       	ld	r18, X+
  22:	3c 91       	ld	r19, X
  24:	1b 97       	sbiw	r26, 0x0b	; 11
  26:	cf 01       	movw	r24, r30
  28:	f9 01       	movw	r30, r18
  2a:	19 95       	eicall
  2c:	81 e0       	ldi	r24, 0x01	; 1
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	08 95       	ret

Disassembly of section .text._ZN5Print5writeEPKc:

00000000 <_ZN5Print5writeEPKc>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	db 01       	movw	r26, r22
   2:	0d 90       	ld	r0, X+
   4:	00 20       	and	r0, r0
	flush();
   6:	01 f4       	brne	.+0      	; 0x8 <_ZN5Print5writeEPKc+0x8>
   8:	ad 01       	movw	r20, r26
   a:	41 50       	subi	r20, 0x01	; 1
   c:	50 40       	sbci	r21, 0x00	; 0
   e:	46 1b       	sub	r20, r22
  10:	57 0b       	sbc	r21, r23

	mainStream->write( "0\r\n\r\n" );
  12:	dc 01       	movw	r26, r24
  14:	ed 91       	ld	r30, X+
  16:	fc 91       	ld	r31, X
  18:	02 80       	ldd	r0, Z+2	; 0x02
  1a:	f3 81       	ldd	r31, Z+3	; 0x03
  1c:	e0 2d       	mov	r30, r0
}
  1e:	19 95       	eicall
  20:	08 95       	ret

Disassembly of section .text._ZN33HttpChunkedTransferEncodingStream5flushEv:

00000000 <_ZN33HttpChunkedTransferEncodingStream5flushEv>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
	flush();
   6:	89 89       	ldd	r24, Y+17	; 0x11
   8:	88 23       	and	r24, r24
   a:	01 f0       	breq	.+0      	; 0xc <_ZN33HttpChunkedTransferEncodingStream5flushEv+0xc>
   c:	80 31       	cpi	r24, 0x10	; 16
   e:	00 f4       	brcc	.+0      	; 0x10 <_ZN33HttpChunkedTransferEncodingStream5flushEv+0x10>
  10:	8c 85       	ldd	r24, Y+12	; 0x0c

	mainStream->write( "0\r\n\r\n" );
  12:	9d 85       	ldd	r25, Y+13	; 0x0d
  14:	60 e0       	ldi	r22, 0x00	; 0
  16:	70 e0       	ldi	r23, 0x00	; 0
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN33HttpChunkedTransferEncodingStream5flushEv>
  1c:	8c 85       	ldd	r24, Y+12	; 0x0c
}
  1e:	9d 85       	ldd	r25, Y+13	; 0x0d
  20:	69 89       	ldd	r22, Y+17	; 0x11
  22:	40 e1       	ldi	r20, 0x10	; 16
  24:	50 e0       	ldi	r21, 0x00	; 0
  26:	0e 94 00 00 	call	0	; 0x0 <_ZN33HttpChunkedTransferEncodingStream5flushEv>
  2a:	8c 85       	ldd	r24, Y+12	; 0x0c
  2c:	9d 85       	ldd	r25, Y+13	; 0x0d
  2e:	60 e0       	ldi	r22, 0x00	; 0
  30:	70 e0       	ldi	r23, 0x00	; 0
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN33HttpChunkedTransferEncodingStream5flushEv>
  36:	8c 85       	ldd	r24, Y+12	; 0x0c
  38:	9d 85       	ldd	r25, Y+13	; 0x0d
  3a:	dc 01       	movw	r26, r24
  3c:	ed 91       	ld	r30, X+
  3e:	fc 91       	ld	r31, X
  40:	6e 85       	ldd	r22, Y+14	; 0x0e
  42:	7f 85       	ldd	r23, Y+15	; 0x0f
  44:	49 89       	ldd	r20, Y+17	; 0x11
  46:	02 80       	ldd	r0, Z+2	; 0x02
  48:	f3 81       	ldd	r31, Z+3	; 0x03
  4a:	e0 2d       	mov	r30, r0
  4c:	50 e0       	ldi	r21, 0x00	; 0
  4e:	19 95       	eicall
  50:	8c 85       	ldd	r24, Y+12	; 0x0c
  52:	9d 85       	ldd	r25, Y+13	; 0x0d
  54:	60 e0       	ldi	r22, 0x00	; 0
  56:	70 e0       	ldi	r23, 0x00	; 0
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN33HttpChunkedTransferEncodingStream5flushEv>
  5c:	19 8a       	std	Y+17, r1	; 0x11
  5e:	df 91       	pop	r29
  60:	cf 91       	pop	r28
  62:	08 95       	ret

Disassembly of section .text._ZN33HttpChunkedTransferEncodingStreamC2EPhh:

00000000 <_ZN33HttpChunkedTransferEncodingStreamC1EPhh>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	fc 01       	movw	r30, r24
   2:	13 82       	std	Z+3, r1	; 0x03
   4:	12 82       	std	Z+2, r1	; 0x02
	flush();
   6:	88 ee       	ldi	r24, 0xE8	; 232
   8:	93 e0       	ldi	r25, 0x03	; 3
   a:	a0 e0       	ldi	r26, 0x00	; 0
   c:	b0 e0       	ldi	r27, 0x00	; 0
   e:	84 83       	std	Z+4, r24	; 0x04
  10:	95 83       	std	Z+5, r25	; 0x05

	mainStream->write( "0\r\n\r\n" );
  12:	a6 83       	std	Z+6, r26	; 0x06
  14:	b7 83       	std	Z+7, r27	; 0x07
  16:	80 e0       	ldi	r24, 0x00	; 0
  18:	90 e0       	ldi	r25, 0x00	; 0
  1a:	91 83       	std	Z+1, r25	; 0x01
  1c:	80 83       	st	Z, r24
}
  1e:	77 87       	std	Z+15, r23	; 0x0f
  20:	66 87       	std	Z+14, r22	; 0x0e
  22:	40 8b       	std	Z+16, r20	; 0x10
  24:	08 95       	ret

Disassembly of section .text._ZN33HttpChunkedTransferEncodingStream11resetStreamEP6Stream:

00000000 <_ZN33HttpChunkedTransferEncodingStream11resetStreamEP6Stream>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	fc 01       	movw	r30, r24
   2:	75 87       	std	Z+13, r23	; 0x0d
   4:	64 87       	std	Z+12, r22	; 0x0c
	flush();
   6:	11 8a       	std	Z+17, r1	; 0x11
   8:	08 95       	ret

Disassembly of section .text._ZN33HttpChunkedTransferEncodingStream25finishChunkedTransmissionEv:

00000000 <_ZN33HttpChunkedTransferEncodingStream25finishChunkedTransmissionEv>:
}

// =================================================

void HttpChunkedTransferEncodingStream::finishChunkedTransmission()
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
	flush();
   6:	e8 81       	ld	r30, Y
   8:	f9 81       	ldd	r31, Y+1	; 0x01
   a:	02 84       	ldd	r0, Z+10	; 0x0a
   c:	f3 85       	ldd	r31, Z+11	; 0x0b
   e:	e0 2d       	mov	r30, r0
  10:	19 95       	eicall

	mainStream->write( "0\r\n\r\n" );
  12:	8c 85       	ldd	r24, Y+12	; 0x0c
  14:	9d 85       	ldd	r25, Y+13	; 0x0d
  16:	60 e0       	ldi	r22, 0x00	; 0
  18:	70 e0       	ldi	r23, 0x00	; 0
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN33HttpChunkedTransferEncodingStream25finishChunkedTransmissionEv>
}
  1e:	df 91       	pop	r29
  20:	cf 91       	pop	r28
  22:	08 95       	ret

JsonMetadescriptionRestServiceRenderer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000d9  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000010d  2**0
                  ALLOC
  3 .stab         000008dc  00000000  00000000  00000110  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000038f1  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN38JsonMetadescriptionRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream 00000002  00000000  00000000  000042dd  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN38JsonMetadescriptionRestServiceRenderer17renderValueSetterEP6StreamP11RestService 00000002  00000000  00000000  000042df  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN5Print5writeEPKc 00000022  00000000  00000000  000042e1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN38JsonMetadescriptionRestServiceRenderer22renderAfterRestServiceEP6Stream 0000000c  00000000  00000000  00004303  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN38JsonMetadescriptionRestServiceRenderer23renderBeforeRestServiceEP6Stream 0000000c  00000000  00000000  0000430f  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN38JsonMetadescriptionRestServiceRendererC2Ev 0000000c  00000000  00000000  0000431b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh 00000052  00000000  00000000  00004327  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService 000000e4  00000000  00000000  00004379  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .rodata._ZTV38JsonMetadescriptionRestServiceRenderer 0000000e  00000000  00000000  0000445d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 14 .rodata._ZTV19RestServiceRenderer 0000000e  00000000  00000000  0000446b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN38JsonMetadescriptionRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream:

00000000 <_ZN38JsonMetadescriptionRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream>:
}

// =================================================

void JsonMetadescriptionRestServiceRenderer::renderGetValue( Stream* stream , RestService* restService)
{
   0:	08 95       	ret

Disassembly of section .text._ZN38JsonMetadescriptionRestServiceRenderer17renderValueSetterEP6StreamP11RestService:

00000000 <_ZN38JsonMetadescriptionRestServiceRenderer17renderValueSetterEP6StreamP11RestService>:
   0:	08 95       	ret

Disassembly of section .text._ZN5Print5writeEPKc:

00000000 <_ZN5Print5writeEPKc>:
   0:	db 01       	movw	r26, r22
   2:	0d 90       	ld	r0, X+
   4:	00 20       	and	r0, r0
   6:	01 f4       	brne	.+0      	; 0x8 <_ZN5Print5writeEPKc+0x8>
   8:	ad 01       	movw	r20, r26
   a:	41 50       	subi	r20, 0x01	; 1
   c:	50 40       	sbci	r21, 0x00	; 0
   e:	46 1b       	sub	r20, r22
  10:	57 0b       	sbc	r21, r23
	stream->write( "\"id\":\"" );
  12:	dc 01       	movw	r26, r24
  14:	ed 91       	ld	r30, X+
  16:	fc 91       	ld	r31, X
  18:	02 80       	ldd	r0, Z+2	; 0x02
  1a:	f3 81       	ldd	r31, Z+3	; 0x03
	stream->print( restService->id );
  1c:	e0 2d       	mov	r30, r0
  1e:	19 95       	eicall
  20:	08 95       	ret

Disassembly of section .text._ZN38JsonMetadescriptionRestServiceRenderer22renderAfterRestServiceEP6Stream:

00000000 <_ZN38JsonMetadescriptionRestServiceRenderer22renderAfterRestServiceEP6Stream>:
}

// =================================================

void JsonMetadescriptionRestServiceRenderer::renderGetValue( Stream* stream , RestService* restService)
{
   0:	cb 01       	movw	r24, r22
   2:	60 e0       	ldi	r22, 0x00	; 0
   4:	70 e0       	ldi	r23, 0x00	; 0
   6:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer22renderAfterRestServiceEP6Stream>
   a:	08 95       	ret

Disassembly of section .text._ZN38JsonMetadescriptionRestServiceRenderer23renderBeforeRestServiceEP6Stream:

00000000 <_ZN38JsonMetadescriptionRestServiceRenderer23renderBeforeRestServiceEP6Stream>:
   0:	cb 01       	movw	r24, r22
   2:	60 e0       	ldi	r22, 0x00	; 0
   4:	70 e0       	ldi	r23, 0x00	; 0
   6:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer23renderBeforeRestServiceEP6Stream>
   a:	08 95       	ret

Disassembly of section .text._ZN38JsonMetadescriptionRestServiceRendererC2Ev:

00000000 <_ZN38JsonMetadescriptionRestServiceRendererC1Ev>:
   0:	20 e0       	ldi	r18, 0x00	; 0
   2:	30 e0       	ldi	r19, 0x00	; 0
   4:	fc 01       	movw	r30, r24
   6:	31 83       	std	Z+1, r19	; 0x01
   8:	20 83       	st	Z, r18
   a:	08 95       	ret

Disassembly of section .text._ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh:

00000000 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh>:
   0:	cb 01       	movw	r24, r22
   2:	44 23       	and	r20, r20
   4:	01 f4       	brne	.+0      	; 0x6 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x6>
   6:	60 e0       	ldi	r22, 0x00	; 0
   8:	70 e0       	ldi	r23, 0x00	; 0
   a:	00 c0       	rjmp	.+0      	; 0xc <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0xc>
   c:	41 30       	cpi	r20, 0x01	; 1
   e:	01 f4       	brne	.+0      	; 0x10 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x10>
  10:	60 e0       	ldi	r22, 0x00	; 0
	stream->write( "\"id\":\"" );
  12:	70 e0       	ldi	r23, 0x00	; 0
  14:	00 c0       	rjmp	.+0      	; 0x16 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x16>
  16:	42 30       	cpi	r20, 0x02	; 2
  18:	01 f4       	brne	.+0      	; 0x1a <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x1a>
  1a:	60 e0       	ldi	r22, 0x00	; 0
	stream->print( restService->id );
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	00 c0       	rjmp	.+0      	; 0x20 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x20>
  20:	43 30       	cpi	r20, 0x03	; 3
  22:	01 f4       	brne	.+0      	; 0x24 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x24>
  24:	60 e0       	ldi	r22, 0x00	; 0
  26:	70 e0       	ldi	r23, 0x00	; 0
  28:	00 c0       	rjmp	.+0      	; 0x2a <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x2a>
  2a:	44 30       	cpi	r20, 0x04	; 4
	stream->write( "\"," );
  2c:	01 f4       	brne	.+0      	; 0x2e <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x2e>
  2e:	60 e0       	ldi	r22, 0x00	; 0
  30:	70 e0       	ldi	r23, 0x00	; 0
  32:	00 c0       	rjmp	.+0      	; 0x34 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x34>
  34:	45 30       	cpi	r20, 0x05	; 5

	stream->write( "\r\n\"name\":\"" );
  36:	01 f4       	brne	.+0      	; 0x38 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x38>
  38:	60 e0       	ldi	r22, 0x00	; 0
  3a:	70 e0       	ldi	r23, 0x00	; 0
  3c:	00 c0       	rjmp	.+0      	; 0x3e <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x3e>
  3e:	46 30       	cpi	r20, 0x06	; 6
	stream->write( restService->name );
  40:	01 f4       	brne	.+0      	; 0x42 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x42>
  42:	60 e0       	ldi	r22, 0x00	; 0
  44:	70 e0       	ldi	r23, 0x00	; 0
  46:	00 c0       	rjmp	.+0      	; 0x48 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh+0x48>
  48:	60 e0       	ldi	r22, 0x00	; 0
  4a:	70 e0       	ldi	r23, 0x00	; 0
	stream->write( "\"," );
  4c:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer36renderMetadescriptionTypeDescriptionEP6Streamh>
  50:	08 95       	ret

Disassembly of section .text._ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService:

00000000 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>:
}

// =================================================

void JsonMetadescriptionRestServiceRenderer::renderGetValue( Stream* stream , RestService* restService)
{
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	7c 01       	movw	r14, r24
   e:	eb 01       	movw	r28, r22
  10:	8a 01       	movw	r16, r20
	stream->write( "\"id\":\"" );
  12:	cb 01       	movw	r24, r22
  14:	60 e0       	ldi	r22, 0x00	; 0
  16:	70 e0       	ldi	r23, 0x00	; 0
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
	stream->print( restService->id );
  1c:	ce 01       	movw	r24, r28
  1e:	d8 01       	movw	r26, r16
  20:	12 96       	adiw	r26, 0x02	; 2
  22:	6c 91       	ld	r22, X
  24:	4a e0       	ldi	r20, 0x0A	; 10
  26:	50 e0       	ldi	r21, 0x00	; 0
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
	stream->write( "\"," );
  2c:	ce 01       	movw	r24, r28
  2e:	60 e0       	ldi	r22, 0x00	; 0
  30:	70 e0       	ldi	r23, 0x00	; 0
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>

	stream->write( "\r\n\"name\":\"" );
  36:	ce 01       	movw	r24, r28
  38:	60 e0       	ldi	r22, 0x00	; 0
  3a:	70 e0       	ldi	r23, 0x00	; 0
  3c:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
	stream->write( restService->name );
  40:	f8 01       	movw	r30, r16
  42:	63 81       	ldd	r22, Z+3	; 0x03
  44:	74 81       	ldd	r23, Z+4	; 0x04
  46:	ce 01       	movw	r24, r28
  48:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
	stream->write( "\"," );
  4c:	ce 01       	movw	r24, r28
  4e:	60 e0       	ldi	r22, 0x00	; 0
  50:	70 e0       	ldi	r23, 0x00	; 0
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>

	stream->write( "\r\n\"type\":\"" );
  56:	ce 01       	movw	r24, r28
  58:	60 e0       	ldi	r22, 0x00	; 0
  5a:	70 e0       	ldi	r23, 0x00	; 0
  5c:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
	renderMetadescriptionTypeDescription( stream , restService->type );
  60:	c7 01       	movw	r24, r14
  62:	be 01       	movw	r22, r28
  64:	d8 01       	movw	r26, r16
  66:	15 96       	adiw	r26, 0x05	; 5
  68:	4c 91       	ld	r20, X
  6a:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
	stream->write( "\"" );
  6e:	ce 01       	movw	r24, r28
  70:	60 e0       	ldi	r22, 0x00	; 0
  72:	70 e0       	ldi	r23, 0x00	; 0
  74:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>

	if( restService->type == REST_SERVICE_TYPE_UPDATEABLE_INT )
  78:	f8 01       	movw	r30, r16
  7a:	85 81       	ldd	r24, Z+5	; 0x05
  7c:	86 30       	cpi	r24, 0x06	; 6
  7e:	01 f4       	brne	.+0      	; 0x80 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService+0x80>
	{
		stream->write( "\r\n\"minValue\":\"" );
  80:	ce 01       	movw	r24, r28
  82:	60 e0       	ldi	r22, 0x00	; 0
  84:	70 e0       	ldi	r23, 0x00	; 0
  86:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
		stream->print( restService->getIntMinValue() );
  8a:	d8 01       	movw	r26, r16
  8c:	ed 91       	ld	r30, X+
  8e:	fc 91       	ld	r31, X
  90:	04 84       	ldd	r0, Z+12	; 0x0c
  92:	f5 85       	ldd	r31, Z+13	; 0x0d
  94:	e0 2d       	mov	r30, r0
  96:	c8 01       	movw	r24, r16
  98:	19 95       	eicall
  9a:	bc 01       	movw	r22, r24
  9c:	ce 01       	movw	r24, r28
  9e:	4a e0       	ldi	r20, 0x0A	; 10
  a0:	50 e0       	ldi	r21, 0x00	; 0
  a2:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
		stream->write( "\"," );
  a6:	ce 01       	movw	r24, r28
  a8:	60 e0       	ldi	r22, 0x00	; 0
  aa:	70 e0       	ldi	r23, 0x00	; 0
  ac:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>

		stream->write( "\r\n\"maxValue\":\"" );
  b0:	ce 01       	movw	r24, r28
  b2:	60 e0       	ldi	r22, 0x00	; 0
  b4:	70 e0       	ldi	r23, 0x00	; 0
  b6:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
		stream->print( restService->getIntMaxValue() );
  ba:	d8 01       	movw	r26, r16
  bc:	ed 91       	ld	r30, X+
  be:	fc 91       	ld	r31, X
  c0:	06 84       	ldd	r0, Z+14	; 0x0e
  c2:	f7 85       	ldd	r31, Z+15	; 0x0f
  c4:	e0 2d       	mov	r30, r0
  c6:	c8 01       	movw	r24, r16
  c8:	19 95       	eicall
  ca:	bc 01       	movw	r22, r24
  cc:	ce 01       	movw	r24, r28
  ce:	4a e0       	ldi	r20, 0x0A	; 10
  d0:	50 e0       	ldi	r21, 0x00	; 0
  d2:	0e 94 00 00 	call	0	; 0x0 <_ZN38JsonMetadescriptionRestServiceRenderer14renderGetValueEP6StreamP11RestService>
	}
}
  d6:	df 91       	pop	r29
  d8:	cf 91       	pop	r28
  da:	1f 91       	pop	r17
  dc:	0f 91       	pop	r16
  de:	ff 90       	pop	r15
  e0:	ef 90       	pop	r14
  e2:	08 95       	ret

JsonPageRenderer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000069  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000009d  2**0
                  ALLOC
  3 .stab         00000894  00000000  00000000  000000a0  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000037a0  00000000  00000000  00000934  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN16JsonPageRenderer23renderBeforeRestServiceEP6Stream 00000002  00000000  00000000  000040d4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN16JsonPageRenderer22renderAfterRestServiceEP6Stream 00000002  00000000  00000000  000040d6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN5Print5writeEPKc 00000022  00000000  00000000  000040d8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN16JsonPageRenderer16renderPageBottomEP6Stream 0000000c  00000000  00000000  000040fa  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN16JsonPageRenderer13renderPageTopEP6Stream 0000000c  00000000  00000000  00004106  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN16JsonPageRenderer16renderHttpHeaderEP6Stream 00000024  00000000  00000000  00004112  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN16JsonPageRendererC2EP15TimeMeasurement 00000010  00000000  00000000  00004136  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .rodata._ZTV16JsonPageRenderer 0000000e  00000000  00000000  00004146  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .rodata._ZTV12PageRenderer 0000000e  00000000  00000000  00004154  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN16JsonPageRenderer23renderBeforeRestServiceEP6Stream:

00000000 <_ZN16JsonPageRenderer23renderBeforeRestServiceEP6Stream>:

#include "JsonPageRenderer.h"

// =================================================

JsonPageRenderer::JsonPageRenderer( TimeMeasurement* _pageRendererTimeMeasurement )
   0:	08 95       	ret

Disassembly of section .text._ZN16JsonPageRenderer22renderAfterRestServiceEP6Stream:

00000000 <_ZN16JsonPageRenderer22renderAfterRestServiceEP6Stream>:
   0:	08 95       	ret

Disassembly of section .text._ZN5Print5writeEPKc:

00000000 <_ZN5Print5writeEPKc>:
   0:	db 01       	movw	r26, r22
   2:	0d 90       	ld	r0, X+
   4:	00 20       	and	r0, r0
   6:	01 f4       	brne	.+0      	; 0x8 <_ZN5Print5writeEPKc+0x8>
   8:	ad 01       	movw	r20, r26
{
	pageRendererTimeMeasurement = _pageRendererTimeMeasurement;
   a:	41 50       	subi	r20, 0x01	; 1
   c:	50 40       	sbci	r21, 0x00	; 0
}
   e:	46 1b       	sub	r20, r22
  10:	57 0b       	sbc	r21, r23
  12:	dc 01       	movw	r26, r24
  14:	ed 91       	ld	r30, X+
  16:	fc 91       	ld	r31, X
  18:	02 80       	ldd	r0, Z+2	; 0x02
  1a:	f3 81       	ldd	r31, Z+3	; 0x03
  1c:	e0 2d       	mov	r30, r0
  1e:	19 95       	eicall
  20:	08 95       	ret

Disassembly of section .text._ZN16JsonPageRenderer16renderPageBottomEP6Stream:

00000000 <_ZN16JsonPageRenderer16renderPageBottomEP6Stream>:

#include "JsonPageRenderer.h"

// =================================================

JsonPageRenderer::JsonPageRenderer( TimeMeasurement* _pageRendererTimeMeasurement )
   0:	cb 01       	movw	r24, r22
   2:	60 e0       	ldi	r22, 0x00	; 0
   4:	70 e0       	ldi	r23, 0x00	; 0
   6:	0e 94 00 00 	call	0	; 0x0 <_ZN16JsonPageRenderer16renderPageBottomEP6Stream>
{
	pageRendererTimeMeasurement = _pageRendererTimeMeasurement;
   a:	08 95       	ret

Disassembly of section .text._ZN16JsonPageRenderer13renderPageTopEP6Stream:

00000000 <_ZN16JsonPageRenderer13renderPageTopEP6Stream>:

#include "JsonPageRenderer.h"

// =================================================

JsonPageRenderer::JsonPageRenderer( TimeMeasurement* _pageRendererTimeMeasurement )
   0:	cb 01       	movw	r24, r22
   2:	60 e0       	ldi	r22, 0x00	; 0
   4:	70 e0       	ldi	r23, 0x00	; 0
   6:	0e 94 00 00 	call	0	; 0x0 <_ZN16JsonPageRenderer13renderPageTopEP6Stream>
{
	pageRendererTimeMeasurement = _pageRendererTimeMeasurement;
   a:	08 95       	ret

Disassembly of section .text._ZN16JsonPageRenderer16renderHttpHeaderEP6Stream:

00000000 <_ZN16JsonPageRenderer16renderHttpHeaderEP6Stream>:

#include "JsonPageRenderer.h"

// =================================================

JsonPageRenderer::JsonPageRenderer( TimeMeasurement* _pageRendererTimeMeasurement )
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	eb 01       	movw	r28, r22
   6:	fc 01       	movw	r30, r24
   8:	82 81       	ldd	r24, Z+2	; 0x02
{
	pageRendererTimeMeasurement = _pageRendererTimeMeasurement;
   a:	93 81       	ldd	r25, Z+3	; 0x03
   c:	00 97       	sbiw	r24, 0x00	; 0
}
   e:	01 f0       	breq	.+0      	; 0x10 <_ZN16JsonPageRenderer16renderHttpHeaderEP6Stream+0x10>
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN16JsonPageRenderer16renderHttpHeaderEP6Stream>
  14:	ce 01       	movw	r24, r28
  16:	60 e0       	ldi	r22, 0x00	; 0
  18:	70 e0       	ldi	r23, 0x00	; 0
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN16JsonPageRenderer16renderHttpHeaderEP6Stream>
  1e:	df 91       	pop	r29
  20:	cf 91       	pop	r28
  22:	08 95       	ret

Disassembly of section .text._ZN16JsonPageRendererC2EP15TimeMeasurement:

00000000 <_ZN16JsonPageRendererC1EP15TimeMeasurement>:

#include "JsonPageRenderer.h"

// =================================================

JsonPageRenderer::JsonPageRenderer( TimeMeasurement* _pageRendererTimeMeasurement )
   0:	fc 01       	movw	r30, r24
   2:	80 e0       	ldi	r24, 0x00	; 0
   4:	90 e0       	ldi	r25, 0x00	; 0
   6:	91 83       	std	Z+1, r25	; 0x01
   8:	80 83       	st	Z, r24
{
	pageRendererTimeMeasurement = _pageRendererTimeMeasurement;
   a:	73 83       	std	Z+3, r23	; 0x03
   c:	62 83       	std	Z+2, r22	; 0x02
}
   e:	08 95       	ret

JsonRestServiceRenderer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000044  2**0
                  ALLOC
  3 .stab         00000750  00000000  00000000  00000044  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      0000368b  00000000  00000000  00000794  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN23JsonRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream 00000002  00000000  00000000  00003e1f  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN23JsonRestServiceRenderer17renderValueSetterEP6StreamP11RestService 00000002  00000000  00000000  00003e21  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN5Print5writeEPKc 00000022  00000000  00000000  00003e23  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN23JsonRestServiceRenderer22renderAfterRestServiceEP6Stream 0000000c  00000000  00000000  00003e45  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN23JsonRestServiceRenderer14renderGetValueEP6StreamP11RestService 00000062  00000000  00000000  00003e51  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN23JsonRestServiceRenderer23renderBeforeRestServiceEP6Stream 0000000c  00000000  00000000  00003eb3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN23JsonRestServiceRendererC2Ev 0000000c  00000000  00000000  00003ebf  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .rodata._ZTV23JsonRestServiceRenderer 0000000e  00000000  00000000  00003ecb  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .rodata._ZTV19RestServiceRenderer 0000000e  00000000  00000000  00003ed9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN23JsonRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream:

00000000 <_ZN23JsonRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream>:

#include "JsonRestServiceRenderer.h"

// =================================================

JsonRestServiceRenderer::JsonRestServiceRenderer()
   0:	08 95       	ret

Disassembly of section .text._ZN23JsonRestServiceRenderer17renderValueSetterEP6StreamP11RestService:

00000000 <_ZN23JsonRestServiceRenderer17renderValueSetterEP6StreamP11RestService>:
   0:	08 95       	ret

Disassembly of section .text._ZN5Print5writeEPKc:

00000000 <_ZN5Print5writeEPKc>:
   0:	db 01       	movw	r26, r22
   2:	0d 90       	ld	r0, X+
   4:	00 20       	and	r0, r0
   6:	01 f4       	brne	.+0      	; 0x8 <_ZN5Print5writeEPKc+0x8>
   8:	ad 01       	movw	r20, r26
{

}
   a:	41 50       	subi	r20, 0x01	; 1
   c:	50 40       	sbci	r21, 0x00	; 0
   e:	46 1b       	sub	r20, r22
  10:	57 0b       	sbc	r21, r23
  12:	dc 01       	movw	r26, r24
  14:	ed 91       	ld	r30, X+
  16:	fc 91       	ld	r31, X
  18:	02 80       	ldd	r0, Z+2	; 0x02
  1a:	f3 81       	ldd	r31, Z+3	; 0x03
  1c:	e0 2d       	mov	r30, r0
  1e:	19 95       	eicall
  20:	08 95       	ret

Disassembly of section .text._ZN23JsonRestServiceRenderer22renderAfterRestServiceEP6Stream:

00000000 <_ZN23JsonRestServiceRenderer22renderAfterRestServiceEP6Stream>:

#include "JsonRestServiceRenderer.h"

// =================================================

JsonRestServiceRenderer::JsonRestServiceRenderer()
   0:	cb 01       	movw	r24, r22
   2:	60 e0       	ldi	r22, 0x00	; 0
   4:	70 e0       	ldi	r23, 0x00	; 0
   6:	0e 94 00 00 	call	0	; 0x0 <_ZN23JsonRestServiceRenderer22renderAfterRestServiceEP6Stream>
{

}
   a:	08 95       	ret

Disassembly of section .text._ZN23JsonRestServiceRenderer14renderGetValueEP6StreamP11RestService:

00000000 <_ZN23JsonRestServiceRenderer14renderGetValueEP6StreamP11RestService>:

#include "JsonRestServiceRenderer.h"

// =================================================

JsonRestServiceRenderer::JsonRestServiceRenderer()
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
{

}
   a:	df 93       	push	r29
   c:	eb 01       	movw	r28, r22
   e:	8a 01       	movw	r16, r20
  10:	80 e0       	ldi	r24, 0x00	; 0
  12:	e8 2e       	mov	r14, r24
  14:	80 e0       	ldi	r24, 0x00	; 0
  16:	f8 2e       	mov	r15, r24
  18:	cb 01       	movw	r24, r22
  1a:	b7 01       	movw	r22, r14
  1c:	0e 94 00 00 	call	0	; 0x0 <_ZN23JsonRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  20:	d8 01       	movw	r26, r16
  22:	13 96       	adiw	r26, 0x03	; 3
  24:	6d 91       	ld	r22, X+
  26:	7c 91       	ld	r23, X
  28:	14 97       	sbiw	r26, 0x04	; 4
  2a:	ce 01       	movw	r24, r28
  2c:	0e 94 00 00 	call	0	; 0x0 <_ZN23JsonRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  30:	ce 01       	movw	r24, r28
  32:	60 e0       	ldi	r22, 0x00	; 0
  34:	70 e0       	ldi	r23, 0x00	; 0
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN23JsonRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  3a:	d8 01       	movw	r26, r16
  3c:	ed 91       	ld	r30, X+
  3e:	fc 91       	ld	r31, X
  40:	01 90       	ld	r0, Z+
  42:	f0 81       	ld	r31, Z
  44:	e0 2d       	mov	r30, r0
  46:	c8 01       	movw	r24, r16
  48:	be 01       	movw	r22, r28
  4a:	19 95       	eicall
  4c:	ce 01       	movw	r24, r28
  4e:	b7 01       	movw	r22, r14
  50:	0e 94 00 00 	call	0	; 0x0 <_ZN23JsonRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  54:	df 91       	pop	r29
  56:	cf 91       	pop	r28
  58:	1f 91       	pop	r17
  5a:	0f 91       	pop	r16
  5c:	ff 90       	pop	r15
  5e:	ef 90       	pop	r14
  60:	08 95       	ret

Disassembly of section .text._ZN23JsonRestServiceRenderer23renderBeforeRestServiceEP6Stream:

00000000 <_ZN23JsonRestServiceRenderer23renderBeforeRestServiceEP6Stream>:

#include "JsonRestServiceRenderer.h"

// =================================================

JsonRestServiceRenderer::JsonRestServiceRenderer()
   0:	cb 01       	movw	r24, r22
   2:	60 e0       	ldi	r22, 0x00	; 0
   4:	70 e0       	ldi	r23, 0x00	; 0
   6:	0e 94 00 00 	call	0	; 0x0 <_ZN23JsonRestServiceRenderer23renderBeforeRestServiceEP6Stream>
{

}
   a:	08 95       	ret

Disassembly of section .text._ZN23JsonRestServiceRendererC2Ev:

00000000 <_ZN23JsonRestServiceRendererC1Ev>:

#include "JsonRestServiceRenderer.h"

// =================================================

JsonRestServiceRenderer::JsonRestServiceRenderer()
   0:	20 e0       	ldi	r18, 0x00	; 0
   2:	30 e0       	ldi	r19, 0x00	; 0
   4:	fc 01       	movw	r30, r24
   6:	31 83       	std	Z+1, r19	; 0x01
   8:	20 83       	st	Z, r18
{

}
   a:	08 95       	ret

NameValueRestService.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000690  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00002faf  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN20NameValueRestService18writeValueToStreamEP6Stream 00000036  00000000  00000000  00003673  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN20NameValueRestServiceC2EhPKcS1_ 00000028  00000000  00000000  000036a9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .rodata._ZTV20NameValueRestService 00000014  00000000  00000000  000036d1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN20NameValueRestService18writeValueToStreamEP6Stream:

00000000 <_ZN20NameValueRestService18writeValueToStreamEP6Stream>:

#include "NameValueRestService.h"

// =================================================

NameValueRestService::NameValueRestService( unsigned char _id , const char* _name , const char* _value ) : RestService( _id , _name , REST_SERVICE_TYPE_READ_ONLY ) //, p(_p)
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	fc 01       	movw	r30, r24
   6:	db 01       	movw	r26, r22
   8:	66 81       	ldd	r22, Z+6	; 0x06
   a:	77 81       	ldd	r23, Z+7	; 0x07
   c:	fb 01       	movw	r30, r22
   e:	ef 01       	movw	r28, r30
  10:	09 90       	ld	r0, Y+
  12:	00 20       	and	r0, r0
  14:	01 f4       	brne	.+0      	; 0x16 <_ZN20NameValueRestService18writeValueToStreamEP6Stream+0x16>
  16:	ae 01       	movw	r20, r28
  18:	41 50       	subi	r20, 0x01	; 1
{
	value = _value;
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	4e 1b       	sub	r20, r30
}
  1e:	5f 0b       	sbc	r21, r31
  20:	ed 91       	ld	r30, X+
  22:	fc 91       	ld	r31, X
  24:	11 97       	sbiw	r26, 0x01	; 1
  26:	02 80       	ldd	r0, Z+2	; 0x02
  28:	f3 81       	ldd	r31, Z+3	; 0x03
  2a:	e0 2d       	mov	r30, r0
  2c:	cd 01       	movw	r24, r26
  2e:	19 95       	eicall
  30:	df 91       	pop	r29
  32:	cf 91       	pop	r28
  34:	08 95       	ret

Disassembly of section .text._ZN20NameValueRestServiceC2EhPKcS1_:

00000000 <_ZN20NameValueRestServiceC1EhPKcS1_>:

#include "NameValueRestService.h"

// =================================================

NameValueRestService::NameValueRestService( unsigned char _id , const char* _name , const char* _value ) : RestService( _id , _name , REST_SERVICE_TYPE_READ_ONLY ) //, p(_p)
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	89 01       	movw	r16, r18
   c:	20 e0       	ldi	r18, 0x00	; 0
   e:	0e 94 00 00 	call	0	; 0x0 <_ZN20NameValueRestServiceC1EhPKcS1_>
  12:	80 e0       	ldi	r24, 0x00	; 0
  14:	90 e0       	ldi	r25, 0x00	; 0
  16:	99 83       	std	Y+1, r25	; 0x01
  18:	88 83       	st	Y, r24
{
	value = _value;
  1a:	1f 83       	std	Y+7, r17	; 0x07
  1c:	0e 83       	std	Y+6, r16	; 0x06
}
  1e:	df 91       	pop	r29
  20:	cf 91       	pop	r28
  22:	1f 91       	pop	r17
  24:	0f 91       	pop	r16
  26:	08 95       	ret

ReadHttpParameterNameSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001f  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000053  2**0
                  ALLOC
  3 .stab         00000ba0  00000000  00000000  00000054  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003e61  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN28ReadHttpParameterNameSubTask14getSubTaskNameEv 00000006  00000000  00000000  00004a55  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream 0000025e  00000000  00000000  00004a5b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN28ReadHttpParameterNameSubTask18resetInternalStateEv 00000064  00000000  00000000  00004cb9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN28ReadHttpParameterNameSubTaskC2EP17RestServerSubTaskjjPP18ServiceDescriptionhPbP29ReadHttpParameterValueSubTask 00000074  00000000  00000000  00004d1d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN28ReadHttpParameterNameSubTask7setWorkEP17RestServerSubTask 00000008  00000000  00000000  00004d91  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .rodata._ZTV28ReadHttpParameterNameSubTask 0000000a  00000000  00000000  00004d99  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 11 .rodata._ZTV17RestServerSubTask 0000000a  00000000  00000000  00004da3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .progmem.data 0000007b  00000000  00000000  00004dad  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN28ReadHttpParameterNameSubTask14getSubTaskNameEv:

00000000 <_ZN28ReadHttpParameterNameSubTask14getSubTaskNameEv>:

// =================================================

void ReadHttpParameterNameSubTask::setWork( RestServerSubTask* _subTaskAfterParsingAllParameters )
{
	subTaskAfterParsingAllParameters = _subTaskAfterParsingAllParameters;
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream:

00000000 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream>:
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
}
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	0f 93       	push	r16
  1a:	1f 93       	push	r17
  1c:	cf 93       	push	r28
  1e:	df 93       	push	r29
  20:	ec 01       	movw	r28, r24
  22:	5b 01       	movw	r10, r22
  24:	f2 e0       	ldi	r31, 0x02	; 2
  26:	8f 2e       	mov	r8, r31
  28:	91 2c       	mov	r9, r1
  2a:	88 0e       	add	r8, r24
  2c:	99 1e       	adc	r9, r25
  2e:	a0 e0       	ldi	r26, 0x00	; 0
  30:	6a 2e       	mov	r6, r26
  32:	a0 e0       	ldi	r26, 0x00	; 0
  34:	7a 2e       	mov	r7, r26
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	4b 2e       	mov	r4, r27
  3a:	b0 e0       	ldi	r27, 0x00	; 0
  3c:	5b 2e       	mov	r5, r27
  3e:	00 c0       	rjmp	.+0      	; 0x40 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x40>
  40:	d5 01       	movw	r26, r10
  42:	ed 91       	ld	r30, X+
  44:	fc 91       	ld	r31, X
  46:	06 80       	ldd	r0, Z+6	; 0x06
  48:	f7 81       	ldd	r31, Z+7	; 0x07
  4a:	e0 2d       	mov	r30, r0
  4c:	c5 01       	movw	r24, r10
  4e:	19 95       	eicall
  50:	7c 01       	movw	r14, r24
  52:	bf ef       	ldi	r27, 0xFF	; 255
  54:	8f 3f       	cpi	r24, 0xFF	; 255
  56:	9b 07       	cpc	r25, r27
  58:	01 f4       	brne	.+0      	; 0x5a <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x5a>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x5c>
  5c:	88 8d       	ldd	r24, Y+24	; 0x18
  5e:	99 8d       	ldd	r25, Y+25	; 0x19
  60:	01 96       	adiw	r24, 0x01	; 1
  62:	99 8f       	std	Y+25, r25	; 0x19
  64:	88 8f       	std	Y+24, r24	; 0x18
  66:	e0 e2       	ldi	r30, 0x20	; 32
  68:	ee 16       	cp	r14, r30
  6a:	f1 04       	cpc	r15, r1
  6c:	01 f4       	brne	.+0      	; 0x6e <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x6e>
  6e:	8f 81       	ldd	r24, Y+7	; 0x07
  70:	98 85       	ldd	r25, Y+8	; 0x08
  72:	00 c0       	rjmp	.+0      	; 0x74 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x74>
  74:	fd e3       	ldi	r31, 0x3D	; 61
  76:	ef 16       	cp	r14, r31
  78:	f1 04       	cpc	r15, r1
  7a:	01 f0       	breq	.+0      	; 0x7c <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x7c>
  7c:	00 c0       	rjmp	.+0      	; 0x7e <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x7e>
  7e:	69 89       	ldd	r22, Y+17	; 0x11
  80:	70 e0       	ldi	r23, 0x00	; 0
  82:	20 e0       	ldi	r18, 0x00	; 0
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	00 c0       	rjmp	.+0      	; 0x88 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x88>
  88:	ea 89       	ldd	r30, Y+18	; 0x12
  8a:	fb 89       	ldd	r31, Y+19	; 0x13
  8c:	e2 0f       	add	r30, r18
  8e:	f3 1f       	adc	r31, r19
  90:	80 81       	ld	r24, Z
  92:	88 23       	and	r24, r24
  94:	01 f0       	breq	.+0      	; 0x96 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x96>
  96:	c9 01       	movw	r24, r18
  98:	88 0f       	add	r24, r24
  9a:	99 1f       	adc	r25, r25
  9c:	ef 85       	ldd	r30, Y+15	; 0x0f
  9e:	f8 89       	ldd	r31, Y+16	; 0x10
  a0:	e8 0f       	add	r30, r24
  a2:	f9 1f       	adc	r31, r25
  a4:	40 81       	ld	r20, Z
  a6:	51 81       	ldd	r21, Z+1	; 0x01
  a8:	da 01       	movw	r26, r20
  aa:	ed 91       	ld	r30, X+
  ac:	fc 91       	ld	r31, X
  ae:	11 97       	sbiw	r26, 0x01	; 1
  b0:	8a 8d       	ldd	r24, Y+26	; 0x1a
  b2:	03 80       	ldd	r0, Z+3	; 0x03
  b4:	f4 81       	ldd	r31, Z+4	; 0x04
  b6:	e0 2d       	mov	r30, r0
  b8:	e8 0f       	add	r30, r24
  ba:	f1 1d       	adc	r31, r1
  bc:	80 81       	ld	r24, Z
  be:	88 23       	and	r24, r24
  c0:	01 f0       	breq	.+0      	; 0xc2 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0xc2>
  c2:	2f 5f       	subi	r18, 0xFF	; 255
  c4:	3f 4f       	sbci	r19, 0xFF	; 255
  c6:	26 17       	cp	r18, r22
  c8:	37 07       	cpc	r19, r23
  ca:	04 f0       	brlt	.+0      	; 0xcc <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0xcc>
  cc:	40 e0       	ldi	r20, 0x00	; 0
  ce:	50 e0       	ldi	r21, 0x00	; 0
  d0:	20 e0       	ldi	r18, 0x00	; 0
  d2:	30 e0       	ldi	r19, 0x00	; 0
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0xd6>
  d6:	aa 89       	ldd	r26, Y+18	; 0x12
  d8:	bb 89       	ldd	r27, Y+19	; 0x13
  da:	a2 0f       	add	r26, r18
  dc:	b3 1f       	adc	r27, r19
  de:	c9 01       	movw	r24, r18
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	ef 85       	ldd	r30, Y+15	; 0x0f
  e6:	f8 89       	ldd	r31, Y+16	; 0x10
  e8:	e8 0f       	add	r30, r24
  ea:	f9 1f       	adc	r31, r25
  ec:	01 90       	ld	r0, Z+
  ee:	f0 81       	ld	r31, Z
  f0:	e0 2d       	mov	r30, r0
  f2:	01 90       	ld	r0, Z+
  f4:	f0 81       	ld	r31, Z
  f6:	e0 2d       	mov	r30, r0
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	95 81       	ldd	r25, Z+5	; 0x05
  fc:	99 23       	and	r25, r25
  fe:	01 f4       	brne	.+0      	; 0x100 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x100>
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	8c 93       	st	X, r24
 104:	2f 5f       	subi	r18, 0xFF	; 255
 106:	3f 4f       	sbci	r19, 0xFF	; 255
 108:	89 89       	ldd	r24, Y+17	; 0x11
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	28 17       	cp	r18, r24
 10e:	39 07       	cpc	r19, r25
 110:	04 f0       	brlt	.+0      	; 0x112 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x112>
 112:	6f 81       	ldd	r22, Y+7	; 0x07
 114:	78 85       	ldd	r23, Y+8	; 0x08
 116:	89 85       	ldd	r24, Y+9	; 0x09
 118:	9a 85       	ldd	r25, Y+10	; 0x0a
 11a:	9e 01       	movw	r18, r28
 11c:	0e 94 00 00 	call	0	; 0x0 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream>
 120:	89 85       	ldd	r24, Y+9	; 0x09
 122:	9a 85       	ldd	r25, Y+10	; 0x0a
 124:	00 c0       	rjmp	.+0      	; 0x126 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x126>
 126:	aa 89       	ldd	r26, Y+18	; 0x12
 128:	bb 89       	ldd	r27, Y+19	; 0x13
 12a:	a0 0f       	add	r26, r16
 12c:	b1 1f       	adc	r27, r17
 12e:	8c 91       	ld	r24, X
 130:	88 23       	and	r24, r24
 132:	01 f4       	brne	.+0      	; 0x134 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x134>
 134:	00 c0       	rjmp	.+0      	; 0x136 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x136>
 136:	68 01       	movw	r12, r16
 138:	cc 0c       	add	r12, r12
 13a:	dd 1c       	adc	r13, r13
 13c:	ef 85       	ldd	r30, Y+15	; 0x0f
 13e:	f8 89       	ldd	r31, Y+16	; 0x10
 140:	ec 0d       	add	r30, r12
 142:	fd 1d       	adc	r31, r13
 144:	01 90       	ld	r0, Z+
 146:	f0 81       	ld	r31, Z
 148:	e0 2d       	mov	r30, r0
 14a:	01 90       	ld	r0, Z+
 14c:	f0 81       	ld	r31, Z
 14e:	e0 2d       	mov	r30, r0
 150:	8a 8d       	ldd	r24, Y+26	; 0x1a
 152:	03 80       	ldd	r0, Z+3	; 0x03
 154:	f4 81       	ldd	r31, Z+4	; 0x04
 156:	e0 2d       	mov	r30, r0
 158:	e8 0f       	add	r30, r24
 15a:	f1 1d       	adc	r31, r1
 15c:	80 81       	ld	r24, Z
 15e:	99 27       	eor	r25, r25
 160:	87 fd       	sbrc	r24, 7
 162:	90 95       	com	r25
 164:	8e 15       	cp	r24, r14
 166:	9f 05       	cpc	r25, r15
 168:	01 f0       	breq	.+0      	; 0x16a <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x16a>
 16a:	1c 92       	st	X, r1
 16c:	8c 81       	ldd	r24, Y+4	; 0x04
 16e:	8b 30       	cpi	r24, 0x0B	; 11
 170:	00 f4       	brcc	.+0      	; 0x172 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x172>
 172:	c4 01       	movw	r24, r8
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	70 e0       	ldi	r23, 0x00	; 0
 178:	40 e0       	ldi	r20, 0x00	; 0
 17a:	50 e0       	ldi	r21, 0x00	; 0
 17c:	0e 94 00 00 	call	0	; 0x0 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream>
 180:	00 d0       	rcall	.+0      	; 0x182 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x182>
 182:	0f 92       	push	r0
 184:	ed b7       	in	r30, 0x3d	; 61
 186:	fe b7       	in	r31, 0x3e	; 62
 188:	72 82       	std	Z+2, r7	; 0x02
 18a:	61 82       	std	Z+1, r6	; 0x01
 18c:	ef 85       	ldd	r30, Y+15	; 0x0f
 18e:	f8 89       	ldd	r31, Y+16	; 0x10
 190:	ec 0d       	add	r30, r12
 192:	fd 1d       	adc	r31, r13
 194:	01 90       	ld	r0, Z+
 196:	f0 81       	ld	r31, Z
 198:	e0 2d       	mov	r30, r0
 19a:	01 90       	ld	r0, Z+
 19c:	f0 81       	ld	r31, Z
 19e:	e0 2d       	mov	r30, r0
 1a0:	83 81       	ldd	r24, Z+3	; 0x03
 1a2:	94 81       	ldd	r25, Z+4	; 0x04
 1a4:	ad b7       	in	r26, 0x3d	; 61
 1a6:	be b7       	in	r27, 0x3e	; 62
 1a8:	14 96       	adiw	r26, 0x04	; 4
 1aa:	9c 93       	st	X, r25
 1ac:	8e 93       	st	-X, r24
 1ae:	13 97       	sbiw	r26, 0x03	; 3
 1b0:	0e 94 00 00 	call	0	; 0x0 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream>
 1b4:	0f 90       	pop	r0
 1b6:	0f 90       	pop	r0
 1b8:	ed b7       	in	r30, 0x3d	; 61
 1ba:	fe b7       	in	r31, 0x3e	; 62
 1bc:	52 82       	std	Z+2, r5	; 0x02
 1be:	41 82       	std	Z+1, r4	; 0x01
 1c0:	0e 94 00 00 	call	0	; 0x0 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream>
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	0f 5f       	subi	r16, 0xFF	; 255
 1ca:	1f 4f       	sbci	r17, 0xFF	; 255
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x1ce>
 1ce:	00 e0       	ldi	r16, 0x00	; 0
 1d0:	10 e0       	ldi	r17, 0x00	; 0
 1d2:	89 89       	ldd	r24, Y+17	; 0x11
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	08 17       	cp	r16, r24
 1d8:	19 07       	cpc	r17, r25
 1da:	04 f4       	brge	.+0      	; 0x1dc <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x1dc>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x1de>
 1de:	8a 8d       	ldd	r24, Y+26	; 0x1a
 1e0:	8f 5f       	subi	r24, 0xFF	; 255
 1e2:	8a 8f       	std	Y+26, r24	; 0x1a
 1e4:	88 8d       	ldd	r24, Y+24	; 0x18
 1e6:	99 8d       	ldd	r25, Y+25	; 0x19
 1e8:	2d 85       	ldd	r18, Y+13	; 0x0d
 1ea:	3e 85       	ldd	r19, Y+14	; 0x0e
 1ec:	82 17       	cp	r24, r18
 1ee:	93 07       	cpc	r25, r19
 1f0:	00 f4       	brcc	.+0      	; 0x1f2 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x1f2>
 1f2:	0e 94 00 00 	call	0	; 0x0 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream>
 1f6:	ab 01       	movw	r20, r22
 1f8:	bc 01       	movw	r22, r24
 1fa:	8c 89       	ldd	r24, Y+20	; 0x14
 1fc:	9d 89       	ldd	r25, Y+21	; 0x15
 1fe:	ae 89       	ldd	r26, Y+22	; 0x16
 200:	bf 89       	ldd	r27, Y+23	; 0x17
 202:	48 1b       	sub	r20, r24
 204:	59 0b       	sbc	r21, r25
 206:	6a 0b       	sbc	r22, r26
 208:	7b 0b       	sbc	r23, r27
 20a:	8b 85       	ldd	r24, Y+11	; 0x0b
 20c:	9c 85       	ldd	r25, Y+12	; 0x0c
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	48 17       	cp	r20, r24
 214:	59 07       	cpc	r21, r25
 216:	6a 07       	cpc	r22, r26
 218:	7b 07       	cpc	r23, r27
 21a:	00 f4       	brcc	.+0      	; 0x21c <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x21c>
 21c:	d5 01       	movw	r26, r10
 21e:	ed 91       	ld	r30, X+
 220:	fc 91       	ld	r31, X
 222:	04 80       	ldd	r0, Z+4	; 0x04
 224:	f5 81       	ldd	r31, Z+5	; 0x05
 226:	e0 2d       	mov	r30, r0
 228:	c5 01       	movw	r24, r10
 22a:	19 95       	eicall
 22c:	00 97       	sbiw	r24, 0x00	; 0
 22e:	01 f0       	breq	.+0      	; 0x230 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x230>
 230:	00 c0       	rjmp	.+0      	; 0x232 <_ZN28ReadHttpParameterNameSubTask14executeSubTaskEP6Stream+0x232>
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	1f 91       	pop	r17
 23c:	0f 91       	pop	r16
 23e:	ff 90       	pop	r15
 240:	ef 90       	pop	r14
 242:	df 90       	pop	r13
 244:	cf 90       	pop	r12
 246:	bf 90       	pop	r11
 248:	af 90       	pop	r10
 24a:	9f 90       	pop	r9
 24c:	8f 90       	pop	r8
 24e:	7f 90       	pop	r7
 250:	6f 90       	pop	r6
 252:	5f 90       	pop	r5
 254:	4f 90       	pop	r4
 256:	08 95       	ret
 258:	8d 81       	ldd	r24, Y+5	; 0x05
 25a:	9e 81       	ldd	r25, Y+6	; 0x06
 25c:	00 c0       	rjmp	.+0      	; 0x25e <__SREG__+0x21f>

Disassembly of section .text._ZN28ReadHttpParameterNameSubTask18resetInternalStateEv:

00000000 <_ZN28ReadHttpParameterNameSubTask18resetInternalStateEv>:

// =================================================

void ReadHttpParameterNameSubTask::setWork( RestServerSubTask* _subTaskAfterParsingAllParameters )
{
	subTaskAfterParsingAllParameters = _subTaskAfterParsingAllParameters;
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
}
   6:	19 8e       	std	Y+25, r1	; 0x19
   8:	18 8e       	std	Y+24, r1	; 0x18
   a:	1a 8e       	std	Y+26, r1	; 0x1a
   c:	20 e0       	ldi	r18, 0x00	; 0
   e:	30 e0       	ldi	r19, 0x00	; 0
  10:	00 c0       	rjmp	.+0      	; 0x12 <_ZN28ReadHttpParameterNameSubTask18resetInternalStateEv+0x12>
  12:	aa 89       	ldd	r26, Y+18	; 0x12
  14:	bb 89       	ldd	r27, Y+19	; 0x13
  16:	a2 0f       	add	r26, r18
  18:	b3 1f       	adc	r27, r19
  1a:	c9 01       	movw	r24, r18
  1c:	88 0f       	add	r24, r24
  1e:	99 1f       	adc	r25, r25
  20:	ef 85       	ldd	r30, Y+15	; 0x0f
  22:	f8 89       	ldd	r31, Y+16	; 0x10
  24:	e8 0f       	add	r30, r24
  26:	f9 1f       	adc	r31, r25
  28:	01 90       	ld	r0, Z+
  2a:	f0 81       	ld	r31, Z
  2c:	e0 2d       	mov	r30, r0
  2e:	01 90       	ld	r0, Z+
  30:	f0 81       	ld	r31, Z
  32:	e0 2d       	mov	r30, r0
  34:	81 e0       	ldi	r24, 0x01	; 1
  36:	95 81       	ldd	r25, Z+5	; 0x05
  38:	99 23       	and	r25, r25
  3a:	01 f4       	brne	.+0      	; 0x3c <_ZN28ReadHttpParameterNameSubTask18resetInternalStateEv+0x3c>
  3c:	80 e0       	ldi	r24, 0x00	; 0
  3e:	8c 93       	st	X, r24
  40:	2f 5f       	subi	r18, 0xFF	; 255
  42:	3f 4f       	sbci	r19, 0xFF	; 255
  44:	89 89       	ldd	r24, Y+17	; 0x11
  46:	90 e0       	ldi	r25, 0x00	; 0
  48:	28 17       	cp	r18, r24
  4a:	39 07       	cpc	r19, r25
  4c:	04 f0       	brlt	.+0      	; 0x4e <_ZN28ReadHttpParameterNameSubTask18resetInternalStateEv+0x4e>
  4e:	0e 94 00 00 	call	0	; 0x0 <_ZN28ReadHttpParameterNameSubTask18resetInternalStateEv>
  52:	dc 01       	movw	r26, r24
  54:	cb 01       	movw	r24, r22
  56:	8c 8b       	std	Y+20, r24	; 0x14
  58:	9d 8b       	std	Y+21, r25	; 0x15
  5a:	ae 8b       	std	Y+22, r26	; 0x16
  5c:	bf 8b       	std	Y+23, r27	; 0x17
  5e:	df 91       	pop	r29
  60:	cf 91       	pop	r28
  62:	08 95       	ret

Disassembly of section .text._ZN28ReadHttpParameterNameSubTaskC2EP17RestServerSubTaskjjPP18ServiceDescriptionhPbP29ReadHttpParameterValueSubTask:

00000000 <_ZN28ReadHttpParameterNameSubTaskC1EP17RestServerSubTaskjjPP18ServiceDescriptionhPbP29ReadHttpParameterValueSubTask>:

// =================================================

void ReadHttpParameterNameSubTask::setWork( RestServerSubTask* _subTaskAfterParsingAllParameters )
{
	subTaskAfterParsingAllParameters = _subTaskAfterParsingAllParameters;
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
}
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	0f 93       	push	r16
  18:	1f 93       	push	r17
  1a:	cf 93       	push	r28
  1c:	df 93       	push	r29
  1e:	ec 01       	movw	r28, r24
  20:	2b 01       	movw	r4, r22
  22:	3a 01       	movw	r6, r20
  24:	49 01       	movw	r8, r18
  26:	20 e0       	ldi	r18, 0x00	; 0
  28:	30 e0       	ldi	r19, 0x00	; 0
  2a:	fc 01       	movw	r30, r24
  2c:	21 93       	st	Z+, r18
  2e:	31 93       	st	Z+, r19
  30:	cf 01       	movw	r24, r30
  32:	60 e0       	ldi	r22, 0x00	; 0
  34:	70 e0       	ldi	r23, 0x00	; 0
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN28ReadHttpParameterNameSubTaskC1EP17RestServerSubTaskjjPP18ServiceDescriptionhPbP29ReadHttpParameterValueSubTask>
  3a:	5e 82       	std	Y+6, r5	; 0x06
  3c:	4d 82       	std	Y+5, r4	; 0x05
  3e:	7c 86       	std	Y+12, r7	; 0x0c
  40:	6b 86       	std	Y+11, r6	; 0x0b
  42:	9e 86       	std	Y+14, r9	; 0x0e
  44:	8d 86       	std	Y+13, r8	; 0x0d
  46:	18 8b       	std	Y+16, r17	; 0x10
  48:	0f 87       	std	Y+15, r16	; 0x0f
  4a:	e9 8a       	std	Y+17, r14	; 0x11
  4c:	db 8a       	std	Y+19, r13	; 0x13
  4e:	ca 8a       	std	Y+18, r12	; 0x12
  50:	ba 86       	std	Y+10, r11	; 0x0a
  52:	a9 86       	std	Y+9, r10	; 0x09
  54:	df 91       	pop	r29
  56:	cf 91       	pop	r28
  58:	1f 91       	pop	r17
  5a:	0f 91       	pop	r16
  5c:	ef 90       	pop	r14
  5e:	df 90       	pop	r13
  60:	cf 90       	pop	r12
  62:	bf 90       	pop	r11
  64:	af 90       	pop	r10
  66:	9f 90       	pop	r9
  68:	8f 90       	pop	r8
  6a:	7f 90       	pop	r7
  6c:	6f 90       	pop	r6
  6e:	5f 90       	pop	r5
  70:	4f 90       	pop	r4
  72:	08 95       	ret

Disassembly of section .text._ZN28ReadHttpParameterNameSubTask7setWorkEP17RestServerSubTask:

00000000 <_ZN28ReadHttpParameterNameSubTask7setWorkEP17RestServerSubTask>:

// =================================================

void ReadHttpParameterNameSubTask::setWork( RestServerSubTask* _subTaskAfterParsingAllParameters )
{
	subTaskAfterParsingAllParameters = _subTaskAfterParsingAllParameters;
   0:	fc 01       	movw	r30, r24
   2:	70 87       	std	Z+8, r23	; 0x08
   4:	67 83       	std	Z+7, r22	; 0x07
}
   6:	08 95       	ret

ReadHttpParameterValueSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000054  2**0
                  ALLOC
  3 .stab         00000b04  00000000  00000000  00000054  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003e01  00000000  00000000  00000b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN29ReadHttpParameterValueSubTask14getSubTaskNameEv 00000006  00000000  00000000  00004959  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN29ReadHttpParameterValueSubTask18resetInternalStateEv 0000003a  00000000  00000000  0000495f  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN29ReadHttpParameterValueSubTaskC2EP17RestServerSubTaskjPhh 00000050  00000000  00000000  00004999  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN29ReadHttpParameterValueSubTask7setWorkEP17RestServerSubTaskP18ServiceDescriptionS1_ 00000010  00000000  00000000  000049e9  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv 000001e6  00000000  00000000  000049f9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream 000000ba  00000000  00000000  00004bdf  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .rodata._ZTV29ReadHttpParameterValueSubTask 0000000a  00000000  00000000  00004c99  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .rodata._ZTV17RestServerSubTask 0000000a  00000000  00000000  00004ca3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .progmem.data 000000b7  00000000  00000000  00004cad  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN29ReadHttpParameterValueSubTask14getSubTaskNameEv:

00000000 <_ZN29ReadHttpParameterValueSubTask14getSubTaskNameEv>:
}

// =================================================

RestServerSubTask* ReadHttpParameterValueSubTask::executeSubTask( Stream* stream )
{
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN29ReadHttpParameterValueSubTask18resetInternalStateEv:

00000000 <_ZN29ReadHttpParameterValueSubTask18resetInternalStateEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	18 8e       	std	Y+24, r1	; 0x18
   8:	80 e0       	ldi	r24, 0x00	; 0
   a:	90 e0       	ldi	r25, 0x00	; 0
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpParameterValueSubTask:executeSubTask():";

	while( letterIndex < arrayForValueBytesSize && ( millis() - startTime < readingMaxTime ) )
   c:	00 c0       	rjmp	.+0      	; 0xe <_ZN29ReadHttpParameterValueSubTask18resetInternalStateEv+0xe>
	{
		if( stream->available() == 0 ) return NULL;

		int readByte = stream->read();
   e:	e9 85       	ldd	r30, Y+9	; 0x09
  10:	fa 85       	ldd	r31, Y+10	; 0x0a
  12:	e8 0f       	add	r30, r24
  14:	f9 1f       	adc	r31, r25
  16:	10 82       	st	Z, r1
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	2b 85       	ldd	r18, Y+11	; 0x0b
  1c:	30 e0       	ldi	r19, 0x00	; 0

		if( readByte == -1 ) return NULL;
  1e:	82 17       	cp	r24, r18
  20:	93 07       	cpc	r25, r19
  22:	04 f0       	brlt	.+0      	; 0x24 <_ZN29ReadHttpParameterValueSubTask18resetInternalStateEv+0x24>
  24:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask18resetInternalStateEv>

		if( readByte == ' ' )
  28:	dc 01       	movw	r26, r24
  2a:	cb 01       	movw	r24, r22
  2c:	8c 8b       	std	Y+20, r24	; 0x14
		{
			parseReadParameterValue();
  2e:	9d 8b       	std	Y+21, r25	; 0x15
  30:	ae 8b       	std	Y+22, r26	; 0x16
  32:	bf 8b       	std	Y+23, r27	; 0x17

			//info( p << prefix << "przechodze do tasku 'subTaskAfterParsingAllParameters'" << endl; ) // todo usunac

			return subTaskAfterParsingAllParameters;
  34:	df 91       	pop	r29
  36:	cf 91       	pop	r28
  38:	08 95       	ret

Disassembly of section .text._ZN29ReadHttpParameterValueSubTaskC2EP17RestServerSubTaskjPhh:

00000000 <_ZN29ReadHttpParameterValueSubTaskC1EP17RestServerSubTaskjPhh>:
}

// =================================================

RestServerSubTask* ReadHttpParameterValueSubTask::executeSubTask( Stream* stream )
{
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpParameterValueSubTask:executeSubTask():";

	while( letterIndex < arrayForValueBytesSize && ( millis() - startTime < readingMaxTime ) )
   c:	0f 93       	push	r16
	{
		if( stream->available() == 0 ) return NULL;

		int readByte = stream->read();
   e:	cf 93       	push	r28
  10:	df 93       	push	r29
  12:	ec 01       	movw	r28, r24
  14:	5b 01       	movw	r10, r22
  16:	6a 01       	movw	r12, r20
  18:	79 01       	movw	r14, r18
  1a:	20 e0       	ldi	r18, 0x00	; 0
  1c:	30 e0       	ldi	r19, 0x00	; 0

		if( readByte == -1 ) return NULL;
  1e:	fc 01       	movw	r30, r24
  20:	21 93       	st	Z+, r18
  22:	31 93       	st	Z+, r19
  24:	cf 01       	movw	r24, r30
  26:	60 e0       	ldi	r22, 0x00	; 0

		if( readByte == ' ' )
  28:	70 e0       	ldi	r23, 0x00	; 0
  2a:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTaskC1EP17RestServerSubTaskjPhh>
		{
			parseReadParameterValue();
  2e:	be 82       	std	Y+6, r11	; 0x06
  30:	ad 82       	std	Y+5, r10	; 0x05
  32:	d8 86       	std	Y+8, r13	; 0x08

			//info( p << prefix << "przechodze do tasku 'subTaskAfterParsingAllParameters'" << endl; ) // todo usunac

			return subTaskAfterParsingAllParameters;
  34:	cf 82       	std	Y+7, r12	; 0x07
  36:	fa 86       	std	Y+10, r15	; 0x0a
  38:	e9 86       	std	Y+9, r14	; 0x09
		}
		else
		if( readByte == '&' )
  3a:	0b 87       	std	Y+11, r16	; 0x0b
  3c:	df 91       	pop	r29
  3e:	cf 91       	pop	r28
		{
			parseReadParameterValue();
  40:	0f 91       	pop	r16
  42:	ff 90       	pop	r15
  44:	ef 90       	pop	r14

			return subTaskThatWillReadNextHttpParameterName;
  46:	df 90       	pop	r13
  48:	cf 90       	pop	r12
  4a:	bf 90       	pop	r11
		}
		else
		{
			arrayForValueBytes[letterIndex] = readByte;
  4c:	af 90       	pop	r10
  4e:	08 95       	ret

Disassembly of section .text._ZN29ReadHttpParameterValueSubTask7setWorkEP17RestServerSubTaskP18ServiceDescriptionS1_:

00000000 <_ZN29ReadHttpParameterValueSubTask7setWorkEP17RestServerSubTaskP18ServiceDescriptionS1_>:
}

// =================================================

RestServerSubTask* ReadHttpParameterValueSubTask::executeSubTask( Stream* stream )
{
   0:	fc 01       	movw	r30, r24
   2:	77 87       	std	Z+15, r23	; 0x0f
   4:	66 87       	std	Z+14, r22	; 0x0e
   6:	51 8b       	std	Z+17, r21	; 0x11
   8:	40 8b       	std	Z+16, r20	; 0x10
   a:	33 8b       	std	Z+19, r19	; 0x13
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpParameterValueSubTask:executeSubTask():";

	while( letterIndex < arrayForValueBytesSize && ( millis() - startTime < readingMaxTime ) )
   c:	22 8b       	std	Z+18, r18	; 0x12
	{
		if( stream->available() == 0 ) return NULL;

		int readByte = stream->read();
   e:	08 95       	ret

Disassembly of section .text._ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv:

00000000 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv>:
}

// =================================================

RestServerSubTask* ReadHttpParameterValueSubTask::executeSubTask( Stream* stream )
{
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpParameterValueSubTask:executeSubTask():";

	while( letterIndex < arrayForValueBytesSize && ( millis() - startTime < readingMaxTime ) )
   c:	cf 93       	push	r28
	{
		if( stream->available() == 0 ) return NULL;

		int readByte = stream->read();
   e:	df 93       	push	r29
  10:	8c 01       	movw	r16, r24
  12:	dc 01       	movw	r26, r24
  14:	50 96       	adiw	r26, 0x10	; 16
  16:	8d 91       	ld	r24, X+
  18:	9c 91       	ld	r25, X
  1a:	51 97       	sbiw	r26, 0x11	; 17
  1c:	00 97       	sbiw	r24, 0x00	; 0

		if( readByte == -1 ) return NULL;
  1e:	01 f4       	brne	.+0      	; 0x20 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x20>
  20:	00 c0       	rjmp	.+0      	; 0x22 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x22>
  22:	14 96       	adiw	r26, 0x04	; 4
  24:	8c 91       	ld	r24, X
  26:	14 97       	sbiw	r26, 0x04	; 4

		if( readByte == ' ' )
  28:	8b 30       	cpi	r24, 0x0B	; 11
  2a:	00 f4       	brcc	.+0      	; 0x2c <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x2c>
  2c:	c8 01       	movw	r24, r16
		{
			parseReadParameterValue();
  2e:	02 96       	adiw	r24, 0x02	; 2
  30:	60 e0       	ldi	r22, 0x00	; 0
  32:	70 e0       	ldi	r23, 0x00	; 0

			//info( p << prefix << "przechodze do tasku 'subTaskAfterParsingAllParameters'" << endl; ) // todo usunac

			return subTaskAfterParsingAllParameters;
  34:	40 e0       	ldi	r20, 0x00	; 0
  36:	50 e0       	ldi	r21, 0x00	; 0
  38:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv>
		}
		else
		if( readByte == '&' )
  3c:	00 d0       	rcall	.+0      	; 0x3e <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x3e>
  3e:	00 d0       	rcall	.+0      	; 0x40 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x40>
		{
			parseReadParameterValue();
  40:	ed b7       	in	r30, 0x3d	; 61
  42:	fe b7       	in	r31, 0x3e	; 62
  44:	31 96       	adiw	r30, 0x01	; 1

			return subTaskThatWillReadNextHttpParameterName;
  46:	80 e0       	ldi	r24, 0x00	; 0
  48:	90 e0       	ldi	r25, 0x00	; 0
  4a:	cd b7       	in	r28, 0x3d	; 61
		}
		else
		{
			arrayForValueBytes[letterIndex] = readByte;
  4c:	de b7       	in	r29, 0x3e	; 62
  4e:	9a 83       	std	Y+2, r25	; 0x02
  50:	89 83       	std	Y+1, r24	; 0x01
  52:	e8 01       	movw	r28, r16
  54:	a8 89       	ldd	r26, Y+16	; 0x10
  56:	b9 89       	ldd	r27, Y+17	; 0x11
			letterIndex++;
  58:	0d 90       	ld	r0, X+
  5a:	bc 91       	ld	r27, X
  5c:	a0 2d       	mov	r26, r0
RestServerSubTask* ReadHttpParameterValueSubTask::executeSubTask( Stream* stream )
{
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpParameterValueSubTask:executeSubTask():";

	while( letterIndex < arrayForValueBytesSize && ( millis() - startTime < readingMaxTime ) )
  5e:	13 96       	adiw	r26, 0x03	; 3
  60:	8d 91       	ld	r24, X+
  62:	9c 91       	ld	r25, X
  64:	14 97       	sbiw	r26, 0x04	; 4
  66:	93 83       	std	Z+3, r25	; 0x03
  68:	82 83       	std	Z+2, r24	; 0x02
  6a:	89 85       	ldd	r24, Y+9	; 0x09
  6c:	9a 85       	ldd	r25, Y+10	; 0x0a
  6e:	95 83       	std	Z+5, r25	; 0x05
  70:	84 83       	std	Z+4, r24	; 0x04
  72:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv>
  76:	0f 90       	pop	r0
  78:	0f 90       	pop	r0
  7a:	0f 90       	pop	r0
  7c:	0f 90       	pop	r0
  7e:	80 e0       	ldi	r24, 0x00	; 0
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	ed b7       	in	r30, 0x3d	; 61
  84:	fe b7       	in	r31, 0x3e	; 62
  86:	92 83       	std	Z+2, r25	; 0x02
  88:	81 83       	std	Z+1, r24	; 0x01
  8a:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv>
  8e:	0f 90       	pop	r0
	{
		if( stream->available() == 0 ) return NULL;
  90:	0f 90       	pop	r0
  92:	d8 01       	movw	r26, r16
  94:	50 96       	adiw	r26, 0x10	; 16
  96:	ed 91       	ld	r30, X+
  98:	fc 91       	ld	r31, X
  9a:	51 97       	sbiw	r26, 0x11	; 17
  9c:	c0 81       	ld	r28, Z
  9e:	d1 81       	ldd	r29, Z+1	; 0x01
  a0:	8d 81       	ldd	r24, Y+5	; 0x05
  a2:	98 2f       	mov	r25, r24
  a4:	91 50       	subi	r25, 0x01	; 1

		int readByte = stream->read();

		if( readByte == -1 ) return NULL;
  a6:	92 30       	cpi	r25, 0x02	; 2
  a8:	00 f4       	brcc	.+0      	; 0xaa <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0xaa>
			letterIndex++;
		}
	}

	return errorSubTask;
}
  aa:	e8 81       	ld	r30, Y
  ac:	f9 81       	ldd	r31, Y+1	; 0x01
  ae:	19 96       	adiw	r26, 0x09	; 9
  b0:	6d 91       	ld	r22, X+
  b2:	7c 91       	ld	r23, X
			arrayForValueBytes[letterIndex] = readByte;
			letterIndex++;
		}
	}

	return errorSubTask;
  b4:	1a 97       	sbiw	r26, 0x0a	; 10
  b6:	00 84       	ldd	r0, Z+8	; 0x08
  b8:	f1 85       	ldd	r31, Z+9	; 0x09
  ba:	e0 2d       	mov	r30, r0
  bc:	ce 01       	movw	r24, r28
  be:	19 95       	eicall
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0xc2>
  c2:	98 2f       	mov	r25, r24
  c4:	93 50       	subi	r25, 0x03	; 3
  c6:	93 30       	cpi	r25, 0x03	; 3
  c8:	00 f4       	brcc	.+0      	; 0xca <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0xca>
  ca:	28 81       	ld	r18, Y
  cc:	39 81       	ldd	r19, Y+1	; 0x01
  ce:	f8 01       	movw	r30, r16
  d0:	a1 85       	ldd	r26, Z+9	; 0x09
  d2:	b2 85       	ldd	r27, Z+10	; 0x0a
  d4:	61 e0       	ldi	r22, 0x01	; 1
  d6:	8c 91       	ld	r24, X
  d8:	81 33       	cpi	r24, 0x31	; 49
  da:	01 f0       	breq	.+0      	; 0xdc <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0xdc>
  dc:	60 e0       	ldi	r22, 0x00	; 0
  de:	d9 01       	movw	r26, r18
  e0:	16 96       	adiw	r26, 0x06	; 6
  e2:	ed 91       	ld	r30, X+
  e4:	fc 91       	ld	r31, X
  e6:	17 97       	sbiw	r26, 0x07	; 7
  e8:	ce 01       	movw	r24, r28
  ea:	19 95       	eicall
  ec:	00 c0       	rjmp	.+0      	; 0xee <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0xee>
  ee:	f8 01       	movw	r30, r16
  f0:	86 30       	cpi	r24, 0x06	; 6
  f2:	01 f4       	brne	.+0      	; 0xf4 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0xf4>
  f4:	81 85       	ldd	r24, Z+9	; 0x09
  f6:	92 85       	ldd	r25, Z+10	; 0x0a
  f8:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv>
  fc:	7c 01       	movw	r14, r24
  fe:	e8 81       	ld	r30, Y
 100:	f9 81       	ldd	r31, Y+1	; 0x01
 102:	c2 84       	ldd	r12, Z+10	; 0x0a
 104:	d3 84       	ldd	r13, Z+11	; 0x0b
 106:	04 84       	ldd	r0, Z+12	; 0x0c
 108:	f5 85       	ldd	r31, Z+13	; 0x0d
 10a:	e0 2d       	mov	r30, r0
 10c:	ce 01       	movw	r24, r28
 10e:	19 95       	eicall
 110:	d8 01       	movw	r26, r16
 112:	50 96       	adiw	r26, 0x10	; 16
 114:	ed 91       	ld	r30, X+
 116:	fc 91       	ld	r31, X
 118:	51 97       	sbiw	r26, 0x11	; 17
 11a:	c0 81       	ld	r28, Z
 11c:	d1 81       	ldd	r29, Z+1	; 0x01
 11e:	e8 81       	ld	r30, Y
 120:	f9 81       	ldd	r31, Y+1	; 0x01
 122:	e8 16       	cp	r14, r24
 124:	f9 06       	cpc	r15, r25
 126:	04 f4       	brge	.+0      	; 0x128 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x128>
 128:	04 84       	ldd	r0, Z+12	; 0x0c
 12a:	f5 85       	ldd	r31, Z+13	; 0x0d
 12c:	e0 2d       	mov	r30, r0
 12e:	00 c0       	rjmp	.+0      	; 0x130 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x130>
 130:	06 84       	ldd	r0, Z+14	; 0x0e
 132:	f7 85       	ldd	r31, Z+15	; 0x0f
 134:	e0 2d       	mov	r30, r0
 136:	ce 01       	movw	r24, r28
 138:	19 95       	eicall
 13a:	8e 15       	cp	r24, r14
 13c:	9f 05       	cpc	r25, r15
 13e:	04 f4       	brge	.+0      	; 0x140 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x140>
 140:	e8 01       	movw	r28, r16
 142:	e8 89       	ldd	r30, Y+16	; 0x10
 144:	f9 89       	ldd	r31, Y+17	; 0x11
 146:	c0 81       	ld	r28, Z
 148:	d1 81       	ldd	r29, Z+1	; 0x01
 14a:	e8 81       	ld	r30, Y
 14c:	f9 81       	ldd	r31, Y+1	; 0x01
 14e:	06 84       	ldd	r0, Z+14	; 0x0e
 150:	f7 85       	ldd	r31, Z+15	; 0x0f
 152:	e0 2d       	mov	r30, r0
 154:	ce 01       	movw	r24, r28
 156:	19 95       	eicall
 158:	7c 01       	movw	r14, r24
 15a:	ce 01       	movw	r24, r28
 15c:	b7 01       	movw	r22, r14
 15e:	f6 01       	movw	r30, r12
 160:	19 95       	eicall
 162:	00 c0       	rjmp	.+0      	; 0x164 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x164>
 164:	84 81       	ldd	r24, Z+4	; 0x04
 166:	8f 31       	cpi	r24, 0x1F	; 31
 168:	00 f4       	brcc	.+0      	; 0x16a <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x16a>
 16a:	c8 01       	movw	r24, r16
 16c:	02 96       	adiw	r24, 0x02	; 2
 16e:	60 e0       	ldi	r22, 0x00	; 0
 170:	70 e0       	ldi	r23, 0x00	; 0
 172:	40 e0       	ldi	r20, 0x00	; 0
 174:	50 e0       	ldi	r21, 0x00	; 0
 176:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv>
 17a:	00 d0       	rcall	.+0      	; 0x17c <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x17c>
 17c:	00 d0       	rcall	.+0      	; 0x17e <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv+0x17e>
 17e:	ed b7       	in	r30, 0x3d	; 61
 180:	fe b7       	in	r31, 0x3e	; 62
 182:	31 96       	adiw	r30, 0x01	; 1
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	ad b7       	in	r26, 0x3d	; 61
 18a:	be b7       	in	r27, 0x3e	; 62
 18c:	12 96       	adiw	r26, 0x02	; 2
 18e:	9c 93       	st	X, r25
 190:	8e 93       	st	-X, r24
 192:	11 97       	sbiw	r26, 0x01	; 1
 194:	e8 01       	movw	r28, r16
 196:	a8 89       	ldd	r26, Y+16	; 0x10
 198:	b9 89       	ldd	r27, Y+17	; 0x11
 19a:	0d 90       	ld	r0, X+
 19c:	bc 91       	ld	r27, X
 19e:	a0 2d       	mov	r26, r0
 1a0:	13 96       	adiw	r26, 0x03	; 3
 1a2:	8d 91       	ld	r24, X+
 1a4:	9c 91       	ld	r25, X
 1a6:	14 97       	sbiw	r26, 0x04	; 4
 1a8:	93 83       	std	Z+3, r25	; 0x03
 1aa:	82 83       	std	Z+2, r24	; 0x02
 1ac:	89 85       	ldd	r24, Y+9	; 0x09
 1ae:	9a 85       	ldd	r25, Y+10	; 0x0a
 1b0:	95 83       	std	Z+5, r25	; 0x05
 1b2:	84 83       	std	Z+4, r24	; 0x04
 1b4:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv>
 1b8:	0f 90       	pop	r0
 1ba:	0f 90       	pop	r0
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	ed b7       	in	r30, 0x3d	; 61
 1c6:	fe b7       	in	r31, 0x3e	; 62
 1c8:	92 83       	std	Z+2, r25	; 0x02
 1ca:	81 83       	std	Z+1, r24	; 0x01
 1cc:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask23parseReadParameterValueEv>
 1d0:	0f 90       	pop	r0
 1d2:	0f 90       	pop	r0
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	1f 91       	pop	r17
 1da:	0f 91       	pop	r16
 1dc:	ff 90       	pop	r15
 1de:	ef 90       	pop	r14
 1e0:	df 90       	pop	r13
 1e2:	cf 90       	pop	r12
 1e4:	08 95       	ret

Disassembly of section .text._ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream:

00000000 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream>:
}

// =================================================

RestServerSubTask* ReadHttpParameterValueSubTask::executeSubTask( Stream* stream )
{
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpParameterValueSubTask:executeSubTask():";

	while( letterIndex < arrayForValueBytesSize && ( millis() - startTime < readingMaxTime ) )
   c:	00 c0       	rjmp	.+0      	; 0xe <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0xe>
	{
		if( stream->available() == 0 ) return NULL;

		int readByte = stream->read();
   e:	d8 01       	movw	r26, r16
  10:	ed 91       	ld	r30, X+
  12:	fc 91       	ld	r31, X
  14:	06 80       	ldd	r0, Z+6	; 0x06
  16:	f7 81       	ldd	r31, Z+7	; 0x07
  18:	e0 2d       	mov	r30, r0
  1a:	c8 01       	movw	r24, r16
  1c:	19 95       	eicall

		if( readByte == -1 ) return NULL;
  1e:	bf ef       	ldi	r27, 0xFF	; 255
  20:	8f 3f       	cpi	r24, 0xFF	; 255
  22:	9b 07       	cpc	r25, r27
  24:	01 f4       	brne	.+0      	; 0x26 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0x26>
  26:	00 c0       	rjmp	.+0      	; 0x28 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0x28>

		if( readByte == ' ' )
  28:	80 32       	cpi	r24, 0x20	; 32
  2a:	91 05       	cpc	r25, r1
  2c:	01 f4       	brne	.+0      	; 0x2e <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0x2e>
		{
			parseReadParameterValue();
  2e:	ce 01       	movw	r24, r28
  30:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream>

			//info( p << prefix << "przechodze do tasku 'subTaskAfterParsingAllParameters'" << endl; ) // todo usunac

			return subTaskAfterParsingAllParameters;
  34:	8e 85       	ldd	r24, Y+14	; 0x0e
  36:	9f 85       	ldd	r25, Y+15	; 0x0f
  38:	00 c0       	rjmp	.+0      	; 0x3a <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0x3a>
		}
		else
		if( readByte == '&' )
  3a:	86 32       	cpi	r24, 0x26	; 38
  3c:	91 05       	cpc	r25, r1
  3e:	01 f4       	brne	.+0      	; 0x40 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0x40>
		{
			parseReadParameterValue();
  40:	ce 01       	movw	r24, r28
  42:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream>

			return subTaskThatWillReadNextHttpParameterName;
  46:	8a 89       	ldd	r24, Y+18	; 0x12
  48:	9b 89       	ldd	r25, Y+19	; 0x13
  4a:	00 c0       	rjmp	.+0      	; 0x4c <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0x4c>
		}
		else
		{
			arrayForValueBytes[letterIndex] = readByte;
  4c:	98 8d       	ldd	r25, Y+24	; 0x18
  4e:	e9 85       	ldd	r30, Y+9	; 0x09
  50:	fa 85       	ldd	r31, Y+10	; 0x0a
  52:	e9 0f       	add	r30, r25
  54:	f1 1d       	adc	r31, r1
  56:	80 83       	st	Z, r24
			letterIndex++;
  58:	88 8d       	ldd	r24, Y+24	; 0x18
  5a:	8f 5f       	subi	r24, 0xFF	; 255
  5c:	88 8f       	std	Y+24, r24	; 0x18
RestServerSubTask* ReadHttpParameterValueSubTask::executeSubTask( Stream* stream )
{
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpParameterValueSubTask:executeSubTask():";

	while( letterIndex < arrayForValueBytesSize && ( millis() - startTime < readingMaxTime ) )
  5e:	98 8d       	ldd	r25, Y+24	; 0x18
  60:	8b 85       	ldd	r24, Y+11	; 0x0b
  62:	98 17       	cp	r25, r24
  64:	00 f4       	brcc	.+0      	; 0x66 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0x66>
  66:	0e 94 00 00 	call	0	; 0x0 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream>
  6a:	ab 01       	movw	r20, r22
  6c:	bc 01       	movw	r22, r24
  6e:	8c 89       	ldd	r24, Y+20	; 0x14
  70:	9d 89       	ldd	r25, Y+21	; 0x15
  72:	ae 89       	ldd	r26, Y+22	; 0x16
  74:	bf 89       	ldd	r27, Y+23	; 0x17
  76:	48 1b       	sub	r20, r24
  78:	59 0b       	sbc	r21, r25
  7a:	6a 0b       	sbc	r22, r26
  7c:	7b 0b       	sbc	r23, r27
  7e:	8f 81       	ldd	r24, Y+7	; 0x07
  80:	98 85       	ldd	r25, Y+8	; 0x08
  82:	a0 e0       	ldi	r26, 0x00	; 0
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	48 17       	cp	r20, r24
  88:	59 07       	cpc	r21, r25
  8a:	6a 07       	cpc	r22, r26
  8c:	7b 07       	cpc	r23, r27
  8e:	00 f4       	brcc	.+0      	; 0x90 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0x90>
	{
		if( stream->available() == 0 ) return NULL;
  90:	d8 01       	movw	r26, r16
  92:	ed 91       	ld	r30, X+
  94:	fc 91       	ld	r31, X
  96:	04 80       	ldd	r0, Z+4	; 0x04
  98:	f5 81       	ldd	r31, Z+5	; 0x05
  9a:	e0 2d       	mov	r30, r0
  9c:	c8 01       	movw	r24, r16
  9e:	19 95       	eicall
  a0:	00 97       	sbiw	r24, 0x00	; 0
  a2:	01 f0       	breq	.+0      	; 0xa4 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0xa4>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <_ZN29ReadHttpParameterValueSubTask14executeSubTaskEP6Stream+0xa6>

		int readByte = stream->read();

		if( readByte == -1 ) return NULL;
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	90 e0       	ldi	r25, 0x00	; 0
			letterIndex++;
		}
	}

	return errorSubTask;
}
  aa:	df 91       	pop	r29
  ac:	cf 91       	pop	r28
  ae:	1f 91       	pop	r17
  b0:	0f 91       	pop	r16
  b2:	08 95       	ret
			arrayForValueBytes[letterIndex] = readByte;
			letterIndex++;
		}
	}

	return errorSubTask;
  b4:	8d 81       	ldd	r24, Y+5	; 0x05
  b6:	9e 81       	ldd	r25, Y+6	; 0x06
  b8:	00 c0       	rjmp	.+0      	; 0xba <_ZZN29ReadHttpParameterValueSubTask23parseReadParameterValueEvE3__c_0+0x57>

ReadHttpPathSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000054  2**0
                  ALLOC
  3 .stab         0000105c  00000000  00000000  00000054  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00004613  00000000  00000000  000010b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN19ReadHttpPathSubTask14getSubTaskNameEv 00000006  00000000  00000000  000056c3  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN19ReadHttpPathSubTask18resetInternalStateEv 00000020  00000000  00000000  000056c9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN19ReadHttpPathSubTaskC2EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP28ReadHttpParameterNameSubTaskP19SendResponseSubTaskPP18ServiceDescriptionhS9_bPch 0000009c  00000000  00000000  000056e9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN19ReadHttpPathSubTask7setWorkEb 00000006  00000000  00000000  00005785  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN19ReadHttpPathSubTask37allAllServicesToSelectedServicesArrayEv 00000080  00000000  00000000  0000578b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_ 0000011e  00000000  00000000  0000580b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN19ReadHttpPathSubTask14compareStringsEPcS0_ 0000011e  00000000  00000000  00005929  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN19ReadHttpPathSubTask25isInSelectedServicesArrayEh 0000005e  00000000  00000000  00005a47  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh 000000a2  00000000  00000000  00005aa5  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text._ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb 0000007a  00000000  00000000  00005b47  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text._ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream 00000210  00000000  00000000  00005bc1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .rodata._ZTV19ReadHttpPathSubTask 0000000a  00000000  00000000  00005dd1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 17 .data._ZN19ReadHttpPathSubTask15endOfHttpHeaderE 00000002  00000000  00000000  00005ddb  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 18 .data._ZN19ReadHttpPathSubTask9stopBytesE 00000002  00000000  00000000  00005ddd  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
 19 .rodata._ZTV17RestServerSubTask 0000000a  00000000  00000000  00005ddf  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 20 .progmem.data 00000185  00000000  00000000  00005de9  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN19ReadHttpPathSubTask14getSubTaskNameEv:

00000000 <_ZN19ReadHttpPathSubTask14getSubTaskNameEv>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask18resetInternalStateEv:

00000000 <_ZN19ReadHttpPathSubTask18resetInternalStateEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	60 91 00 00 	lds	r22, 0x0000
   a:	70 91 00 00 	lds	r23, 0x0000
   e:	44 96       	adiw	r24, 0x14	; 20
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18resetInternalStateEv>
  14:	1a a6       	std	Y+42, r1	; 0x2a
  16:	19 a6       	std	Y+41, r1	; 0x29
  18:	1b a6       	std	Y+43, r1	; 0x2b
  1a:	df 91       	pop	r29

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	cf 91       	pop	r28
  1e:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTaskC2EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP28ReadHttpParameterNameSubTaskP19SendResponseSubTaskPP18ServiceDescriptionhS9_bPch:

00000000 <_ZN19ReadHttpPathSubTaskC1EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP28ReadHttpParameterNameSubTaskP19SendResponseSubTaskPP18ServiceDescriptionhS9_bPch>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	af 92       	push	r10
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	bf 92       	push	r11
  12:	cf 92       	push	r12
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	0f 93       	push	r16
  1a:	1f 93       	push	r17

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	cf 93       	push	r28
  1e:	df 93       	push	r29
  20:	0f 92       	push	r0
  22:	0f 92       	push	r0
  24:	cd b7       	in	r28, 0x3d	; 61
  26:	de b7       	in	r29, 0x3e	; 62
  28:	3c 01       	movw	r6, r24

	if( streamReadUntilResult == -1 )
  2a:	1b 01       	movw	r2, r22
  2c:	5a 83       	std	Y+2, r21	; 0x02
  2e:	49 83       	std	Y+1, r20	; 0x01
  30:	29 01       	movw	r4, r18
  32:	20 e0       	ldi	r18, 0x00	; 0
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )
  34:	30 e0       	ldi	r19, 0x00	; 0
  36:	fc 01       	movw	r30, r24
  38:	21 93       	st	Z+, r18
  3a:	31 93       	st	Z+, r19
  3c:	cf 01       	movw	r24, r30
  3e:	60 e0       	ldi	r22, 0x00	; 0
  40:	70 e0       	ldi	r23, 0x00	; 0
  42:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTaskC1EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP28ReadHttpParameterNameSubTaskP19SendResponseSubTaskPP18ServiceDescriptionhS9_bPch>
  46:	c3 01       	movw	r24, r6
  48:	44 96       	adiw	r24, 0x14	; 20
  4a:	6e 89       	ldd	r22, Y+22	; 0x16
  4c:	7f 89       	ldd	r23, Y+23	; 0x17
  4e:	48 8d       	ldd	r20, Y+24	; 0x18
  50:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTaskC1EP17RestServerSubTaskP29SkipBytesUntilSequenceSubTaskP28ReadHttpParameterNameSubTaskP19SendResponseSubTaskPP18ServiceDescriptionhS9_bPch>
  54:	f3 01       	movw	r30, r6
  56:	36 82       	std	Z+6, r3	; 0x06
  58:	25 82       	std	Z+5, r2	; 0x05
  5a:	89 81       	ldd	r24, Y+1	; 0x01
  5c:	9a 81       	ldd	r25, Y+2	; 0x02
  5e:	90 87       	std	Z+8, r25	; 0x08
  60:	87 83       	std	Z+7, r24	; 0x07
  62:	52 86       	std	Z+10, r5	; 0x0a
  64:	41 86       	std	Z+9, r4	; 0x09
  66:	14 87       	std	Z+12, r17	; 0x0c
  68:	03 87       	std	Z+11, r16	; 0x0b
  6a:	f6 86       	std	Z+14, r15	; 0x0e
  6c:	e5 86       	std	Z+13, r14	; 0x0d
  6e:	c7 86       	std	Z+15, r12	; 0x0f
  70:	b1 8a       	std	Z+17, r11	; 0x11
  72:	a0 8a       	std	Z+16, r10	; 0x10
	}
	else
	{
		//info( p << prefix << "streamReadUntilResult = '" << (char)streamReadUntilResult << "'" << endl; )
		//info( wpln( "streamReadUntilResult = '%s'" , streamReadUntilResult ) )
		iln( "streamReadUntilResult = '%c'" , streamReadUntilResult )
  74:	82 8a       	std	Z+18, r8	; 0x12
  76:	0f 90       	pop	r0
  78:	0f 90       	pop	r0
  7a:	df 91       	pop	r29
  7c:	cf 91       	pop	r28
  7e:	1f 91       	pop	r17
  80:	0f 91       	pop	r16
  82:	ff 90       	pop	r15
  84:	ef 90       	pop	r14
  86:	cf 90       	pop	r12
  88:	bf 90       	pop	r11
  8a:	af 90       	pop	r10
  8c:	8f 90       	pop	r8
  8e:	7f 90       	pop	r7
  90:	6f 90       	pop	r6
  92:	5f 90       	pop	r5
  94:	4f 90       	pop	r4
  96:	3f 90       	pop	r3
  98:	2f 90       	pop	r2
  9a:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask7setWorkEb:

00000000 <_ZN19ReadHttpPathSubTask7setWorkEb>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	fc 01       	movw	r30, r24
   2:	63 8b       	std	Z+19, r22	; 0x13
   4:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask37allAllServicesToSelectedServicesArrayEv:

00000000 <_ZN19ReadHttpPathSubTask37allAllServicesToSelectedServicesArrayEv>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	dc 01       	movw	r26, r24
   6:	60 e0       	ldi	r22, 0x00	; 0
   8:	70 e0       	ldi	r23, 0x00	; 0
   a:	40 e0       	ldi	r20, 0x00	; 0
   c:	50 e0       	ldi	r21, 0x00	; 0
   e:	00 c0       	rjmp	.+0      	; 0x10 <_ZN19ReadHttpPathSubTask37allAllServicesToSelectedServicesArrayEv+0x10>
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	50 96       	adiw	r26, 0x10	; 16
  12:	2d 91       	ld	r18, X+
  14:	3c 91       	ld	r19, X
  16:	51 97       	sbiw	r26, 0x11	; 17
  18:	26 0f       	add	r18, r22
  1a:	37 1f       	adc	r19, r23

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	ca 01       	movw	r24, r20
  1e:	88 0f       	add	r24, r24
  20:	99 1f       	adc	r25, r25
  22:	1d 96       	adiw	r26, 0x0d	; 13
  24:	cd 91       	ld	r28, X+
  26:	dc 91       	ld	r29, X
  28:	1e 97       	sbiw	r26, 0x0e	; 14

	if( streamReadUntilResult == -1 )
  2a:	c8 0f       	add	r28, r24
  2c:	d9 1f       	adc	r29, r25
  2e:	e8 81       	ld	r30, Y
  30:	f9 81       	ldd	r31, Y+1	; 0x01
  32:	82 81       	ldd	r24, Z+2	; 0x02
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )
  34:	93 81       	ldd	r25, Z+3	; 0x03
  36:	f9 01       	movw	r30, r18
  38:	93 83       	std	Z+3, r25	; 0x03
  3a:	82 83       	std	Z+2, r24	; 0x02
  3c:	e8 81       	ld	r30, Y
  3e:	f9 81       	ldd	r31, Y+1	; 0x01
  40:	80 81       	ld	r24, Z
  42:	91 81       	ldd	r25, Z+1	; 0x01
  44:	f9 01       	movw	r30, r18
  46:	91 83       	std	Z+1, r25	; 0x01
  48:	80 83       	st	Z, r24
  4a:	9a 96       	adiw	r26, 0x2a	; 42
  4c:	8c 91       	ld	r24, X
  4e:	9a 97       	sbiw	r26, 0x2a	; 42
  50:	8f 5f       	subi	r24, 0xFF	; 255
  52:	9a 96       	adiw	r26, 0x2a	; 42
  54:	8c 93       	st	X, r24
  56:	9a 97       	sbiw	r26, 0x2a	; 42
  58:	4f 5f       	subi	r20, 0xFF	; 255
  5a:	5f 4f       	sbci	r21, 0xFF	; 255
  5c:	6c 5f       	subi	r22, 0xFC	; 252
  5e:	7f 4f       	sbci	r23, 0xFF	; 255
  60:	1f 96       	adiw	r26, 0x0f	; 15
  62:	2c 91       	ld	r18, X
  64:	1f 97       	sbiw	r26, 0x0f	; 15
  66:	82 2f       	mov	r24, r18
  68:	90 e0       	ldi	r25, 0x00	; 0
  6a:	02 97       	sbiw	r24, 0x02	; 2
  6c:	48 17       	cp	r20, r24
  6e:	59 07       	cpc	r21, r25
  70:	04 f0       	brlt	.+0      	; 0x72 <_ZN19ReadHttpPathSubTask37allAllServicesToSelectedServicesArrayEv+0x72>
  72:	22 50       	subi	r18, 0x02	; 2
	}
	else
	{
		//info( p << prefix << "streamReadUntilResult = '" << (char)streamReadUntilResult << "'" << endl; )
		//info( wpln( "streamReadUntilResult = '%s'" , streamReadUntilResult ) )
		iln( "streamReadUntilResult = '%c'" , streamReadUntilResult )
  74:	9a 96       	adiw	r26, 0x2a	; 42
  76:	2c 93       	st	X, r18
  78:	9a 97       	sbiw	r26, 0x2a	; 42
  7a:	df 91       	pop	r29
  7c:	cf 91       	pop	r28
  7e:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_:

00000000 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	7b 01       	movw	r14, r22
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	8a 01       	movw	r16, r20
  12:	8c 81       	ldd	r24, Y+4	; 0x04
  14:	8b 30       	cpi	r24, 0x0B	; 11
  16:	00 f4       	brcc	.+0      	; 0x18 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x18>
  18:	ce 01       	movw	r24, r28
  1a:	02 96       	adiw	r24, 0x02	; 2

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	60 e0       	ldi	r22, 0x00	; 0
  1e:	70 e0       	ldi	r23, 0x00	; 0
  20:	40 e0       	ldi	r20, 0x00	; 0
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>
  28:	00 d0       	rcall	.+0      	; 0x2a <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x2a>

	if( streamReadUntilResult == -1 )
  2a:	00 d0       	rcall	.+0      	; 0x2c <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x2c>
  2c:	ed b7       	in	r30, 0x3d	; 61
  2e:	fe b7       	in	r31, 0x3e	; 62
  30:	31 96       	adiw	r30, 0x01	; 1
  32:	80 e0       	ldi	r24, 0x00	; 0
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )
  34:	90 e0       	ldi	r25, 0x00	; 0
  36:	ad b7       	in	r26, 0x3d	; 61
  38:	be b7       	in	r27, 0x3e	; 62
  3a:	12 96       	adiw	r26, 0x02	; 2
  3c:	9c 93       	st	X, r25
  3e:	8e 93       	st	-X, r24
  40:	11 97       	sbiw	r26, 0x01	; 1
  42:	f3 82       	std	Z+3, r15	; 0x03
  44:	e2 82       	std	Z+2, r14	; 0x02
  46:	15 83       	std	Z+5, r17	; 0x05
  48:	04 83       	std	Z+4, r16	; 0x04
  4a:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>
  4e:	ed b7       	in	r30, 0x3d	; 61
  50:	fe b7       	in	r31, 0x3e	; 62
  52:	36 96       	adiw	r30, 0x06	; 6
  54:	0f b6       	in	r0, 0x3f	; 63
  56:	f8 94       	cli
  58:	fe bf       	out	0x3e, r31	; 62
  5a:	0f be       	out	0x3f, r0	; 63
  5c:	ed bf       	out	0x3d, r30	; 61
  5e:	20 e0       	ldi	r18, 0x00	; 0
  60:	00 c0       	rjmp	.+0      	; 0x62 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x62>
  62:	8e 0d       	add	r24, r14
  64:	9f 1d       	adc	r25, r15
  66:	dc 01       	movw	r26, r24
  68:	8c 91       	ld	r24, X
  6a:	83 17       	cp	r24, r19
  6c:	01 f0       	breq	.+0      	; 0x6e <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x6e>
  6e:	8c 81       	ldd	r24, Y+4	; 0x04
  70:	8b 30       	cpi	r24, 0x0B	; 11
  72:	00 f0       	brcs	.+0      	; 0x74 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x74>
	}
	else
	{
		//info( p << prefix << "streamReadUntilResult = '" << (char)streamReadUntilResult << "'" << endl; )
		//info( wpln( "streamReadUntilResult = '%s'" , streamReadUntilResult ) )
		iln( "streamReadUntilResult = '%c'" , streamReadUntilResult )
  74:	00 c0       	rjmp	.+0      	; 0x76 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x76>
  76:	ce 01       	movw	r24, r28
  78:	02 96       	adiw	r24, 0x02	; 2
  7a:	60 e0       	ldi	r22, 0x00	; 0
  7c:	70 e0       	ldi	r23, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	50 e0       	ldi	r21, 0x00	; 0
  82:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>
  86:	0f 92       	push	r0
  88:	0f 92       	push	r0
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	ed b7       	in	r30, 0x3d	; 61
  90:	fe b7       	in	r31, 0x3e	; 62
  92:	92 83       	std	Z+2, r25	; 0x02
  94:	81 83       	std	Z+1, r24	; 0x01
  96:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	ad b7       	in	r26, 0x3d	; 61
  a0:	be b7       	in	r27, 0x3e	; 62
  a2:	12 96       	adiw	r26, 0x02	; 2
  a4:	9c 93       	st	X, r25
  a6:	8e 93       	st	-X, r24
  a8:	11 97       	sbiw	r26, 0x01	; 1
  aa:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>
  ae:	0f 90       	pop	r0
  b0:	0f 90       	pop	r0
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0xb4>
  b4:	2f 5f       	subi	r18, 0xFF	; 255
  b6:	82 2f       	mov	r24, r18

		if( streamReadUntilResult == ' ' || streamReadUntilResult == '?' )
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	f8 01       	movw	r30, r16
  bc:	e8 0f       	add	r30, r24
  be:	f9 1f       	adc	r31, r25
  c0:	30 81       	ld	r19, Z
  c2:	33 23       	and	r19, r19
  c4:	01 f4       	brne	.+0      	; 0xc6 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0xc6>
  c6:	8c 81       	ldd	r24, Y+4	; 0x04
  c8:	8b 30       	cpi	r24, 0x0B	; 11
		{
			addMatchedServicesToSelectedServicesArray( false );
  ca:	00 f4       	brcc	.+0      	; 0xcc <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0xcc>
  cc:	ce 01       	movw	r24, r28
  ce:	02 96       	adiw	r24, 0x02	; 2
  d0:	60 e0       	ldi	r22, 0x00	; 0

			if( selectedServicesArrayIndex == 0 && !thereWasAtLeastOneMatching )
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	50 e0       	ldi	r21, 0x00	; 0
  d8:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>
  dc:	0f 92       	push	r0
			{
				//info( p << prefix << "adding all services because there were no selected services" << endl; )
				//info( wpln( "adding all services because there were no selected services" ) )
				iln( "adding all services because there were no selected services" )
  de:	0f 92       	push	r0
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	ed b7       	in	r30, 0x3d	; 61
  e6:	fe b7       	in	r31, 0x3e	; 62
  e8:	92 83       	std	Z+2, r25	; 0x02
  ea:	81 83       	std	Z+1, r24	; 0x01
  ec:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	ad b7       	in	r26, 0x3d	; 61
  f6:	be b7       	in	r27, 0x3e	; 62
  f8:	12 96       	adiw	r26, 0x02	; 2
  fa:	9c 93       	st	X, r25
  fc:	8e 93       	st	-X, r24
  fe:	11 97       	sbiw	r26, 0x01	; 1
 100:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_>
 104:	0f 90       	pop	r0
 106:	0f 90       	pop	r0
 108:	00 c0       	rjmp	.+0      	; 0x10a <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x10a>
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	00 c0       	rjmp	.+0      	; 0x10e <_ZN19ReadHttpPathSubTask18isStringStartsWithEPcS0_+0x10e>
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	df 91       	pop	r29
 112:	cf 91       	pop	r28
 114:	1f 91       	pop	r17
 116:	0f 91       	pop	r16
 118:	ff 90       	pop	r15
 11a:	ef 90       	pop	r14

				allAllServicesToSelectedServicesArray();
 11c:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask14compareStringsEPcS0_:

00000000 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	8b 01       	movw	r16, r22
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	7a 01       	movw	r14, r20
  12:	8c 81       	ldd	r24, Y+4	; 0x04
  14:	8b 30       	cpi	r24, 0x0B	; 11
  16:	00 f4       	brcc	.+0      	; 0x18 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0x18>
  18:	ce 01       	movw	r24, r28
  1a:	02 96       	adiw	r24, 0x02	; 2

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	60 e0       	ldi	r22, 0x00	; 0
  1e:	70 e0       	ldi	r23, 0x00	; 0
  20:	40 e0       	ldi	r20, 0x00	; 0
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>
  28:	00 d0       	rcall	.+0      	; 0x2a <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0x2a>

	if( streamReadUntilResult == -1 )
  2a:	00 d0       	rcall	.+0      	; 0x2c <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0x2c>
  2c:	ed b7       	in	r30, 0x3d	; 61
  2e:	fe b7       	in	r31, 0x3e	; 62
  30:	31 96       	adiw	r30, 0x01	; 1
  32:	80 e0       	ldi	r24, 0x00	; 0
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )
  34:	90 e0       	ldi	r25, 0x00	; 0
  36:	ad b7       	in	r26, 0x3d	; 61
  38:	be b7       	in	r27, 0x3e	; 62
  3a:	12 96       	adiw	r26, 0x02	; 2
  3c:	9c 93       	st	X, r25
  3e:	8e 93       	st	-X, r24
  40:	11 97       	sbiw	r26, 0x01	; 1
  42:	13 83       	std	Z+3, r17	; 0x03
  44:	02 83       	std	Z+2, r16	; 0x02
  46:	f5 82       	std	Z+5, r15	; 0x05
  48:	e4 82       	std	Z+4, r14	; 0x04
  4a:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>
  4e:	ed b7       	in	r30, 0x3d	; 61
  50:	fe b7       	in	r31, 0x3e	; 62
  52:	36 96       	adiw	r30, 0x06	; 6
  54:	0f b6       	in	r0, 0x3f	; 63
  56:	f8 94       	cli
  58:	fe bf       	out	0x3e, r31	; 62
  5a:	0f be       	out	0x3f, r0	; 63
  5c:	ed bf       	out	0x3d, r30	; 61
  5e:	20 e0       	ldi	r18, 0x00	; 0
  60:	82 2f       	mov	r24, r18
  62:	90 e0       	ldi	r25, 0x00	; 0
  64:	f8 01       	movw	r30, r16
  66:	e8 0f       	add	r30, r24
  68:	f9 1f       	adc	r31, r25
  6a:	30 81       	ld	r19, Z
  6c:	8e 0d       	add	r24, r14
  6e:	9f 1d       	adc	r25, r15
  70:	dc 01       	movw	r26, r24
  72:	8c 91       	ld	r24, X
	}
	else
	{
		//info( p << prefix << "streamReadUntilResult = '" << (char)streamReadUntilResult << "'" << endl; )
		//info( wpln( "streamReadUntilResult = '%s'" , streamReadUntilResult ) )
		iln( "streamReadUntilResult = '%c'" , streamReadUntilResult )
  74:	38 17       	cp	r19, r24
  76:	01 f0       	breq	.+0      	; 0x78 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0x78>
  78:	8c 81       	ldd	r24, Y+4	; 0x04
  7a:	8b 30       	cpi	r24, 0x0B	; 11
  7c:	00 f0       	brcs	.+0      	; 0x7e <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0x7e>
  7e:	00 c0       	rjmp	.+0      	; 0x80 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0x80>
  80:	ce 01       	movw	r24, r28
  82:	02 96       	adiw	r24, 0x02	; 2
  84:	60 e0       	ldi	r22, 0x00	; 0
  86:	70 e0       	ldi	r23, 0x00	; 0
  88:	40 e0       	ldi	r20, 0x00	; 0
  8a:	50 e0       	ldi	r21, 0x00	; 0
  8c:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>
  90:	0f 92       	push	r0
  92:	0f 92       	push	r0
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	ed b7       	in	r30, 0x3d	; 61
  9a:	fe b7       	in	r31, 0x3e	; 62
  9c:	92 83       	std	Z+2, r25	; 0x02
  9e:	81 83       	std	Z+1, r24	; 0x01
  a0:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>
  a4:	80 e0       	ldi	r24, 0x00	; 0
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	ad b7       	in	r26, 0x3d	; 61
  aa:	be b7       	in	r27, 0x3e	; 62
  ac:	12 96       	adiw	r26, 0x02	; 2
  ae:	9c 93       	st	X, r25
  b0:	8e 93       	st	-X, r24
  b2:	11 97       	sbiw	r26, 0x01	; 1
  b4:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>

		if( streamReadUntilResult == ' ' || streamReadUntilResult == '?' )
  b8:	0f 90       	pop	r0
  ba:	0f 90       	pop	r0
  bc:	00 c0       	rjmp	.+0      	; 0xbe <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0xbe>
  be:	33 23       	and	r19, r19
  c0:	01 f0       	breq	.+0      	; 0xc2 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0xc2>
  c2:	2f 5f       	subi	r18, 0xFF	; 255
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0xc6>
  c6:	8c 81       	ldd	r24, Y+4	; 0x04
  c8:	8b 30       	cpi	r24, 0x0B	; 11
		{
			addMatchedServicesToSelectedServicesArray( false );
  ca:	00 f4       	brcc	.+0      	; 0xcc <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0xcc>
  cc:	ce 01       	movw	r24, r28
  ce:	02 96       	adiw	r24, 0x02	; 2
  d0:	60 e0       	ldi	r22, 0x00	; 0

			if( selectedServicesArrayIndex == 0 && !thereWasAtLeastOneMatching )
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	50 e0       	ldi	r21, 0x00	; 0
  d8:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>
  dc:	0f 92       	push	r0
			{
				//info( p << prefix << "adding all services because there were no selected services" << endl; )
				//info( wpln( "adding all services because there were no selected services" ) )
				iln( "adding all services because there were no selected services" )
  de:	0f 92       	push	r0
  e0:	80 e0       	ldi	r24, 0x00	; 0
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	ed b7       	in	r30, 0x3d	; 61
  e6:	fe b7       	in	r31, 0x3e	; 62
  e8:	92 83       	std	Z+2, r25	; 0x02
  ea:	81 83       	std	Z+1, r24	; 0x01
  ec:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	ad b7       	in	r26, 0x3d	; 61
  f6:	be b7       	in	r27, 0x3e	; 62
  f8:	12 96       	adiw	r26, 0x02	; 2
  fa:	9c 93       	st	X, r25
  fc:	8e 93       	st	-X, r24
  fe:	11 97       	sbiw	r26, 0x01	; 1
 100:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_>
 104:	0f 90       	pop	r0
 106:	0f 90       	pop	r0
 108:	00 c0       	rjmp	.+0      	; 0x10a <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0x10a>
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	00 c0       	rjmp	.+0      	; 0x10e <_ZN19ReadHttpPathSubTask14compareStringsEPcS0_+0x10e>
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	df 91       	pop	r29
 112:	cf 91       	pop	r28
 114:	1f 91       	pop	r17
 116:	0f 91       	pop	r16
 118:	ff 90       	pop	r15
 11a:	ef 90       	pop	r14

				allAllServicesToSelectedServicesArray();
 11c:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask25isInSelectedServicesArrayEh:

00000000 <_ZN19ReadHttpPathSubTask25isInSelectedServicesArrayEh>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	4f 85       	ldd	r20, Y+15	; 0x0f
   8:	50 e0       	ldi	r21, 0x00	; 0
   a:	42 50       	subi	r20, 0x02	; 2
   c:	50 40       	sbci	r21, 0x00	; 0
   e:	70 e0       	ldi	r23, 0x00	; 0
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	66 0f       	add	r22, r22
  12:	77 1f       	adc	r23, r23
  14:	20 e0       	ldi	r18, 0x00	; 0
  16:	00 c0       	rjmp	.+0      	; 0x18 <_ZN19ReadHttpPathSubTask25isInSelectedServicesArrayEh+0x18>
  18:	88 0f       	add	r24, r24
  1a:	99 1f       	adc	r25, r25

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	88 0f       	add	r24, r24
  1e:	99 1f       	adc	r25, r25
  20:	a8 89       	ldd	r26, Y+16	; 0x10
  22:	b9 89       	ldd	r27, Y+17	; 0x11
  24:	a8 0f       	add	r26, r24
  26:	b9 1f       	adc	r27, r25
  28:	ed 85       	ldd	r30, Y+13	; 0x0d

	if( streamReadUntilResult == -1 )
  2a:	fe 85       	ldd	r31, Y+14	; 0x0e
  2c:	e6 0f       	add	r30, r22
  2e:	f7 1f       	adc	r31, r23
  30:	01 90       	ld	r0, Z+
  32:	f0 81       	ld	r31, Z
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )
  34:	e0 2d       	mov	r30, r0
  36:	0d 90       	ld	r0, X+
  38:	bc 91       	ld	r27, X
  3a:	a0 2d       	mov	r26, r0
  3c:	80 81       	ld	r24, Z
  3e:	91 81       	ldd	r25, Z+1	; 0x01
  40:	a8 17       	cp	r26, r24
  42:	b9 07       	cpc	r27, r25
  44:	01 f0       	breq	.+0      	; 0x46 <_ZN19ReadHttpPathSubTask25isInSelectedServicesArrayEh+0x46>
  46:	2f 5f       	subi	r18, 0xFF	; 255
  48:	82 2f       	mov	r24, r18
  4a:	90 e0       	ldi	r25, 0x00	; 0
  4c:	84 17       	cp	r24, r20
  4e:	95 07       	cpc	r25, r21
  50:	04 f0       	brlt	.+0      	; 0x52 <_ZN19ReadHttpPathSubTask25isInSelectedServicesArrayEh+0x52>
  52:	80 e0       	ldi	r24, 0x00	; 0
  54:	00 c0       	rjmp	.+0      	; 0x56 <_ZN19ReadHttpPathSubTask25isInSelectedServicesArrayEh+0x56>
  56:	81 e0       	ldi	r24, 0x01	; 1
  58:	df 91       	pop	r29
  5a:	cf 91       	pop	r28
  5c:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh:

00000000 <_ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	06 2f       	mov	r16, r22
   c:	10 e0       	ldi	r17, 0x00	; 0
   e:	8f 85       	ldd	r24, Y+15	; 0x0f
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	90 e0       	ldi	r25, 0x00	; 0
  12:	9c 01       	movw	r18, r24
  14:	21 50       	subi	r18, 0x01	; 1
  16:	30 40       	sbci	r19, 0x00	; 0
  18:	02 17       	cp	r16, r18
  1a:	13 07       	cpc	r17, r19

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	01 f4       	brne	.+0      	; 0x1e <_ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh+0x1e>
  1e:	82 e0       	ldi	r24, 0x02	; 2
  20:	00 c0       	rjmp	.+0      	; 0x22 <_ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh+0x22>
  22:	02 97       	sbiw	r24, 0x02	; 2
  24:	08 17       	cp	r16, r24
  26:	19 07       	cpc	r17, r25
  28:	01 f4       	brne	.+0      	; 0x2a <_ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh+0x2a>

	if( streamReadUntilResult == -1 )
  2a:	81 e0       	ldi	r24, 0x01	; 1
  2c:	89 a7       	std	Y+41, r24	; 0x29
  2e:	00 c0       	rjmp	.+0      	; 0x30 <_ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh+0x30>
  30:	ce 01       	movw	r24, r28
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh>
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )
  36:	88 23       	and	r24, r24
  38:	01 f4       	brne	.+0      	; 0x3a <_ZN19ReadHttpPathSubTask26addToSelectedServicesArrayEh+0x3a>
  3a:	48 89       	ldd	r20, Y+16	; 0x10
  3c:	59 89       	ldd	r21, Y+17	; 0x11
  3e:	6a a5       	ldd	r22, Y+42	; 0x2a
  40:	c8 01       	movw	r24, r16
  42:	88 0f       	add	r24, r24
  44:	99 1f       	adc	r25, r25
  46:	2d 85       	ldd	r18, Y+13	; 0x0d
  48:	3e 85       	ldd	r19, Y+14	; 0x0e
  4a:	28 0f       	add	r18, r24
  4c:	39 1f       	adc	r19, r25
  4e:	f9 01       	movw	r30, r18
  50:	a0 81       	ld	r26, Z
  52:	b1 81       	ldd	r27, Z+1	; 0x01
  54:	12 96       	adiw	r26, 0x02	; 2
  56:	8d 91       	ld	r24, X+
  58:	9c 91       	ld	r25, X
  5a:	13 97       	sbiw	r26, 0x03	; 3
  5c:	e6 2f       	mov	r30, r22
  5e:	f0 e0       	ldi	r31, 0x00	; 0
  60:	ee 0f       	add	r30, r30
  62:	ff 1f       	adc	r31, r31
  64:	ee 0f       	add	r30, r30
  66:	ff 1f       	adc	r31, r31
  68:	e4 0f       	add	r30, r20
  6a:	f5 1f       	adc	r31, r21
  6c:	93 83       	std	Z+3, r25	; 0x03
  6e:	82 83       	std	Z+2, r24	; 0x02
  70:	6a a5       	ldd	r22, Y+42	; 0x2a
  72:	f9 01       	movw	r30, r18
	}
	else
	{
		//info( p << prefix << "streamReadUntilResult = '" << (char)streamReadUntilResult << "'" << endl; )
		//info( wpln( "streamReadUntilResult = '%s'" , streamReadUntilResult ) )
		iln( "streamReadUntilResult = '%c'" , streamReadUntilResult )
  74:	a0 81       	ld	r26, Z
  76:	b1 81       	ldd	r27, Z+1	; 0x01
  78:	8d 91       	ld	r24, X+
  7a:	9c 91       	ld	r25, X
  7c:	11 97       	sbiw	r26, 0x01	; 1
  7e:	e6 2f       	mov	r30, r22
  80:	f0 e0       	ldi	r31, 0x00	; 0
  82:	ee 0f       	add	r30, r30
  84:	ff 1f       	adc	r31, r31
  86:	ee 0f       	add	r30, r30
  88:	ff 1f       	adc	r31, r31
  8a:	e4 0f       	add	r30, r20
  8c:	f5 1f       	adc	r31, r21
  8e:	91 83       	std	Z+1, r25	; 0x01
  90:	80 83       	st	Z, r24
  92:	8a a5       	ldd	r24, Y+42	; 0x2a
  94:	8f 5f       	subi	r24, 0xFF	; 255
  96:	8a a7       	std	Y+42, r24	; 0x2a
  98:	df 91       	pop	r29
  9a:	cf 91       	pop	r28
  9c:	1f 91       	pop	r17
  9e:	0f 91       	pop	r16
  a0:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb:

00000000 <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	df 92       	push	r13
   2:	ef 92       	push	r14
   4:	ff 92       	push	r15
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	ec 01       	movw	r28, r24
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	d6 2e       	mov	r13, r22
  12:	00 e0       	ldi	r16, 0x00	; 0
  14:	10 e0       	ldi	r17, 0x00	; 0
  16:	ee 24       	eor	r14, r14
  18:	ff 24       	eor	r15, r15
  1a:	00 c0       	rjmp	.+0      	; 0x1c <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb+0x1c>

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	8d 85       	ldd	r24, Y+13	; 0x0d
  1e:	9e 85       	ldd	r25, Y+14	; 0x0e
  20:	48 a1       	ldd	r20, Y+32	; 0x20
  22:	59 a1       	ldd	r21, Y+33	; 0x21
  24:	80 0f       	add	r24, r16
  26:	91 1f       	adc	r25, r17
  28:	dc 01       	movw	r26, r24

	if( streamReadUntilResult == -1 )
  2a:	ed 91       	ld	r30, X+
  2c:	fc 91       	ld	r31, X
  2e:	11 97       	sbiw	r26, 0x01	; 1
  30:	01 90       	ld	r0, Z+
  32:	f0 81       	ld	r31, Z
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )
  34:	e0 2d       	mov	r30, r0
  36:	63 81       	ldd	r22, Z+3	; 0x03
  38:	74 81       	ldd	r23, Z+4	; 0x04
  3a:	ce 01       	movw	r24, r28
  3c:	dd 20       	and	r13, r13
  3e:	01 f4       	brne	.+0      	; 0x40 <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb+0x40>
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb>
  44:	00 c0       	rjmp	.+0      	; 0x46 <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb+0x46>
  46:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb>
  4a:	88 23       	and	r24, r24
  4c:	01 f0       	breq	.+0      	; 0x4e <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb+0x4e>
  4e:	ce 01       	movw	r24, r28
  50:	6e 2d       	mov	r22, r14
  52:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb>
  56:	08 94       	sec
  58:	e1 1c       	adc	r14, r1
  5a:	f1 1c       	adc	r15, r1
  5c:	0e 5f       	subi	r16, 0xFE	; 254
  5e:	1f 4f       	sbci	r17, 0xFF	; 255
  60:	8f 85       	ldd	r24, Y+15	; 0x0f
  62:	90 e0       	ldi	r25, 0x00	; 0
  64:	e8 16       	cp	r14, r24
  66:	f9 06       	cpc	r15, r25
  68:	04 f0       	brlt	.+0      	; 0x6a <_ZN19ReadHttpPathSubTask41addMatchedServicesToSelectedServicesArrayEb+0x6a>
  6a:	df 91       	pop	r29
  6c:	cf 91       	pop	r28
  6e:	1f 91       	pop	r17
  70:	0f 91       	pop	r16
  72:	ff 90       	pop	r15
	}
	else
	{
		//info( p << prefix << "streamReadUntilResult = '" << (char)streamReadUntilResult << "'" << endl; )
		//info( wpln( "streamReadUntilResult = '%s'" , streamReadUntilResult ) )
		iln( "streamReadUntilResult = '%c'" , streamReadUntilResult )
  74:	ef 90       	pop	r14
  76:	df 90       	pop	r13
  78:	08 95       	ret

Disassembly of section .text._ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream:

00000000 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>:
}

// =================================================

RestServerSubTask* ReadHttpPathSubTask::executeSubTask( Stream* stream )
{
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
   a:	cf 93       	push	r28
   c:	df 93       	push	r29
   e:	ec 01       	movw	r28, r24
	static const PROGMEM prog_char functionName[] = "executeSubTask";
	//static const char* prefix = "ReadHttpPathSubTask:executeSubTask():";

	streamReadUntilByte.setStream( stream );
  10:	8c 01       	movw	r16, r24
  12:	0c 5e       	subi	r16, 0xEC	; 236
  14:	1f 4f       	sbci	r17, 0xFF	; 255
  16:	c8 01       	movw	r24, r16
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>

	int streamReadUntilResult;

	while( ( streamReadUntilResult = streamReadUntilByte.read() ) == 0 ){}
  1c:	c8 01       	movw	r24, r16
  1e:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
  22:	6c 01       	movw	r12, r24
  24:	00 97       	sbiw	r24, 0x00	; 0
  26:	01 f0       	breq	.+0      	; 0x28 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x28>
  28:	8c 81       	ldd	r24, Y+4	; 0x04

	if( streamReadUntilResult == -1 )
  2a:	9f ef       	ldi	r25, 0xFF	; 255
  2c:	c9 16       	cp	r12, r25
  2e:	9f ef       	ldi	r25, 0xFF	; 255
  30:	d9 06       	cpc	r13, r25
  32:	01 f4       	brne	.+0      	; 0x34 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x34>
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )
  34:	85 31       	cpi	r24, 0x15	; 21
  36:	00 f0       	brcs	.+0      	; 0x38 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x38>
  38:	00 c0       	rjmp	.+0      	; 0x3a <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x3a>
  3a:	ce 01       	movw	r24, r28
  3c:	02 96       	adiw	r24, 0x02	; 2
  3e:	60 e0       	ldi	r22, 0x00	; 0
  40:	70 e0       	ldi	r23, 0x00	; 0
  42:	40 e0       	ldi	r20, 0x00	; 0
  44:	50 e0       	ldi	r21, 0x00	; 0
  46:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
  4a:	0f 92       	push	r0
  4c:	0f 92       	push	r0
  4e:	80 e0       	ldi	r24, 0x00	; 0
  50:	90 e0       	ldi	r25, 0x00	; 0
  52:	ed b7       	in	r30, 0x3d	; 61
  54:	fe b7       	in	r31, 0x3e	; 62
  56:	92 83       	std	Z+2, r25	; 0x02
  58:	81 83       	std	Z+1, r24	; 0x01
  5a:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
  5e:	80 e0       	ldi	r24, 0x00	; 0
  60:	90 e0       	ldi	r25, 0x00	; 0
  62:	ed b7       	in	r30, 0x3d	; 61
  64:	fe b7       	in	r31, 0x3e	; 62
  66:	92 83       	std	Z+2, r25	; 0x02
  68:	81 83       	std	Z+1, r24	; 0x01
  6a:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
  6e:	0f 90       	pop	r0
  70:	0f 90       	pop	r0
  72:	00 c0       	rjmp	.+0      	; 0x74 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x74>
	}
	else
	{
		//info( p << prefix << "streamReadUntilResult = '" << (char)streamReadUntilResult << "'" << endl; )
		//info( wpln( "streamReadUntilResult = '%s'" , streamReadUntilResult ) )
		iln( "streamReadUntilResult = '%c'" , streamReadUntilResult )
  74:	85 31       	cpi	r24, 0x15	; 21
  76:	00 f4       	brcc	.+0      	; 0x78 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x78>
  78:	ce 01       	movw	r24, r28
  7a:	02 96       	adiw	r24, 0x02	; 2
  7c:	60 e0       	ldi	r22, 0x00	; 0
  7e:	70 e0       	ldi	r23, 0x00	; 0
  80:	40 e0       	ldi	r20, 0x00	; 0
  82:	50 e0       	ldi	r21, 0x00	; 0
  84:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
  88:	00 d0       	rcall	.+0      	; 0x8a <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x8a>
  8a:	0f 92       	push	r0
  8c:	80 e0       	ldi	r24, 0x00	; 0
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	ed b7       	in	r30, 0x3d	; 61
  92:	fe b7       	in	r31, 0x3e	; 62
  94:	92 83       	std	Z+2, r25	; 0x02
  96:	81 83       	std	Z+1, r24	; 0x01
  98:	d4 82       	std	Z+4, r13	; 0x04
  9a:	c3 82       	std	Z+3, r12	; 0x03
  9c:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
  a0:	0f 90       	pop	r0
  a2:	0f 90       	pop	r0
  a4:	80 e0       	ldi	r24, 0x00	; 0
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	ed b7       	in	r30, 0x3d	; 61
  aa:	fe b7       	in	r31, 0x3e	; 62
  ac:	92 83       	std	Z+2, r25	; 0x02
  ae:	81 83       	std	Z+1, r24	; 0x01
  b0:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
  b4:	0f 90       	pop	r0
  b6:	0f 90       	pop	r0

		if( streamReadUntilResult == ' ' || streamReadUntilResult == '?' )
  b8:	f0 e2       	ldi	r31, 0x20	; 32
  ba:	cf 16       	cp	r12, r31
  bc:	d1 04       	cpc	r13, r1
  be:	01 f0       	breq	.+0      	; 0xc0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0xc0>
  c0:	8f e3       	ldi	r24, 0x3F	; 63
  c2:	c8 16       	cp	r12, r24
  c4:	d1 04       	cpc	r13, r1
  c6:	01 f0       	breq	.+0      	; 0xc8 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0xc8>
  c8:	00 c0       	rjmp	.+0      	; 0xca <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0xca>
		{
			addMatchedServicesToSelectedServicesArray( false );
  ca:	ce 01       	movw	r24, r28
  cc:	60 e0       	ldi	r22, 0x00	; 0
  ce:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>

			if( selectedServicesArrayIndex == 0 && !thereWasAtLeastOneMatching )
  d2:	8a a5       	ldd	r24, Y+42	; 0x2a
  d4:	88 23       	and	r24, r24
  d6:	01 f4       	brne	.+0      	; 0xd8 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0xd8>
  d8:	8b a5       	ldd	r24, Y+43	; 0x2b
  da:	88 23       	and	r24, r24
  dc:	01 f4       	brne	.+0      	; 0xde <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0xde>
			{
				//info( p << prefix << "adding all services because there were no selected services" << endl; )
				//info( wpln( "adding all services because there were no selected services" ) )
				iln( "adding all services because there were no selected services" )
  de:	8c 81       	ldd	r24, Y+4	; 0x04
  e0:	85 31       	cpi	r24, 0x15	; 21
  e2:	00 f4       	brcc	.+0      	; 0xe4 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0xe4>
  e4:	ce 01       	movw	r24, r28
  e6:	02 96       	adiw	r24, 0x02	; 2
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	40 e0       	ldi	r20, 0x00	; 0
  ee:	50 e0       	ldi	r21, 0x00	; 0
  f0:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
  f4:	0f 92       	push	r0
  f6:	0f 92       	push	r0
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	ed b7       	in	r30, 0x3d	; 61
  fe:	fe b7       	in	r31, 0x3e	; 62
 100:	92 83       	std	Z+2, r25	; 0x02
 102:	81 83       	std	Z+1, r24	; 0x01
 104:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	ed b7       	in	r30, 0x3d	; 61
 10e:	fe b7       	in	r31, 0x3e	; 62
 110:	92 83       	std	Z+2, r25	; 0x02
 112:	81 83       	std	Z+1, r24	; 0x01
 114:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
 118:	0f 90       	pop	r0
 11a:	0f 90       	pop	r0

				allAllServicesToSelectedServicesArray();
 11c:	ce 01       	movw	r24, r28
 11e:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
			}

			sendResponseSubTask->setWork( isGETHttpMethod , responseType == 1 , responseType == 2 , arrayForSelectdServices , selectedServicesArrayIndex );
 122:	39 a5       	ldd	r19, Y+41	; 0x29
 124:	8b 85       	ldd	r24, Y+11	; 0x0b
 126:	9c 85       	ldd	r25, Y+12	; 0x0c
 128:	41 e0       	ldi	r20, 0x01	; 1
 12a:	31 30       	cpi	r19, 0x01	; 1
 12c:	01 f0       	breq	.+0      	; 0x12e <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x12e>
 12e:	40 e0       	ldi	r20, 0x00	; 0
 130:	21 e0       	ldi	r18, 0x01	; 1
 132:	32 30       	cpi	r19, 0x02	; 2
 134:	01 f0       	breq	.+0      	; 0x136 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x136>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	08 89       	ldd	r16, Y+16	; 0x10
 13a:	19 89       	ldd	r17, Y+17	; 0x11
 13c:	6b 89       	ldd	r22, Y+19	; 0x13
 13e:	ea a4       	ldd	r14, Y+42	; 0x2a
 140:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
			//skipBytesUntilSequenceSubTask->setStopSequenceAndNextSubTask( "\r\n\r\n" , leaveLastByteOfHttpHeaderInStream , sendResponseSubTask );
			skipBytesUntilSequenceSubTask->setStopSequenceAndNextSubTask( (char*)endOfHttpHeader , leaveLastByteOfHttpHeaderInStream , sendResponseSubTask );
 144:	60 91 00 00 	lds	r22, 0x0000
 148:	70 91 00 00 	lds	r23, 0x0000
 14c:	2b 85       	ldd	r18, Y+11	; 0x0b
 14e:	3c 85       	ldd	r19, Y+12	; 0x0c
 150:	8f 81       	ldd	r24, Y+7	; 0x07
 152:	98 85       	ldd	r25, Y+8	; 0x08
 154:	4a 89       	ldd	r20, Y+18	; 0x12
 156:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
			//skipBytesUntilSequenceSubTask->setStopSequenceAndNextSubTask( "\r\n\r\n" , false , sendResponseSubTask ); // todo leaveLastByteOfHttpHeaderInStream !!

			if( streamReadUntilResult == ' ' )
 15a:	f0 e2       	ldi	r31, 0x20	; 32
 15c:	cf 16       	cp	r12, r31
 15e:	d1 04       	cpc	r13, r1
 160:	01 f4       	brne	.+0      	; 0x162 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x162>
			{
				return skipBytesUntilSequenceSubTask;
 162:	8f 81       	ldd	r24, Y+7	; 0x07
 164:	98 85       	ldd	r25, Y+8	; 0x08
 166:	00 c0       	rjmp	.+0      	; 0x168 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x168>
			}
			else
			if( streamReadUntilResult == '?' )
 168:	8f e3       	ldi	r24, 0x3F	; 63
 16a:	c8 16       	cp	r12, r24
 16c:	d1 04       	cpc	r13, r1
 16e:	01 f4       	brne	.+0      	; 0x170 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x170>
			{
				readHttpParameterNameSubTask->setWork( skipBytesUntilSequenceSubTask );
 170:	6f 81       	ldd	r22, Y+7	; 0x07
 172:	78 85       	ldd	r23, Y+8	; 0x08
 174:	89 85       	ldd	r24, Y+9	; 0x09
 176:	9a 85       	ldd	r25, Y+10	; 0x0a
 178:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
				return readHttpParameterNameSubTask;
 17c:	89 85       	ldd	r24, Y+9	; 0x09
 17e:	9a 85       	ldd	r25, Y+10	; 0x0a
 180:	00 c0       	rjmp	.+0      	; 0x182 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x182>
			}
		}
		else
		if( streamReadUntilResult == '/' )
 182:	9f e2       	ldi	r25, 0x2F	; 47
 184:	c9 16       	cp	r12, r25
 186:	d1 04       	cpc	r13, r1
 188:	01 f4       	brne	.+0      	; 0x18a <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x18a>
		{
			addMatchedServicesToSelectedServicesArray( false );
 18a:	ce 01       	movw	r24, r28
 18c:	60 e0       	ldi	r22, 0x00	; 0
 18e:	00 c0       	rjmp	.+0      	; 0x190 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x190>
			streamReadUntilByte.resetInternalState( (char*)stopBytes );
			return NULL;
		}
		else
		if( streamReadUntilResult == '*' )
 190:	ea e2       	ldi	r30, 0x2A	; 42
 192:	ce 16       	cp	r12, r30
 194:	d1 04       	cpc	r13, r1
 196:	01 f4       	brne	.+0      	; 0x198 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x198>
		{
			addMatchedServicesToSelectedServicesArray( true );
 198:	ce 01       	movw	r24, r28
 19a:	61 e0       	ldi	r22, 0x01	; 1
 19c:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
			streamReadUntilByte.resetInternalState( (char*)stopBytes );
 1a0:	60 91 00 00 	lds	r22, 0x0000
 1a4:	70 91 00 00 	lds	r23, 0x0000
 1a8:	c8 01       	movw	r24, r16
 1aa:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x1b0>
		//}
	}

	//warning( p << prefix << "code should not never reach this place, streamReadUntilResult='" << (char)streamReadUntilResult << "'" << endl; )
	//warning( wpln( "code should not never reach this place, streamReadUntilResult='%s'" , streamReadUntilResult ) )
	wln( "code should not never reach this place, streamReadUntilResult='%s'" , streamReadUntilResult )
 1b0:	8c 81       	ldd	r24, Y+4	; 0x04
 1b2:	8f 31       	cpi	r24, 0x1F	; 31
 1b4:	00 f4       	brcc	.+0      	; 0x1b6 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x1b6>
 1b6:	ce 01       	movw	r24, r28
 1b8:	02 96       	adiw	r24, 0x02	; 2
 1ba:	60 e0       	ldi	r22, 0x00	; 0
 1bc:	70 e0       	ldi	r23, 0x00	; 0
 1be:	40 e0       	ldi	r20, 0x00	; 0
 1c0:	50 e0       	ldi	r21, 0x00	; 0
 1c2:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
 1c6:	00 d0       	rcall	.+0      	; 0x1c8 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x1c8>
 1c8:	0f 92       	push	r0
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	ed b7       	in	r30, 0x3d	; 61
 1d0:	fe b7       	in	r31, 0x3e	; 62
 1d2:	92 83       	std	Z+2, r25	; 0x02
 1d4:	81 83       	std	Z+1, r24	; 0x01
 1d6:	d4 82       	std	Z+4, r13	; 0x04
 1d8:	c3 82       	std	Z+3, r12	; 0x03
 1da:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	ed b7       	in	r30, 0x3d	; 61
 1e8:	fe b7       	in	r31, 0x3e	; 62
 1ea:	92 83       	std	Z+2, r25	; 0x02
 1ec:	81 83       	std	Z+1, r24	; 0x01
 1ee:	0e 94 00 00 	call	0	; 0x0 <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream>
 1f2:	0f 90       	pop	r0
 1f4:	0f 90       	pop	r0

	return errorSubTask;
 1f6:	8d 81       	ldd	r24, Y+5	; 0x05
 1f8:	9e 81       	ldd	r25, Y+6	; 0x06
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <_ZN19ReadHttpPathSubTask14executeSubTaskEP6Stream+0x1fc>
	{
		//info( p << prefix << "streamReadUntilResult = -1" << endl; )
		//info( wpln( "streamReadUntilResult = -1" ) )
		iln( "streamReadUntilResult = -1" )

		return NULL;
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	90 e0       	ldi	r25, 0x00	; 0
		}
	}

	return errorSubTask;
	*/
}
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	1f 91       	pop	r17
 206:	0f 91       	pop	r16
 208:	ef 90       	pop	r14
 20a:	df 90       	pop	r13
 20c:	cf 90       	pop	r12
 20e:	08 95       	ret

RestServer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         00000bac  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003f79  00000000  00000000  00000be0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN10RestServer18resetInternalStateEv 00000032  00000000  00000000  00004b59  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN10RestServerC2EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch 000001ee  00000000  00000000  00004b8b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN10RestServer13processStreamEP6Stream 00000576  00000000  00000000  00004d79  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .progmem.data 00000355  00000000  00000000  000052ef  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rodata._ZTV17RestServerSubTask 0000000a  00000000  00000000  00005644  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN10RestServer18resetInternalStateEv:

00000000 <_ZN10RestServer18resetInternalStateEv>:
}

// =================================================

bool RestServer::processStream( Stream* stream )
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	8c 53       	subi	r24, 0x3C	; 60
   8:	9f 4f       	sbci	r25, 0xFF	; 255
   a:	9d 8f       	std	Y+29, r25	; 0x1d
   c:	8c 8f       	std	Y+28, r24	; 0x1c
   e:	dc 01       	movw	r26, r24
  10:	ed 91       	ld	r30, X+
  12:	fc 91       	ld	r31, X
  14:	02 80       	ldd	r0, Z+2	; 0x02
  16:	f3 81       	ldd	r31, Z+3	; 0x03
  18:	e0 2d       	mov	r30, r0
  1a:	19 95       	eicall
  1c:	ce 01       	movw	r24, r28
  1e:	8f 51       	subi	r24, 0x1F	; 31
  20:	9f 4f       	sbci	r25, 0xFF	; 255
  22:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer18resetInternalStateEv>
	//static const char* prefix = "RestServer:processStream():";

	//static const unsigned int timeoutInSeconds = 10; // todo to ma byc jako parametr przekazany do konstruktora

	//all( p << prefix << "beginning work, executing '" << currentSubTask->getSubTaskName() << "' sub-task" << endl; )
	aln( "beginning work, executing '%s' sub-task" , currentSubTask->getSubTaskName() )
  26:	cd 50       	subi	r28, 0x0D	; 13
  28:	df 4f       	sbci	r29, 0xFF	; 255
  2a:	18 82       	st	Y, r1
  2c:	df 91       	pop	r29
  2e:	cf 91       	pop	r28
  30:	08 95       	ret

Disassembly of section .text._ZN10RestServerC2EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch:

00000000 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>:
}

// =================================================

bool RestServer::processStream( Stream* stream )
{
   0:	3f 92       	push	r3
   2:	4f 92       	push	r4
   4:	5f 92       	push	r5
   6:	6f 92       	push	r6
   8:	7f 92       	push	r7
   a:	8f 92       	push	r8
   c:	9f 92       	push	r9
   e:	af 92       	push	r10
  10:	bf 92       	push	r11
  12:	cf 92       	push	r12
  14:	df 92       	push	r13
  16:	ef 92       	push	r14
  18:	ff 92       	push	r15
  1a:	0f 93       	push	r16
  1c:	1f 93       	push	r17
  1e:	cf 93       	push	r28
  20:	df 93       	push	r29
  22:	cd b7       	in	r28, 0x3d	; 61
  24:	de b7       	in	r29, 0x3e	; 62
	//static const char* prefix = "RestServer:processStream():";

	//static const unsigned int timeoutInSeconds = 10; // todo to ma byc jako parametr przekazany do konstruktora

	//all( p << prefix << "beginning work, executing '" << currentSubTask->getSubTaskName() << "' sub-task" << endl; )
	aln( "beginning work, executing '%s' sub-task" , currentSubTask->getSubTaskName() )
  26:	60 97       	sbiw	r28, 0x10	; 16
  28:	0f b6       	in	r0, 0x3f	; 63
  2a:	f8 94       	cli
  2c:	de bf       	out	0x3e, r29	; 62
  2e:	0f be       	out	0x3f, r0	; 63
  30:	cd bf       	out	0x3d, r28	; 61
  32:	3c 01       	movw	r6, r24
  34:	7a 83       	std	Y+2, r23	; 0x02
  36:	69 83       	std	Y+1, r22	; 0x01
  38:	34 2e       	mov	r3, r20
  3a:	3c 83       	std	Y+4, r19	; 0x04
  3c:	2b 83       	std	Y+3, r18	; 0x03
  3e:	b8 8a       	std	Y+16, r11	; 0x10
  40:	af 86       	std	Y+15, r10	; 0x0f
  42:	98 2c       	mov	r9, r8
  44:	60 e0       	ldi	r22, 0x00	; 0
  46:	70 e0       	ldi	r23, 0x00	; 0
  48:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
  4c:	93 01       	movw	r18, r6
  4e:	2c 5f       	subi	r18, 0xFC	; 252
  50:	3f 4f       	sbci	r19, 0xFF	; 255
  52:	38 87       	std	Y+8, r19	; 0x08
  54:	2f 83       	std	Y+7, r18	; 0x07
  56:	c9 01       	movw	r24, r18
  58:	6f ef       	ldi	r22, 0xFF	; 255
  5a:	a7 01       	movw	r20, r14
  5c:	20 e0       	ldi	r18, 0x00	; 0
  5e:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
  62:	c3 01       	movw	r24, r6
  64:	0e 96       	adiw	r24, 0x0e	; 14
  66:	9a 87       	std	Y+10, r25	; 0x0a
  68:	89 87       	std	Y+9, r24	; 0x09
  6a:	6f ef       	ldi	r22, 0xFF	; 255
  6c:	a6 01       	movw	r20, r12
  6e:	20 e0       	ldi	r18, 0x00	; 0
  70:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	f3 01       	movw	r30, r6
  7a:	91 8f       	std	Z+25, r25	; 0x19
  7c:	80 8f       	std	Z+24, r24	; 0x18
  7e:	93 01       	movw	r18, r6

	streamReadBytesCounting.setStream( stream );
  80:	22 5e       	subi	r18, 0xE2	; 226
  82:	3f 4f       	sbci	r19, 0xFF	; 255
  84:	3e 83       	std	Y+6, r19	; 0x06
  86:	2d 83       	std	Y+5, r18	; 0x05
  88:	68 e1       	ldi	r22, 0x18	; 24
  8a:	46 2e       	mov	r4, r22
  8c:	51 2c       	mov	r5, r1
  8e:	46 0c       	add	r4, r6
  90:	57 1c       	adc	r5, r7

	if( blockToServeIncommingConnectionToTheEnd )
  92:	c9 01       	movw	r24, r18
  94:	b2 01       	movw	r22, r4
  96:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
	{
		while( true )
		{
			if( isTimeoutWatcherStarted && ( millis() - startTime ) > MAX_TIME_FOR_PROCESS_INCOMMING_HTTP_REQUEST )
  9a:	c3 01       	movw	r24, r6
  9c:	cf 96       	adiw	r24, 0x3f	; 63
  9e:	9c 87       	std	Y+12, r25	; 0x0c
  a0:	8b 87       	std	Y+11, r24	; 0x0b
  a2:	88 24       	eor	r8, r8
  a4:	83 94       	inc	r8
  a6:	89 24       	eor	r8, r9
  a8:	b2 01       	movw	r22, r4
  aa:	4b 81       	ldd	r20, Y+3	; 0x03
  ac:	5c 81       	ldd	r21, Y+4	; 0x04
				wln( "http request max bytes reached while processing this request" )

				break;
			}

			RestServerSubTask* newSubTask = currentSubTask->executeSubTask( streamReadBytesCountingPtr );
  ae:	98 01       	movw	r18, r16
  b0:	08 2d       	mov	r16, r8
  b2:	ea a4       	ldd	r14, Y+42	; 0x2a
  b4:	fb a4       	ldd	r15, Y+43	; 0x2b
  b6:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
				}
			}
			else
			{
				//all( p << ", during next execution there will be continuation of current sub-task ('" << currentSubTask->getSubTaskName() << "')" << endl; )
				aln( "during next execution there will be continuation of current sub-task ('%s')" , currentSubTask->getSubTaskName() )
  ba:	a4 e6       	ldi	r26, 0x64	; 100
  bc:	aa 2e       	mov	r10, r26
  be:	b1 2c       	mov	r11, r1
					currentSubTask = newSubTask;
					currentSubTask->resetInternalState();

					if( !isTimeoutWatcherStarted )
					{
						isTimeoutWatcherStarted = true;
  c0:	a6 0c       	add	r10, r6
  c2:	b7 1c       	adc	r11, r7

	if( blockToServeIncommingConnectionToTheEnd )
	{
		while( true )
		{
			if( isTimeoutWatcherStarted && ( millis() - startTime ) > MAX_TIME_FOR_PROCESS_INCOMMING_HTTP_REQUEST )
  c4:	c5 01       	movw	r24, r10
  c6:	b2 01       	movw	r22, r4
  c8:	48 e8       	ldi	r20, 0x88	; 136
  ca:	53 e1       	ldi	r21, 0x13	; 19
  cc:	2f a1       	ldd	r18, Y+39	; 0x27
  ce:	38 a5       	ldd	r19, Y+40	; 0x28
  d0:	09 a5       	ldd	r16, Y+41	; 0x29
  d2:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
  d6:	f3 01       	movw	r30, r6
  d8:	e3 58       	subi	r30, 0x83	; 131
  da:	ff 4f       	sbci	r31, 0xFF	; 255
  dc:	fc 83       	std	Y+4, r31	; 0x04
  de:	eb 83       	std	Y+3, r30	; 0x03
  e0:	be ef       	ldi	r27, 0xFE	; 254
  e2:	eb 2e       	mov	r14, r27
  e4:	e3 0c       	add	r14, r3
  e6:	cf 01       	movw	r24, r30
  e8:	b2 01       	movw	r22, r4
  ea:	48 e8       	ldi	r20, 0x88	; 136
  ec:	53 e1       	ldi	r21, 0x13	; 19
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	38 e2       	ldi	r19, 0x28	; 40
  f2:	09 81       	ldd	r16, Y+1	; 0x01
  f4:	1a 81       	ldd	r17, Y+2	; 0x02
  f6:	cd a0       	ldd	r12, Y+37	; 0x25
  f8:	de a0       	ldd	r13, Y+38	; 0x26
			{
				//warning( p << prefix << "timeout while processing this request" << endl; )
				wln( "timeout while processing this request" )
  fa:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
  fe:	93 01       	movw	r18, r6
 100:	28 56       	subi	r18, 0x68	; 104
 102:	3f 4f       	sbci	r19, 0xFF	; 255
 104:	3e 87       	std	Y+14, r19	; 0x0e
 106:	2d 87       	std	Y+13, r18	; 0x0d
 108:	00 d0       	rcall	.+0      	; 0x10a <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch+0x10a>
 10a:	8c a5       	ldd	r24, Y+44	; 0x2c
 10c:	9d a5       	ldd	r25, Y+45	; 0x2d
 10e:	ed b7       	in	r30, 0x3d	; 61
 110:	fe b7       	in	r31, 0x3e	; 62
 112:	92 83       	std	Z+2, r25	; 0x02
 114:	81 83       	std	Z+1, r24	; 0x01
 116:	8e a5       	ldd	r24, Y+46	; 0x2e
 118:	83 83       	std	Z+3, r24	; 0x03
			}

			if( streamReadBytesCounting.getReadBytesCount() > MAX_BYTES_COUNT_OF_INCOMMING_HTTP_REQUEST )
			{
				//warning( p << prefix << "http request max bytes reached while processing this request" << endl; )
				wln( "http request max bytes reached while processing this request" )
 11a:	8d 85       	ldd	r24, Y+13	; 0x0d
 11c:	9e 85       	ldd	r25, Y+14	; 0x0e
 11e:	b2 01       	movw	r22, r4
 120:	4d 81       	ldd	r20, Y+5	; 0x05
 122:	5e 81       	ldd	r21, Y+6	; 0x06
 124:	2b 81       	ldd	r18, Y+3	; 0x03
 126:	3c 81       	ldd	r19, Y+4	; 0x04
 128:	0b 85       	ldd	r16, Y+11	; 0x0b
 12a:	1c 85       	ldd	r17, Y+12	; 0x0c
 12c:	e9 80       	ldd	r14, Y+1	; 0x01
 12e:	fa 80       	ldd	r15, Y+2	; 0x02
 130:	c3 2c       	mov	r12, r3
 132:	af 84       	ldd	r10, Y+15	; 0x0f
 134:	b8 88       	ldd	r11, Y+16	; 0x10
 136:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>

				break;
			}

			RestServerSubTask* newSubTask = currentSubTask->executeSubTask( streamReadBytesCountingPtr );
 13a:	0f 90       	pop	r0
 13c:	0f 90       	pop	r0
 13e:	0f 90       	pop	r0
 140:	c3 01       	movw	r24, r6
 142:	8c 53       	subi	r24, 0x3C	; 60
 144:	9f 4f       	sbci	r25, 0xFF	; 255
 146:	b2 01       	movw	r22, r4
 148:	4d 81       	ldd	r20, Y+5	; 0x05
 14a:	5e 81       	ldd	r21, Y+6	; 0x06
 14c:	2d 85       	ldd	r18, Y+13	; 0x0d
 14e:	3e 85       	ldd	r19, Y+14	; 0x0e
 150:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
 154:	83 01       	movw	r16, r6

			if( newSubTask != NULL )
 156:	0f 51       	subi	r16, 0x1F	; 31
 158:	1f 4f       	sbci	r17, 0xFF	; 255
 15a:	c8 01       	movw	r24, r16
			{
				//all( p << prefix << "finishing work"; )

				if( newSubTask == errorSubTaskPtr )
 15c:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
 160:	f3 01       	movw	r30, r6
 162:	93 82       	std	Z+3, r9	; 0x03
 164:	2f 81       	ldd	r18, Y+7	; 0x07
				{
					//warning( p << prefix << "finishing work, already executed '" << currentSubTask->getSubTaskName() << "' sub-task asked to reset internal state (future execution will start state machine from beginning)" << endl; )
					wln( "finishing work, already executed '%s' sub-task asked to reset internal state (future execution will start state machine from beginning)" , currentSubTask->getSubTaskName() )
 166:	38 85       	ldd	r19, Y+8	; 0x08
 168:	33 87       	std	Z+11, r19	; 0x0b
 16a:	22 87       	std	Z+10, r18	; 0x0a
 16c:	89 85       	ldd	r24, Y+9	; 0x09
 16e:	9a 85       	ldd	r25, Y+10	; 0x0a
 170:	95 8b       	std	Z+21, r25	; 0x15
 172:	84 8b       	std	Z+20, r24	; 0x14
 174:	83 2d       	mov	r24, r3
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	fc 01       	movw	r30, r24
 17a:	32 97       	sbiw	r30, 0x02	; 2
 17c:	ee 0f       	add	r30, r30
 17e:	ff 1f       	adc	r31, r31
 180:	29 81       	ldd	r18, Y+1	; 0x01
 182:	3a 81       	ldd	r19, Y+2	; 0x02
 184:	e2 0f       	add	r30, r18
 186:	f3 1f       	adc	r31, r19
 188:	93 01       	movw	r18, r6
 18a:	26 5f       	subi	r18, 0xF6	; 246
 18c:	3f 4f       	sbci	r19, 0xFF	; 255
 18e:	31 83       	std	Z+1, r19	; 0x01
 190:	20 83       	st	Z, r18
 192:	fc 01       	movw	r30, r24
 194:	31 97       	sbiw	r30, 0x01	; 1
					break;
				}
				else
				{
					//all( p << prefix << "finishing work, changing already executed '" << currentSubTask->getSubTaskName() << "' sub-task to '" << newSubTask->getSubTaskName() << "'" << endl; )
					aln( "finishing work, changing already executed '%s' sub-task to '%s'" , currentSubTask->getSubTaskName() , newSubTask->getSubTaskName() )
 196:	ee 0f       	add	r30, r30
 198:	ff 1f       	adc	r31, r31
 19a:	89 81       	ldd	r24, Y+1	; 0x01
 19c:	9a 81       	ldd	r25, Y+2	; 0x02
 19e:	e8 0f       	add	r30, r24
 1a0:	f9 1f       	adc	r31, r25
 1a2:	c3 01       	movw	r24, r6
 1a4:	44 96       	adiw	r24, 0x14	; 20
 1a6:	91 83       	std	Z+1, r25	; 0x01
 1a8:	80 83       	st	Z, r24
 1aa:	f3 01       	movw	r30, r6
 1ac:	53 8e       	std	Z+27, r5	; 0x1b
 1ae:	42 8e       	std	Z+26, r4	; 0x1a
 1b0:	ef 50       	subi	r30, 0x0F	; 15
 1b2:	ff 4f       	sbci	r31, 0xFF	; 255
 1b4:	11 83       	std	Z+1, r17	; 0x01
 1b6:	00 83       	st	Z, r16
 1b8:	c3 01       	movw	r24, r6
 1ba:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServerC1EPP18ServiceDescriptionhP12PageRendererS4_PKcS6_S1_bPbPhhP9AnyBufferIhhEPch>
 1be:	60 96       	adiw	r28, 0x10	; 16
 1c0:	0f b6       	in	r0, 0x3f	; 63
 1c2:	f8 94       	cli
 1c4:	de bf       	out	0x3e, r29	; 62
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	cd bf       	out	0x3d, r28	; 61
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	1f 91       	pop	r17
 1d0:	0f 91       	pop	r16
 1d2:	ff 90       	pop	r15
 1d4:	ef 90       	pop	r14
 1d6:	df 90       	pop	r13
 1d8:	cf 90       	pop	r12
 1da:	bf 90       	pop	r11
 1dc:	af 90       	pop	r10
 1de:	9f 90       	pop	r9
 1e0:	8f 90       	pop	r8
 1e2:	7f 90       	pop	r7
 1e4:	6f 90       	pop	r6
 1e6:	5f 90       	pop	r5
 1e8:	4f 90       	pop	r4
 1ea:	3f 90       	pop	r3
 1ec:	08 95       	ret

Disassembly of section .text._ZN10RestServer13processStreamEP6Stream:

00000000 <_ZN10RestServer13processStreamEP6Stream>:
}

// =================================================

bool RestServer::processStream( Stream* stream )
{
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	5f 92       	push	r5
   6:	6f 92       	push	r6
   8:	7f 92       	push	r7
   a:	8f 92       	push	r8
   c:	9f 92       	push	r9
   e:	af 92       	push	r10
  10:	bf 92       	push	r11
  12:	cf 92       	push	r12
  14:	df 92       	push	r13
  16:	ef 92       	push	r14
  18:	ff 92       	push	r15
  1a:	0f 93       	push	r16
  1c:	1f 93       	push	r17
  1e:	cf 93       	push	r28
  20:	df 93       	push	r29
  22:	ec 01       	movw	r28, r24
  24:	8b 01       	movw	r16, r22
	//static const char* prefix = "RestServer:processStream():";

	//static const unsigned int timeoutInSeconds = 10; // todo to ma byc jako parametr przekazany do konstruktora

	//all( p << prefix << "beginning work, executing '" << currentSubTask->getSubTaskName() << "' sub-task" << endl; )
	aln( "beginning work, executing '%s' sub-task" , currentSubTask->getSubTaskName() )
  26:	8a 81       	ldd	r24, Y+2	; 0x02
  28:	8b 30       	cpi	r24, 0x0B	; 11
  2a:	00 f4       	brcc	.+0      	; 0x2c <_ZN10RestServer13processStreamEP6Stream+0x2c>
  2c:	ce 01       	movw	r24, r28
  2e:	60 e0       	ldi	r22, 0x00	; 0
  30:	70 e0       	ldi	r23, 0x00	; 0
  32:	40 e0       	ldi	r20, 0x00	; 0
  34:	50 e0       	ldi	r21, 0x00	; 0
  36:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
  3a:	8c 8d       	ldd	r24, Y+28	; 0x1c
  3c:	9d 8d       	ldd	r25, Y+29	; 0x1d
  3e:	dc 01       	movw	r26, r24
  40:	ed 91       	ld	r30, X+
  42:	fc 91       	ld	r31, X
  44:	01 90       	ld	r0, Z+
  46:	f0 81       	ld	r31, Z
  48:	e0 2d       	mov	r30, r0
  4a:	19 95       	eicall
  4c:	00 d0       	rcall	.+0      	; 0x4e <_ZN10RestServer13processStreamEP6Stream+0x4e>
  4e:	0f 92       	push	r0
  50:	20 e0       	ldi	r18, 0x00	; 0
  52:	30 e0       	ldi	r19, 0x00	; 0
  54:	ed b7       	in	r30, 0x3d	; 61
  56:	fe b7       	in	r31, 0x3e	; 62
  58:	32 83       	std	Z+2, r19	; 0x02
  5a:	21 83       	std	Z+1, r18	; 0x01
  5c:	94 83       	std	Z+4, r25	; 0x04
  5e:	83 83       	std	Z+3, r24	; 0x03
  60:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
  64:	0f 90       	pop	r0
  66:	0f 90       	pop	r0
  68:	80 e0       	ldi	r24, 0x00	; 0
  6a:	90 e0       	ldi	r25, 0x00	; 0
  6c:	ad b7       	in	r26, 0x3d	; 61
  6e:	be b7       	in	r27, 0x3e	; 62
  70:	12 96       	adiw	r26, 0x02	; 2
  72:	9c 93       	st	X, r25
  74:	8e 93       	st	-X, r24
  76:	11 97       	sbiw	r26, 0x01	; 1
  78:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
  7c:	0f 90       	pop	r0
  7e:	0f 90       	pop	r0

	streamReadBytesCounting.setStream( stream );
  80:	21 ee       	ldi	r18, 0xE1	; 225
  82:	82 2e       	mov	r8, r18
  84:	91 2c       	mov	r9, r1
  86:	8c 0e       	add	r8, r28
  88:	9d 1e       	adc	r9, r29
  8a:	c4 01       	movw	r24, r8
  8c:	b8 01       	movw	r22, r16
  8e:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>

	if( blockToServeIncommingConnectionToTheEnd )
  92:	8b 81       	ldd	r24, Y+3	; 0x03
  94:	88 23       	and	r24, r24
  96:	01 f4       	brne	.+0      	; 0x98 <_ZN10RestServer13processStreamEP6Stream+0x98>
  98:	00 c0       	rjmp	.+0      	; 0x9a <_ZN10RestServer13processStreamEP6Stream+0x9a>
	{
		while( true )
		{
			if( isTimeoutWatcherStarted && ( millis() - startTime ) > MAX_TIME_FOR_PROCESS_INCOMMING_HTTP_REQUEST )
  9a:	13 ef       	ldi	r17, 0xF3	; 243
  9c:	c1 2e       	mov	r12, r17
  9e:	d1 2c       	mov	r13, r1
  a0:	cc 0e       	add	r12, r28
  a2:	dd 1e       	adc	r13, r29
  a4:	04 ef       	ldi	r16, 0xF4	; 244
  a6:	60 2e       	mov	r6, r16
  a8:	71 2c       	mov	r7, r1
  aa:	6c 0e       	add	r6, r28
  ac:	7d 1e       	adc	r7, r29
				wln( "http request max bytes reached while processing this request" )

				break;
			}

			RestServerSubTask* newSubTask = currentSubTask->executeSubTask( streamReadBytesCountingPtr );
  ae:	81 ef       	ldi	r24, 0xF1	; 241
  b0:	28 2e       	mov	r2, r24
  b2:	31 2c       	mov	r3, r1
  b4:	2c 0e       	add	r2, r28
  b6:	3d 1e       	adc	r3, r29
				}
			}
			else
			{
				//all( p << ", during next execution there will be continuation of current sub-task ('" << currentSubTask->getSubTaskName() << "')" << endl; )
				aln( "during next execution there will be continuation of current sub-task ('%s')" , currentSubTask->getSubTaskName() )
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	a9 2e       	mov	r10, r25
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	b9 2e       	mov	r11, r25
					currentSubTask = newSubTask;
					currentSubTask->resetInternalState();

					if( !isTimeoutWatcherStarted )
					{
						isTimeoutWatcherStarted = true;
  c0:	55 24       	eor	r5, r5
  c2:	53 94       	inc	r5

	if( blockToServeIncommingConnectionToTheEnd )
	{
		while( true )
		{
			if( isTimeoutWatcherStarted && ( millis() - startTime ) > MAX_TIME_FOR_PROCESS_INCOMMING_HTTP_REQUEST )
  c4:	f6 01       	movw	r30, r12
  c6:	80 81       	ld	r24, Z
  c8:	88 23       	and	r24, r24
  ca:	01 f4       	brne	.+0      	; 0xcc <_ZN10RestServer13processStreamEP6Stream+0xcc>
  cc:	00 c0       	rjmp	.+0      	; 0xce <_ZN10RestServer13processStreamEP6Stream+0xce>
  ce:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
  d2:	dc 01       	movw	r26, r24
  d4:	cb 01       	movw	r24, r22
  d6:	f3 01       	movw	r30, r6
  d8:	40 81       	ld	r20, Z
  da:	51 81       	ldd	r21, Z+1	; 0x01
  dc:	62 81       	ldd	r22, Z+2	; 0x02
  de:	73 81       	ldd	r23, Z+3	; 0x03
  e0:	84 1b       	sub	r24, r20
  e2:	95 0b       	sbc	r25, r21
  e4:	a6 0b       	sbc	r26, r22
  e6:	b7 0b       	sbc	r27, r23
  e8:	89 39       	cpi	r24, 0x99	; 153
  ea:	fa e3       	ldi	r31, 0x3A	; 58
  ec:	9f 07       	cpc	r25, r31
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	af 07       	cpc	r26, r31
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	bf 07       	cpc	r27, r31
  f6:	00 f4       	brcc	.+0      	; 0xf8 <_ZN10RestServer13processStreamEP6Stream+0xf8>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <_ZN10RestServer13processStreamEP6Stream+0xfa>
			{
				//warning( p << prefix << "timeout while processing this request" << endl; )
				wln( "timeout while processing this request" )
  fa:	8a 81       	ldd	r24, Y+2	; 0x02
  fc:	8f 31       	cpi	r24, 0x1F	; 31
  fe:	00 f0       	brcs	.+0      	; 0x100 <_ZN10RestServer13processStreamEP6Stream+0x100>
 100:	00 c0       	rjmp	.+0      	; 0x102 <_ZN10RestServer13processStreamEP6Stream+0x102>
 102:	ce 01       	movw	r24, r28
 104:	60 e0       	ldi	r22, 0x00	; 0
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	40 e0       	ldi	r20, 0x00	; 0
 10a:	50 e0       	ldi	r21, 0x00	; 0
 10c:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 110:	0f 92       	push	r0
 112:	0f 92       	push	r0
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	00 c0       	rjmp	.+0      	; 0x11a <_ZN10RestServer13processStreamEP6Stream+0x11a>
			}

			if( streamReadBytesCounting.getReadBytesCount() > MAX_BYTES_COUNT_OF_INCOMMING_HTTP_REQUEST )
			{
				//warning( p << prefix << "http request max bytes reached while processing this request" << endl; )
				wln( "http request max bytes reached while processing this request" )
 11a:	8a 81       	ldd	r24, Y+2	; 0x02
 11c:	8f 31       	cpi	r24, 0x1F	; 31
 11e:	00 f0       	brcs	.+0      	; 0x120 <_ZN10RestServer13processStreamEP6Stream+0x120>
 120:	00 c0       	rjmp	.+0      	; 0x122 <_ZN10RestServer13processStreamEP6Stream+0x122>
 122:	ce 01       	movw	r24, r28
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	40 e0       	ldi	r20, 0x00	; 0
 12a:	50 e0       	ldi	r21, 0x00	; 0
 12c:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 130:	0f 92       	push	r0
 132:	0f 92       	push	r0
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	00 c0       	rjmp	.+0      	; 0x13a <_ZN10RestServer13processStreamEP6Stream+0x13a>

				break;
			}

			RestServerSubTask* newSubTask = currentSubTask->executeSubTask( streamReadBytesCountingPtr );
 13a:	8c 8d       	ldd	r24, Y+28	; 0x1c
 13c:	9d 8d       	ldd	r25, Y+29	; 0x1d
 13e:	dc 01       	movw	r26, r24
 140:	ed 91       	ld	r30, X+
 142:	fc 91       	ld	r31, X
 144:	d1 01       	movw	r26, r2
 146:	6d 91       	ld	r22, X+
 148:	7c 91       	ld	r23, X
 14a:	04 80       	ldd	r0, Z+4	; 0x04
 14c:	f5 81       	ldd	r31, Z+5	; 0x05
 14e:	e0 2d       	mov	r30, r0
 150:	19 95       	eicall
 152:	8c 01       	movw	r16, r24
 154:	2a 81       	ldd	r18, Y+2	; 0x02

			if( newSubTask != NULL )
 156:	00 97       	sbiw	r24, 0x00	; 0
 158:	01 f4       	brne	.+0      	; 0x15a <_ZN10RestServer13processStreamEP6Stream+0x15a>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <_ZN10RestServer13processStreamEP6Stream+0x15c>
			{
				//all( p << prefix << "finishing work"; )

				if( newSubTask == errorSubTaskPtr )
 15c:	8a 8d       	ldd	r24, Y+26	; 0x1a
 15e:	9b 8d       	ldd	r25, Y+27	; 0x1b
 160:	08 17       	cp	r16, r24
 162:	19 07       	cpc	r17, r25
 164:	01 f4       	brne	.+0      	; 0x166 <_ZN10RestServer13processStreamEP6Stream+0x166>
				{
					//warning( p << prefix << "finishing work, already executed '" << currentSubTask->getSubTaskName() << "' sub-task asked to reset internal state (future execution will start state machine from beginning)" << endl; )
					wln( "finishing work, already executed '%s' sub-task asked to reset internal state (future execution will start state machine from beginning)" , currentSubTask->getSubTaskName() )
 166:	2f 31       	cpi	r18, 0x1F	; 31
 168:	00 f0       	brcs	.+0      	; 0x16a <_ZN10RestServer13processStreamEP6Stream+0x16a>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <_ZN10RestServer13processStreamEP6Stream+0x16c>
 16c:	ce 01       	movw	r24, r28
 16e:	60 e0       	ldi	r22, 0x00	; 0
 170:	70 e0       	ldi	r23, 0x00	; 0
 172:	40 e0       	ldi	r20, 0x00	; 0
 174:	50 e0       	ldi	r21, 0x00	; 0
 176:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 17a:	8c 8d       	ldd	r24, Y+28	; 0x1c
 17c:	9d 8d       	ldd	r25, Y+29	; 0x1d
 17e:	dc 01       	movw	r26, r24
 180:	ed 91       	ld	r30, X+
 182:	fc 91       	ld	r31, X
 184:	01 90       	ld	r0, Z+
 186:	f0 81       	ld	r31, Z
 188:	e0 2d       	mov	r30, r0
 18a:	19 95       	eicall
 18c:	00 d0       	rcall	.+0      	; 0x18e <_ZN10RestServer13processStreamEP6Stream+0x18e>
 18e:	0f 92       	push	r0
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	00 c0       	rjmp	.+0      	; 0x196 <_ZN10RestServer13processStreamEP6Stream+0x196>
					break;
				}
				else
				{
					//all( p << prefix << "finishing work, changing already executed '" << currentSubTask->getSubTaskName() << "' sub-task to '" << newSubTask->getSubTaskName() << "'" << endl; )
					aln( "finishing work, changing already executed '%s' sub-task to '%s'" , currentSubTask->getSubTaskName() , newSubTask->getSubTaskName() )
 196:	2b 30       	cpi	r18, 0x0B	; 11
 198:	00 f4       	brcc	.+0      	; 0x19a <_ZN10RestServer13processStreamEP6Stream+0x19a>
 19a:	ce 01       	movw	r24, r28
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	40 e0       	ldi	r20, 0x00	; 0
 1a2:	50 e0       	ldi	r21, 0x00	; 0
 1a4:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 1a8:	8c 8d       	ldd	r24, Y+28	; 0x1c
 1aa:	9d 8d       	ldd	r25, Y+29	; 0x1d
 1ac:	dc 01       	movw	r26, r24
 1ae:	ed 91       	ld	r30, X+
 1b0:	fc 91       	ld	r31, X
 1b2:	01 90       	ld	r0, Z+
 1b4:	f0 81       	ld	r31, Z
 1b6:	e0 2d       	mov	r30, r0
 1b8:	19 95       	eicall
 1ba:	7c 01       	movw	r14, r24
 1bc:	d8 01       	movw	r26, r16
 1be:	ed 91       	ld	r30, X+
 1c0:	fc 91       	ld	r31, X
 1c2:	01 90       	ld	r0, Z+
 1c4:	f0 81       	ld	r31, Z
 1c6:	e0 2d       	mov	r30, r0
 1c8:	c8 01       	movw	r24, r16
 1ca:	19 95       	eicall
 1cc:	00 d0       	rcall	.+0      	; 0x1ce <_ZN10RestServer13processStreamEP6Stream+0x1ce>
 1ce:	00 d0       	rcall	.+0      	; 0x1d0 <_ZN10RestServer13processStreamEP6Stream+0x1d0>
 1d0:	ed b7       	in	r30, 0x3d	; 61
 1d2:	fe b7       	in	r31, 0x3e	; 62
 1d4:	31 96       	adiw	r30, 0x01	; 1
 1d6:	20 e0       	ldi	r18, 0x00	; 0
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	ad b7       	in	r26, 0x3d	; 61
 1dc:	be b7       	in	r27, 0x3e	; 62
 1de:	12 96       	adiw	r26, 0x02	; 2
 1e0:	3c 93       	st	X, r19
 1e2:	2e 93       	st	-X, r18
 1e4:	11 97       	sbiw	r26, 0x01	; 1
 1e6:	f3 82       	std	Z+3, r15	; 0x03
 1e8:	e2 82       	std	Z+2, r14	; 0x02
 1ea:	95 83       	std	Z+5, r25	; 0x05
 1ec:	84 83       	std	Z+4, r24	; 0x04
 1ee:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 1f2:	0f 90       	pop	r0
 1f4:	0f 90       	pop	r0
 1f6:	0f 90       	pop	r0
 1f8:	0f 90       	pop	r0
 1fa:	ad b7       	in	r26, 0x3d	; 61
 1fc:	be b7       	in	r27, 0x3e	; 62
 1fe:	12 96       	adiw	r26, 0x02	; 2
 200:	bc 92       	st	X, r11
 202:	ae 92       	st	-X, r10
 204:	11 97       	sbiw	r26, 0x01	; 1
 206:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0

					currentSubTask = newSubTask;
 20e:	1d 8f       	std	Y+29, r17	; 0x1d
 210:	0c 8f       	std	Y+28, r16	; 0x1c
					currentSubTask->resetInternalState();
 212:	d8 01       	movw	r26, r16
 214:	ed 91       	ld	r30, X+
 216:	fc 91       	ld	r31, X
 218:	02 80       	ldd	r0, Z+2	; 0x02
 21a:	f3 81       	ldd	r31, Z+3	; 0x03
 21c:	e0 2d       	mov	r30, r0
 21e:	c8 01       	movw	r24, r16
 220:	19 95       	eicall

					if( !isTimeoutWatcherStarted )
 222:	f6 01       	movw	r30, r12
 224:	80 81       	ld	r24, Z
 226:	88 23       	and	r24, r24
 228:	01 f0       	breq	.+0      	; 0x22a <_ZN10RestServer13processStreamEP6Stream+0x22a>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <_ZN10RestServer13processStreamEP6Stream+0x22c>
					{
						isTimeoutWatcherStarted = true;
 22c:	50 82       	st	Z, r5
						startTime = millis();
 22e:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 232:	dc 01       	movw	r26, r24
 234:	cb 01       	movw	r24, r22
 236:	f3 01       	movw	r30, r6
 238:	80 83       	st	Z, r24
 23a:	91 83       	std	Z+1, r25	; 0x01
 23c:	a2 83       	std	Z+2, r26	; 0x02
 23e:	b3 83       	std	Z+3, r27	; 0x03
						iln( "start time counter" )
 240:	8a 81       	ldd	r24, Y+2	; 0x02
 242:	85 31       	cpi	r24, 0x15	; 21
 244:	00 f0       	brcs	.+0      	; 0x246 <_ZN10RestServer13processStreamEP6Stream+0x246>
 246:	00 c0       	rjmp	.+0      	; 0x248 <_ZN10RestServer13processStreamEP6Stream+0x248>
 248:	ce 01       	movw	r24, r28
 24a:	60 e0       	ldi	r22, 0x00	; 0
 24c:	70 e0       	ldi	r23, 0x00	; 0
 24e:	40 e0       	ldi	r20, 0x00	; 0
 250:	50 e0       	ldi	r21, 0x00	; 0
 252:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 256:	0f 92       	push	r0
 258:	0f 92       	push	r0
 25a:	e0 e0       	ldi	r30, 0x00	; 0
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	ad b7       	in	r26, 0x3d	; 61
 260:	be b7       	in	r27, 0x3e	; 62
 262:	12 96       	adiw	r26, 0x02	; 2
 264:	fc 93       	st	X, r31
 266:	ee 93       	st	-X, r30
 268:	11 97       	sbiw	r26, 0x01	; 1
 26a:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <_ZN10RestServer13processStreamEP6Stream+0x270>
				}
			}
			else
			{
				//all( p << ", during next execution there will be continuation of current sub-task ('" << currentSubTask->getSubTaskName() << "')" << endl; )
				aln( "during next execution there will be continuation of current sub-task ('%s')" , currentSubTask->getSubTaskName() )
 270:	2b 30       	cpi	r18, 0x0B	; 11
 272:	00 f0       	brcs	.+0      	; 0x274 <_ZN10RestServer13processStreamEP6Stream+0x274>
 274:	00 c0       	rjmp	.+0      	; 0x276 <_ZN10RestServer13processStreamEP6Stream+0x276>
 276:	ce 01       	movw	r24, r28
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	40 e0       	ldi	r20, 0x00	; 0
 27e:	50 e0       	ldi	r21, 0x00	; 0
 280:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 284:	8c 8d       	ldd	r24, Y+28	; 0x1c
 286:	9d 8d       	ldd	r25, Y+29	; 0x1d
 288:	dc 01       	movw	r26, r24
 28a:	ed 91       	ld	r30, X+
 28c:	fc 91       	ld	r31, X
 28e:	01 90       	ld	r0, Z+
 290:	f0 81       	ld	r31, Z
 292:	e0 2d       	mov	r30, r0
 294:	19 95       	eicall
 296:	00 d0       	rcall	.+0      	; 0x298 <_ZN10RestServer13processStreamEP6Stream+0x298>
 298:	0f 92       	push	r0
 29a:	20 e0       	ldi	r18, 0x00	; 0
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	ed b7       	in	r30, 0x3d	; 61
 2a0:	fe b7       	in	r31, 0x3e	; 62
 2a2:	32 83       	std	Z+2, r19	; 0x02
 2a4:	21 83       	std	Z+1, r18	; 0x01
 2a6:	94 83       	std	Z+4, r25	; 0x04
 2a8:	83 83       	std	Z+3, r24	; 0x03
 2aa:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 2ae:	0f 90       	pop	r0
 2b0:	0f 90       	pop	r0
 2b2:	ad b7       	in	r26, 0x3d	; 61
 2b4:	be b7       	in	r27, 0x3e	; 62
 2b6:	12 96       	adiw	r26, 0x02	; 2
 2b8:	bc 92       	st	X, r11
 2ba:	ae 92       	st	-X, r10
 2bc:	11 97       	sbiw	r26, 0x01	; 1
 2be:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 2c2:	0f 90       	pop	r0
 2c4:	0f 90       	pop	r0
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <_ZN10RestServer13processStreamEP6Stream+0x2c8>
		resetInternalState();
		return true;
	}
	else
	{
		if( isTimeoutWatcherStarted && ( ( millis() - startTime ) ) > MAX_TIME_FOR_PROCESS_INCOMMING_HTTP_REQUEST )
 2c8:	fe 01       	movw	r30, r28
 2ca:	ed 50       	subi	r30, 0x0D	; 13
 2cc:	ff 4f       	sbci	r31, 0xFF	; 255
 2ce:	80 81       	ld	r24, Z
 2d0:	88 23       	and	r24, r24
 2d2:	01 f4       	brne	.+0      	; 0x2d4 <_ZN10RestServer13processStreamEP6Stream+0x2d4>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <_ZN10RestServer13processStreamEP6Stream+0x2d6>
 2d6:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 2da:	dc 01       	movw	r26, r24
 2dc:	cb 01       	movw	r24, r22
 2de:	fe 01       	movw	r30, r28
 2e0:	ec 50       	subi	r30, 0x0C	; 12
 2e2:	ff 4f       	sbci	r31, 0xFF	; 255
 2e4:	40 81       	ld	r20, Z
 2e6:	51 81       	ldd	r21, Z+1	; 0x01
 2e8:	62 81       	ldd	r22, Z+2	; 0x02
 2ea:	73 81       	ldd	r23, Z+3	; 0x03
 2ec:	84 1b       	sub	r24, r20
 2ee:	95 0b       	sbc	r25, r21
 2f0:	a6 0b       	sbc	r26, r22
 2f2:	b7 0b       	sbc	r27, r23
 2f4:	89 39       	cpi	r24, 0x99	; 153
 2f6:	ea e3       	ldi	r30, 0x3A	; 58
 2f8:	9e 07       	cpc	r25, r30
 2fa:	e0 e0       	ldi	r30, 0x00	; 0
 2fc:	ae 07       	cpc	r26, r30
 2fe:	e0 e0       	ldi	r30, 0x00	; 0
 300:	be 07       	cpc	r27, r30
 302:	00 f4       	brcc	.+0      	; 0x304 <_ZN10RestServer13processStreamEP6Stream+0x304>
 304:	00 c0       	rjmp	.+0      	; 0x306 <_ZN10RestServer13processStreamEP6Stream+0x306>
		{
			//warning( p << prefix << "timeout while processing this request" << endl; )
			wln( "timeout while processing this request" )
 306:	8a 81       	ldd	r24, Y+2	; 0x02
 308:	8f 31       	cpi	r24, 0x1F	; 31
 30a:	00 f0       	brcs	.+0      	; 0x30c <_ZN10RestServer13processStreamEP6Stream+0x30c>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <_ZN10RestServer13processStreamEP6Stream+0x30e>
 30e:	ce 01       	movw	r24, r28
 310:	60 e0       	ldi	r22, 0x00	; 0
 312:	70 e0       	ldi	r23, 0x00	; 0
 314:	40 e0       	ldi	r20, 0x00	; 0
 316:	50 e0       	ldi	r21, 0x00	; 0
 318:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 31c:	0f 92       	push	r0
 31e:	0f 92       	push	r0
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	00 c0       	rjmp	.+0      	; 0x326 <_ZN10RestServer13processStreamEP6Stream+0x326>
		}

		if( streamReadBytesCounting.getReadBytesCount() > MAX_BYTES_COUNT_OF_INCOMMING_HTTP_REQUEST )
		{
			//warning( p << prefix << "http request max bytes reached while processing this request" << endl; )
			wln( "http request max bytes reached while processing this request" )
 326:	8a 81       	ldd	r24, Y+2	; 0x02
 328:	8f 31       	cpi	r24, 0x1F	; 31
 32a:	00 f0       	brcs	.+0      	; 0x32c <_ZN10RestServer13processStreamEP6Stream+0x32c>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <_ZN10RestServer13processStreamEP6Stream+0x32e>
 32e:	ce 01       	movw	r24, r28
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	70 e0       	ldi	r23, 0x00	; 0
 334:	40 e0       	ldi	r20, 0x00	; 0
 336:	50 e0       	ldi	r21, 0x00	; 0
 338:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 33c:	0f 92       	push	r0
 33e:	0f 92       	push	r0
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	ad b7       	in	r26, 0x3d	; 61
 346:	be b7       	in	r27, 0x3e	; 62
 348:	12 96       	adiw	r26, 0x02	; 2
 34a:	9c 93       	st	X, r25
 34c:	8e 93       	st	-X, r24
 34e:	11 97       	sbiw	r26, 0x01	; 1
 350:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	ed b7       	in	r30, 0x3d	; 61
 35a:	fe b7       	in	r31, 0x3e	; 62
 35c:	92 83       	std	Z+2, r25	; 0x02
 35e:	81 83       	std	Z+1, r24	; 0x01
 360:	00 c0       	rjmp	.+0      	; 0x362 <_ZN10RestServer13processStreamEP6Stream+0x362>

			resetInternalState();
			return true;
		}

		RestServerSubTask* newSubTask = currentSubTask->executeSubTask( streamReadBytesCountingPtr );
 362:	8c 8d       	ldd	r24, Y+28	; 0x1c
 364:	9d 8d       	ldd	r25, Y+29	; 0x1d
 366:	fc 01       	movw	r30, r24
 368:	a0 81       	ld	r26, Z
 36a:	b1 81       	ldd	r27, Z+1	; 0x01
 36c:	fe 01       	movw	r30, r28
 36e:	ef 50       	subi	r30, 0x0F	; 15
 370:	ff 4f       	sbci	r31, 0xFF	; 255
 372:	60 81       	ld	r22, Z
 374:	71 81       	ldd	r23, Z+1	; 0x01
 376:	14 96       	adiw	r26, 0x04	; 4
 378:	ed 91       	ld	r30, X+
 37a:	fc 91       	ld	r31, X
 37c:	15 97       	sbiw	r26, 0x05	; 5
 37e:	19 95       	eicall
 380:	8c 01       	movw	r16, r24
 382:	2a 81       	ldd	r18, Y+2	; 0x02

		if( newSubTask != NULL )
 384:	00 97       	sbiw	r24, 0x00	; 0
 386:	01 f4       	brne	.+0      	; 0x388 <_ZN10RestServer13processStreamEP6Stream+0x388>
 388:	00 c0       	rjmp	.+0      	; 0x38a <_ZN10RestServer13processStreamEP6Stream+0x38a>
		{
			//all( p << prefix << "finishing work"; )

			if( newSubTask == errorSubTaskPtr )
 38a:	8a 8d       	ldd	r24, Y+26	; 0x1a
 38c:	9b 8d       	ldd	r25, Y+27	; 0x1b
 38e:	08 17       	cp	r16, r24
 390:	19 07       	cpc	r17, r25
 392:	01 f4       	brne	.+0      	; 0x394 <_ZN10RestServer13processStreamEP6Stream+0x394>
			{
				//warning( p << prefix << "finishing work, already executed '" << currentSubTask->getSubTaskName() << "' sub-task asked to reset internal state (future execution will start state machine from beginning)" << endl; )
				wln( "finishing work, already executed '%s' sub-task asked to reset internal state (future execution will start state machine from beginning)" , currentSubTask->getSubTaskName() )
 394:	2f 31       	cpi	r18, 0x1F	; 31
 396:	00 f4       	brcc	.+0      	; 0x398 <_ZN10RestServer13processStreamEP6Stream+0x398>
 398:	ce 01       	movw	r24, r28
 39a:	60 e0       	ldi	r22, 0x00	; 0
 39c:	70 e0       	ldi	r23, 0x00	; 0
 39e:	40 e0       	ldi	r20, 0x00	; 0
 3a0:	50 e0       	ldi	r21, 0x00	; 0
 3a2:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 3a6:	8c 8d       	ldd	r24, Y+28	; 0x1c
 3a8:	9d 8d       	ldd	r25, Y+29	; 0x1d
 3aa:	dc 01       	movw	r26, r24
 3ac:	ed 91       	ld	r30, X+
 3ae:	fc 91       	ld	r31, X
 3b0:	01 90       	ld	r0, Z+
 3b2:	f0 81       	ld	r31, Z
 3b4:	e0 2d       	mov	r30, r0
 3b6:	19 95       	eicall
 3b8:	00 d0       	rcall	.+0      	; 0x3ba <_ZN10RestServer13processStreamEP6Stream+0x3ba>
 3ba:	0f 92       	push	r0
 3bc:	20 e0       	ldi	r18, 0x00	; 0
 3be:	30 e0       	ldi	r19, 0x00	; 0
 3c0:	ed b7       	in	r30, 0x3d	; 61
 3c2:	fe b7       	in	r31, 0x3e	; 62
 3c4:	32 83       	std	Z+2, r19	; 0x02
 3c6:	21 83       	std	Z+1, r18	; 0x01
 3c8:	94 83       	std	Z+4, r25	; 0x04
 3ca:	83 83       	std	Z+3, r24	; 0x03
 3cc:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 3d0:	0f 90       	pop	r0
 3d2:	0f 90       	pop	r0
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	ad b7       	in	r26, 0x3d	; 61
 3da:	be b7       	in	r27, 0x3e	; 62
 3dc:	12 96       	adiw	r26, 0x02	; 2
 3de:	9c 93       	st	X, r25
 3e0:	8e 93       	st	-X, r24
 3e2:	11 97       	sbiw	r26, 0x01	; 1
 3e4:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 3e8:	0f 90       	pop	r0
 3ea:	0f 90       	pop	r0

				resetInternalState();
 3ec:	ce 01       	movw	r24, r28
 3ee:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
				return true;
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <_ZN10RestServer13processStreamEP6Stream+0x3f6>
			}
			else
			{
				//info( p << prefix << "finishing work, changing already executed '" << currentSubTask->getSubTaskName() << "' sub-task to '" << newSubTask->getSubTaskName() << "'" << endl; )
				aln( "finishing work, changing already executed '%s' sub-task to '%s'" , currentSubTask->getSubTaskName() , newSubTask->getSubTaskName() )
 3f6:	2b 30       	cpi	r18, 0x0B	; 11
 3f8:	00 f4       	brcc	.+0      	; 0x3fa <_ZN10RestServer13processStreamEP6Stream+0x3fa>
 3fa:	ce 01       	movw	r24, r28
 3fc:	60 e0       	ldi	r22, 0x00	; 0
 3fe:	70 e0       	ldi	r23, 0x00	; 0
 400:	40 e0       	ldi	r20, 0x00	; 0
 402:	50 e0       	ldi	r21, 0x00	; 0
 404:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 408:	8c 8d       	ldd	r24, Y+28	; 0x1c
 40a:	9d 8d       	ldd	r25, Y+29	; 0x1d
 40c:	dc 01       	movw	r26, r24
 40e:	ed 91       	ld	r30, X+
 410:	fc 91       	ld	r31, X
 412:	01 90       	ld	r0, Z+
 414:	f0 81       	ld	r31, Z
 416:	e0 2d       	mov	r30, r0
 418:	19 95       	eicall
 41a:	7c 01       	movw	r14, r24
 41c:	d8 01       	movw	r26, r16
 41e:	ed 91       	ld	r30, X+
 420:	fc 91       	ld	r31, X
 422:	01 90       	ld	r0, Z+
 424:	f0 81       	ld	r31, Z
 426:	e0 2d       	mov	r30, r0
 428:	c8 01       	movw	r24, r16
 42a:	19 95       	eicall
 42c:	00 d0       	rcall	.+0      	; 0x42e <_ZN10RestServer13processStreamEP6Stream+0x42e>
 42e:	00 d0       	rcall	.+0      	; 0x430 <_ZN10RestServer13processStreamEP6Stream+0x430>
 430:	ed b7       	in	r30, 0x3d	; 61
 432:	fe b7       	in	r31, 0x3e	; 62
 434:	31 96       	adiw	r30, 0x01	; 1
 436:	20 e0       	ldi	r18, 0x00	; 0
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	ad b7       	in	r26, 0x3d	; 61
 43c:	be b7       	in	r27, 0x3e	; 62
 43e:	12 96       	adiw	r26, 0x02	; 2
 440:	3c 93       	st	X, r19
 442:	2e 93       	st	-X, r18
 444:	11 97       	sbiw	r26, 0x01	; 1
 446:	f3 82       	std	Z+3, r15	; 0x03
 448:	e2 82       	std	Z+2, r14	; 0x02
 44a:	95 83       	std	Z+5, r25	; 0x05
 44c:	84 83       	std	Z+4, r24	; 0x04
 44e:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 452:	0f 90       	pop	r0
 454:	0f 90       	pop	r0
 456:	0f 90       	pop	r0
 458:	0f 90       	pop	r0
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	ed b7       	in	r30, 0x3d	; 61
 460:	fe b7       	in	r31, 0x3e	; 62
 462:	92 83       	std	Z+2, r25	; 0x02
 464:	81 83       	std	Z+1, r24	; 0x01
 466:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 46a:	0f 90       	pop	r0
 46c:	0f 90       	pop	r0

				currentSubTask = newSubTask;
 46e:	1d 8f       	std	Y+29, r17	; 0x1d
 470:	0c 8f       	std	Y+28, r16	; 0x1c
				currentSubTask->resetInternalState();
 472:	d8 01       	movw	r26, r16
 474:	ed 91       	ld	r30, X+
 476:	fc 91       	ld	r31, X
 478:	02 80       	ldd	r0, Z+2	; 0x02
 47a:	f3 81       	ldd	r31, Z+3	; 0x03
 47c:	e0 2d       	mov	r30, r0
 47e:	c8 01       	movw	r24, r16
 480:	19 95       	eicall

				if( !isTimeoutWatcherStarted )
 482:	fe 01       	movw	r30, r28
 484:	ed 50       	subi	r30, 0x0D	; 13
 486:	ff 4f       	sbci	r31, 0xFF	; 255
 488:	80 81       	ld	r24, Z
 48a:	88 23       	and	r24, r24
 48c:	01 f0       	breq	.+0      	; 0x48e <_ZN10RestServer13processStreamEP6Stream+0x48e>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <_ZN10RestServer13processStreamEP6Stream+0x490>
				{
					isTimeoutWatcherStarted = true;
 490:	81 e0       	ldi	r24, 0x01	; 1
 492:	80 83       	st	Z, r24
					startTime = millis();
 494:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 498:	dc 01       	movw	r26, r24
 49a:	cb 01       	movw	r24, r22
 49c:	fe 01       	movw	r30, r28
 49e:	ec 50       	subi	r30, 0x0C	; 12
 4a0:	ff 4f       	sbci	r31, 0xFF	; 255
 4a2:	80 83       	st	Z, r24
 4a4:	91 83       	std	Z+1, r25	; 0x01
 4a6:	a2 83       	std	Z+2, r26	; 0x02
 4a8:	b3 83       	std	Z+3, r27	; 0x03

					//info( p << prefix << "start time counter" << endl; )
					aln( "start time counter" )
 4aa:	8a 81       	ldd	r24, Y+2	; 0x02
 4ac:	8b 30       	cpi	r24, 0x0B	; 11
 4ae:	00 f4       	brcc	.+0      	; 0x4b0 <_ZN10RestServer13processStreamEP6Stream+0x4b0>
 4b0:	ce 01       	movw	r24, r28
 4b2:	60 e0       	ldi	r22, 0x00	; 0
 4b4:	70 e0       	ldi	r23, 0x00	; 0
 4b6:	40 e0       	ldi	r20, 0x00	; 0
 4b8:	50 e0       	ldi	r21, 0x00	; 0
 4ba:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 4be:	0f 92       	push	r0
 4c0:	0f 92       	push	r0
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	ed b7       	in	r30, 0x3d	; 61
 4c8:	fe b7       	in	r31, 0x3e	; 62
 4ca:	92 83       	std	Z+2, r25	; 0x02
 4cc:	81 83       	std	Z+1, r24	; 0x01
 4ce:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <_ZN10RestServer13processStreamEP6Stream+0x4d4>
			}
		}
		else
		{
			//all( p << ", during next execution there will be continuation of current sub-task ('" << currentSubTask->getSubTaskName() << "')" << endl; )
			aln( "during next execution there will be continuation of current sub-task ('%s')" , currentSubTask->getSubTaskName() )
 4d4:	2b 30       	cpi	r18, 0x0B	; 11
 4d6:	00 f4       	brcc	.+0      	; 0x4d8 <_ZN10RestServer13processStreamEP6Stream+0x4d8>
 4d8:	ce 01       	movw	r24, r28
 4da:	60 e0       	ldi	r22, 0x00	; 0
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	40 e0       	ldi	r20, 0x00	; 0
 4e0:	50 e0       	ldi	r21, 0x00	; 0
 4e2:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 4e6:	8c 8d       	ldd	r24, Y+28	; 0x1c
 4e8:	9d 8d       	ldd	r25, Y+29	; 0x1d
 4ea:	dc 01       	movw	r26, r24
 4ec:	ed 91       	ld	r30, X+
 4ee:	fc 91       	ld	r31, X
 4f0:	01 90       	ld	r0, Z+
 4f2:	f0 81       	ld	r31, Z
 4f4:	e0 2d       	mov	r30, r0
 4f6:	19 95       	eicall
 4f8:	00 d0       	rcall	.+0      	; 0x4fa <_ZN10RestServer13processStreamEP6Stream+0x4fa>
 4fa:	0f 92       	push	r0
 4fc:	20 e0       	ldi	r18, 0x00	; 0
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	ed b7       	in	r30, 0x3d	; 61
 502:	fe b7       	in	r31, 0x3e	; 62
 504:	32 83       	std	Z+2, r19	; 0x02
 506:	21 83       	std	Z+1, r18	; 0x01
 508:	94 83       	std	Z+4, r25	; 0x04
 50a:	83 83       	std	Z+3, r24	; 0x03
 50c:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 510:	0f 90       	pop	r0
 512:	0f 90       	pop	r0
 514:	80 e0       	ldi	r24, 0x00	; 0
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	ad b7       	in	r26, 0x3d	; 61
 51a:	be b7       	in	r27, 0x3e	; 62
 51c:	12 96       	adiw	r26, 0x02	; 2
 51e:	9c 93       	st	X, r25
 520:	8e 93       	st	-X, r24
 522:	11 97       	sbiw	r26, 0x01	; 1
 524:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 528:	0f 90       	pop	r0
 52a:	0f 90       	pop	r0

			return false;
 52c:	80 e0       	ldi	r24, 0x00	; 0
		}
	}
}
 52e:	df 91       	pop	r29
 530:	cf 91       	pop	r28
 532:	1f 91       	pop	r17
 534:	0f 91       	pop	r16
 536:	ff 90       	pop	r15
 538:	ef 90       	pop	r14
 53a:	df 90       	pop	r13
 53c:	cf 90       	pop	r12
 53e:	bf 90       	pop	r11
 540:	af 90       	pop	r10
 542:	9f 90       	pop	r9
 544:	8f 90       	pop	r8
 546:	7f 90       	pop	r7
 548:	6f 90       	pop	r6
 54a:	5f 90       	pop	r5
 54c:	3f 90       	pop	r3
 54e:	2f 90       	pop	r2
 550:	08 95       	ret
				wln( "timeout while processing this request" )

				break;
			}

			if( streamReadBytesCounting.getReadBytesCount() > MAX_BYTES_COUNT_OF_INCOMMING_HTTP_REQUEST )
 552:	c4 01       	movw	r24, r8
 554:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 558:	b8 e2       	ldi	r27, 0x28	; 40
 55a:	81 30       	cpi	r24, 0x01	; 1
 55c:	9b 07       	cpc	r25, r27
 55e:	00 f4       	brcc	.+0      	; 0x560 <_ZN10RestServer13processStreamEP6Stream+0x560>
 560:	00 c0       	rjmp	.+0      	; 0x562 <_ZN10RestServer13processStreamEP6Stream+0x562>
 562:	00 c0       	rjmp	.+0      	; 0x564 <_ZN10RestServer13processStreamEP6Stream+0x564>

			resetInternalState();
			return true;
		}

		if( streamReadBytesCounting.getReadBytesCount() > MAX_BYTES_COUNT_OF_INCOMMING_HTTP_REQUEST )
 564:	c4 01       	movw	r24, r8
 566:	0e 94 00 00 	call	0	; 0x0 <_ZN10RestServer13processStreamEP6Stream>
 56a:	e8 e2       	ldi	r30, 0x28	; 40
 56c:	81 30       	cpi	r24, 0x01	; 1
 56e:	9e 07       	cpc	r25, r30
 570:	00 f0       	brcs	.+0      	; 0x572 <_ZN10RestServer13processStreamEP6Stream+0x572>
 572:	00 c0       	rjmp	.+0      	; 0x574 <_ZN10RestServer13processStreamEP6Stream+0x574>
 574:	00 c0       	rjmp	.+0      	; 0x576 <_ZZN10RestServer13processStreamEP6StreamE3__c_11+0x26d>

RestService.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         000007c8  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000032c7  00000000  00000000  000007fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN11RestService18writeValueToStreamEP6Stream 00000002  00000000  00000000  00003ac3  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN11RestService17renderValueSetterEP6Streamb 00000002  00000000  00000000  00003ac5  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN11RestService15getBooleanValueEv 00000004  00000000  00000000  00003ac7  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN11RestService12setTextValueEPh 00000002  00000000  00000000  00003acb  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text._ZN11RestService15setBooleanValueEb 00000002  00000000  00000000  00003acd  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .text._ZN11RestService11setIntValueEi 00000002  00000000  00000000  00003acf  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text._ZN11RestService14getIntMinValueEv 00000006  00000000  00000000  00003ad1  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text._ZN11RestService14getIntMaxValueEv 00000006  00000000  00000000  00003ad7  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text._ZN11RestServiceC2EhPKch 00000014  00000000  00000000  00003add  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .rodata._ZTV11RestService 00000014  00000000  00000000  00003af1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN11RestService18writeValueToStreamEP6Stream:

00000000 <_ZN11RestService18writeValueToStreamEP6Stream>:

#include "RestService.h"

// =================================================

RestService::RestService( unsigned char _id , const char* _name , unsigned char _type )
   0:	08 95       	ret

Disassembly of section .text._ZN11RestService17renderValueSetterEP6Streamb:

00000000 <_ZN11RestService17renderValueSetterEP6Streamb>:
   0:	08 95       	ret

Disassembly of section .text._ZN11RestService15getBooleanValueEv:

00000000 <_ZN11RestService15getBooleanValueEv>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	08 95       	ret

Disassembly of section .text._ZN11RestService12setTextValueEPh:

00000000 <_ZN11RestService12setTextValueEPh>:
   0:	08 95       	ret

Disassembly of section .text._ZN11RestService15setBooleanValueEb:

00000000 <_ZN11RestService15setBooleanValueEb>:
   0:	08 95       	ret

Disassembly of section .text._ZN11RestService11setIntValueEi:

00000000 <_ZN11RestService11setIntValueEi>:
   0:	08 95       	ret

Disassembly of section .text._ZN11RestService14getIntMinValueEv:

00000000 <_ZN11RestService14getIntMinValueEv>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN11RestService14getIntMaxValueEv:

00000000 <_ZN11RestService14getIntMaxValueEv>:
   0:	81 e0       	ldi	r24, 0x01	; 1
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN11RestServiceC2EhPKch:

00000000 <_ZN11RestServiceC1EhPKch>:
   0:	fc 01       	movw	r30, r24
   2:	80 e0       	ldi	r24, 0x00	; 0
   4:	90 e0       	ldi	r25, 0x00	; 0
   6:	91 83       	std	Z+1, r25	; 0x01
   8:	80 83       	st	Z, r24
{
	id = _id;
   a:	62 83       	std	Z+2, r22	; 0x02
	name = _name;
   c:	54 83       	std	Z+4, r21	; 0x04
   e:	43 83       	std	Z+3, r20	; 0x03
	type = _type;
  10:	25 83       	std	Z+5, r18	; 0x05
}
  12:	08 95       	ret

SendResponseSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000004a  2**0
                  ALLOC
  3 .stab         00000a44  00000000  00000000  0000004c  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003e64  00000000  00000000  00000a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN19SendResponseSubTask14getSubTaskNameEv 00000006  00000000  00000000  000048f4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN19SendResponseSubTask18resetInternalStateEv 00000006  00000000  00000000  000048fa  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN19SendResponseSubTask14executeSubTaskEP6Stream 0000029a  00000000  00000000  00004900  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN19SendResponseSubTaskC2EP17RestServerSubTaskP12PageRendererS3_bP9AnyBufferIhhE 00000066  00000000  00000000  00004b9a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh 000000b8  00000000  00000000  00004c00  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .rodata._ZTV19SendResponseSubTask 0000000a  00000000  00000000  00004cb8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 11 .rodata._ZTV17RestServerSubTask 0000000a  00000000  00000000  00004cc2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .progmem.data 00000109  00000000  00000000  00004ccc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN19SendResponseSubTask14getSubTaskNameEv:

00000000 <_ZN19SendResponseSubTask14getSubTaskNameEv>:
}

// =================================================

void SendResponseSubTask::setWork( bool _isGETHttpMethod , bool _sendResponseInJSON, bool _sendResponseAsServiceMetaDescription , ServiceDescription* _selectdServices , unsigned char _selectedServicesCount )
{
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN19SendResponseSubTask18resetInternalStateEv:

00000000 <_ZN19SendResponseSubTask18resetInternalStateEv>:
   0:	fc 01       	movw	r30, r24
   2:	14 86       	std	Z+12, r1	; 0x0c
   4:	08 95       	ret

Disassembly of section .text._ZN19SendResponseSubTask14executeSubTaskEP6Stream:

00000000 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
	static const PROGMEM prog_char functionName[] = "setWork";
	//static const char* prefix = "SendResponseSubTask:setWork():";

	isGETHttpMethod = _isGETHttpMethod;
   c:	cf 93       	push	r28
	sendResponseInJSON = _sendResponseInJSON;
   e:	df 93       	push	r29
	sendResponseAsServiceMetaDescription = _sendResponseAsServiceMetaDescription;
  10:	8c 01       	movw	r16, r24
	selectdServices = _selectdServices;
  12:	6b 01       	movw	r12, r22
  14:	dc 01       	movw	r26, r24
	selectedServicesCount = _selectedServicesCount;
  16:	1d 96       	adiw	r26, 0x0d	; 13

	if( sendResponseAsServiceMetaDescription ) sendResponseInJSON = true;
  18:	8c 91       	ld	r24, X
  1a:	1d 97       	sbiw	r26, 0x0d	; 13
  1c:	88 23       	and	r24, r24
  1e:	01 f4       	brne	.+0      	; 0x20 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x20>

	//all( p << prefix << "isGETHttpMethod = " << isGETHttpMethod << ", sendResponseInJSON = " << sendResponseInJSON << ", sendResponseAsServiceMetaDescription = " << sendResponseAsServiceMetaDescription << ", selectedServicesCount = " << selectedServicesCount << endl; )
	//all( wpln( "isGETHttpMethod = %u, sendResponseInJSON = %u, sendResponseAsServiceMetaDescription = %u, selectedServicesCount = %u" , isGETHttpMethod , sendResponseInJSON , sendResponseAsServiceMetaDescription , selectedServicesCount ) )
	aln( "isGETHttpMethod = %u, sendResponseInJSON = %u, sendResponseAsServiceMetaDescription = %u, selectedServicesCount = %u" , isGETHttpMethod , sendResponseInJSON , sendResponseAsServiceMetaDescription , selectedServicesCount )
  20:	15 96       	adiw	r26, 0x05	; 5
  22:	8d 91       	ld	r24, X+
  24:	9c 91       	ld	r25, X
  26:	16 97       	sbiw	r26, 0x06	; 6
  28:	00 c0       	rjmp	.+0      	; 0x2a <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x2a>
  2a:	e8 01       	movw	r28, r16
  2c:	8c 81       	ldd	r24, Y+4	; 0x04
  2e:	8b 30       	cpi	r24, 0x0B	; 11
  30:	00 f0       	brcs	.+0      	; 0x32 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x32>
  32:	00 c0       	rjmp	.+0      	; 0x34 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x34>
  34:	c8 01       	movw	r24, r16
  36:	02 96       	adiw	r24, 0x02	; 2
  38:	60 e0       	ldi	r22, 0x00	; 0
  3a:	70 e0       	ldi	r23, 0x00	; 0
  3c:	40 e0       	ldi	r20, 0x00	; 0
  3e:	50 e0       	ldi	r21, 0x00	; 0
  40:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>
  44:	8c 85       	ldd	r24, Y+12	; 0x0c
  46:	ed b7       	in	r30, 0x3d	; 61
  48:	fe b7       	in	r31, 0x3e	; 62
  4a:	38 97       	sbiw	r30, 0x08	; 8
  4c:	0f b6       	in	r0, 0x3f	; 63
  4e:	f8 94       	cli
  50:	fe bf       	out	0x3e, r31	; 62
  52:	0f be       	out	0x3f, r0	; 63
  54:	ed bf       	out	0x3d, r30	; 61
  56:	ad b7       	in	r26, 0x3d	; 61
  58:	be b7       	in	r27, 0x3e	; 62
  5a:	11 96       	adiw	r26, 0x01	; 1
  5c:	20 e0       	ldi	r18, 0x00	; 0
  5e:	30 e0       	ldi	r19, 0x00	; 0
  60:	cd b7       	in	r28, 0x3d	; 61
  62:	de b7       	in	r29, 0x3e	; 62
  64:	3a 83       	std	Y+2, r19	; 0x02
  66:	29 83       	std	Y+1, r18	; 0x01
  68:	12 96       	adiw	r26, 0x02	; 2
  6a:	8c 93       	st	X, r24
  6c:	12 97       	sbiw	r26, 0x02	; 2
  6e:	13 96       	adiw	r26, 0x03	; 3
  70:	1c 92       	st	X, r1
  72:	13 97       	sbiw	r26, 0x03	; 3
  74:	90 e0       	ldi	r25, 0x00	; 0
  76:	88 0f       	add	r24, r24
  78:	99 1f       	adc	r25, r25
  7a:	88 0f       	add	r24, r24
  7c:	99 1f       	adc	r25, r25
  7e:	e8 01       	movw	r28, r16
  80:	e8 89       	ldd	r30, Y+16	; 0x10
  82:	f9 89       	ldd	r31, Y+17	; 0x11
  84:	e8 0f       	add	r30, r24
  86:	f9 1f       	adc	r31, r25
  88:	01 90       	ld	r0, Z+
  8a:	f0 81       	ld	r31, Z
  8c:	e0 2d       	mov	r30, r0
  8e:	83 81       	ldd	r24, Z+3	; 0x03
  90:	94 81       	ldd	r25, Z+4	; 0x04
  92:	15 96       	adiw	r26, 0x05	; 5
  94:	9c 93       	st	X, r25
  96:	8e 93       	st	-X, r24

	currentPageRenderer = sendResponseInJSON ? jsonPageRenderer : htmlPageRenderer;
  98:	14 97       	sbiw	r26, 0x04	; 4
  9a:	8a 89       	ldd	r24, Y+18	; 0x12
  9c:	16 96       	adiw	r26, 0x06	; 6
  9e:	8c 93       	st	X, r24
  a0:	16 97       	sbiw	r26, 0x06	; 6
  a2:	17 96       	adiw	r26, 0x07	; 7
  a4:	1c 92       	st	X, r1
  a6:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>
  aa:	ed b7       	in	r30, 0x3d	; 61

	//if( sendResponseInJSON )
	//	currentPageRenderer = jsonPageRenderer;
	//else
	//	currentPageRenderer = htmlPageRenderer;
}
  ac:	fe b7       	in	r31, 0x3e	; 62
  ae:	36 96       	adiw	r30, 0x06	; 6
  b0:	0f b6       	in	r0, 0x3f	; 63
  b2:	f8 94       	cli
  b4:	fe bf       	out	0x3e, r31	; 62
  b6:	0f be       	out	0x3f, r0	; 63
  b8:	ed bf       	out	0x3d, r30	; 61
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	92 83       	std	Z+2, r25	; 0x02
  c0:	81 83       	std	Z+1, r24	; 0x01
  c2:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>
  c6:	0f 90       	pop	r0
  c8:	0f 90       	pop	r0
  ca:	d8 01       	movw	r26, r16
  cc:	1c 96       	adiw	r26, 0x0c	; 12
  ce:	8c 91       	ld	r24, X
  d0:	1c 97       	sbiw	r26, 0x0c	; 12
  d2:	88 23       	and	r24, r24
  d4:	01 f4       	brne	.+0      	; 0xd6 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0xd6>
  d6:	53 96       	adiw	r26, 0x13	; 19
  d8:	8d 91       	ld	r24, X+
  da:	9c 91       	ld	r25, X
  dc:	54 97       	sbiw	r26, 0x14	; 20
  de:	ec 01       	movw	r28, r24
  e0:	e8 81       	ld	r30, Y
  e2:	f9 81       	ldd	r31, Y+1	; 0x01
  e4:	01 90       	ld	r0, Z+
  e6:	f0 81       	ld	r31, Z
  e8:	e0 2d       	mov	r30, r0
  ea:	b6 01       	movw	r22, r12
  ec:	19 95       	eicall
  ee:	e8 01       	movw	r28, r16
  f0:	65 96       	adiw	r28, 0x15	; 21
  f2:	ce 01       	movw	r24, r28
  f4:	b6 01       	movw	r22, r12
  f6:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>
  fa:	ce 01       	movw	r24, r28
  fc:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>
 100:	f8 01       	movw	r30, r16
 102:	83 89       	ldd	r24, Z+19	; 0x13
 104:	94 89       	ldd	r25, Z+20	; 0x14
 106:	dc 01       	movw	r26, r24
 108:	ed 91       	ld	r30, X+
 10a:	fc 91       	ld	r31, X
 10c:	02 80       	ldd	r0, Z+2	; 0x02
 10e:	f3 81       	ldd	r31, Z+3	; 0x03
 110:	e0 2d       	mov	r30, r0
 112:	be 01       	movw	r22, r28
 114:	19 95       	eicall
 116:	ce 01       	movw	r24, r28
 118:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>
 11c:	e8 01       	movw	r28, r16
 11e:	9c 85       	ldd	r25, Y+12	; 0x0c
 120:	8a 89       	ldd	r24, Y+18	; 0x12
 122:	98 17       	cp	r25, r24
 124:	00 f0       	brcs	.+0      	; 0x126 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x126>
 126:	00 c0       	rjmp	.+0      	; 0x128 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x128>
 128:	8b 89       	ldd	r24, Y+19	; 0x13
 12a:	9c 89       	ldd	r25, Y+20	; 0x14
 12c:	25 e1       	ldi	r18, 0x15	; 21
 12e:	e2 2e       	mov	r14, r18
 130:	f1 2c       	mov	r15, r1
 132:	e0 0e       	add	r14, r16
 134:	f1 1e       	adc	r15, r17
 136:	dc 01       	movw	r26, r24
 138:	ed 91       	ld	r30, X+
 13a:	fc 91       	ld	r31, X
 13c:	04 80       	ldd	r0, Z+4	; 0x04
 13e:	f5 81       	ldd	r31, Z+5	; 0x05
 140:	e0 2d       	mov	r30, r0
 142:	b7 01       	movw	r22, r14
 144:	19 95       	eicall
 146:	8c 85       	ldd	r24, Y+12	; 0x0c
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	e8 89       	ldd	r30, Y+16	; 0x10
 154:	f9 89       	ldd	r31, Y+17	; 0x11
 156:	e8 0f       	add	r30, r24
 158:	f9 1f       	adc	r31, r25
 15a:	22 81       	ldd	r18, Z+2	; 0x02
 15c:	33 81       	ldd	r19, Z+3	; 0x03
 15e:	8e 85       	ldd	r24, Y+14	; 0x0e
 160:	88 23       	and	r24, r24
 162:	01 f4       	brne	.+0      	; 0x164 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x164>
 164:	8f 85       	ldd	r24, Y+15	; 0x0f
 166:	88 23       	and	r24, r24
 168:	01 f0       	breq	.+0      	; 0x16a <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x16a>
 16a:	82 e0       	ldi	r24, 0x02	; 2
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	00 c0       	rjmp	.+0      	; 0x170 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x170>
 170:	84 e0       	ldi	r24, 0x04	; 4
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	00 c0       	rjmp	.+0      	; 0x176 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x176>
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	82 0f       	add	r24, r18
 17c:	93 1f       	adc	r25, r19
 17e:	fc 01       	movw	r30, r24
 180:	c0 81       	ld	r28, Z
 182:	d1 81       	ldd	r29, Z+1	; 0x01
 184:	e8 81       	ld	r30, Y
 186:	f9 81       	ldd	r31, Y+1	; 0x01
 188:	01 90       	ld	r0, Z+
 18a:	f0 81       	ld	r31, Z
 18c:	e0 2d       	mov	r30, r0
 18e:	ce 01       	movw	r24, r28
 190:	b7 01       	movw	r22, r14
 192:	19 95       	eicall
 194:	d8 01       	movw	r26, r16
 196:	1c 96       	adiw	r26, 0x0c	; 12
 198:	8c 91       	ld	r24, X
 19a:	1c 97       	sbiw	r26, 0x0c	; 12
 19c:	28 81       	ld	r18, Y
 19e:	39 81       	ldd	r19, Y+1	; 0x01
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	88 0f       	add	r24, r24
 1a4:	99 1f       	adc	r25, r25
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	50 96       	adiw	r26, 0x10	; 16
 1ac:	ed 91       	ld	r30, X+
 1ae:	fc 91       	ld	r31, X
 1b0:	51 97       	sbiw	r26, 0x11	; 17
 1b2:	e8 0f       	add	r30, r24
 1b4:	f9 1f       	adc	r31, r25
 1b6:	40 81       	ld	r20, Z
 1b8:	51 81       	ldd	r21, Z+1	; 0x01
 1ba:	d9 01       	movw	r26, r18
 1bc:	14 96       	adiw	r26, 0x04	; 4
 1be:	ed 91       	ld	r30, X+
 1c0:	fc 91       	ld	r31, X
 1c2:	15 97       	sbiw	r26, 0x05	; 5
 1c4:	ce 01       	movw	r24, r28
 1c6:	b7 01       	movw	r22, r14
 1c8:	19 95       	eicall
 1ca:	e8 81       	ld	r30, Y
 1cc:	f9 81       	ldd	r31, Y+1	; 0x01
 1ce:	02 80       	ldd	r0, Z+2	; 0x02
 1d0:	f3 81       	ldd	r31, Z+3	; 0x03
 1d2:	e0 2d       	mov	r30, r0
 1d4:	ce 01       	movw	r24, r28
 1d6:	b7 01       	movw	r22, r14
 1d8:	19 95       	eicall
 1da:	f8 01       	movw	r30, r16
 1dc:	84 85       	ldd	r24, Z+12	; 0x0c
 1de:	28 81       	ld	r18, Y
 1e0:	39 81       	ldd	r19, Y+1	; 0x01
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	88 0f       	add	r24, r24
 1e6:	99 1f       	adc	r25, r25
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	00 88       	ldd	r0, Z+16	; 0x10
 1ee:	f1 89       	ldd	r31, Z+17	; 0x11
 1f0:	e0 2d       	mov	r30, r0
 1f2:	e8 0f       	add	r30, r24
 1f4:	f9 1f       	adc	r31, r25
 1f6:	40 81       	ld	r20, Z
 1f8:	51 81       	ldd	r21, Z+1	; 0x01
 1fa:	d9 01       	movw	r26, r18
 1fc:	16 96       	adiw	r26, 0x06	; 6
 1fe:	ed 91       	ld	r30, X+
 200:	fc 91       	ld	r31, X
 202:	17 97       	sbiw	r26, 0x07	; 7
 204:	ce 01       	movw	r24, r28
 206:	b7 01       	movw	r22, r14
 208:	19 95       	eicall
 20a:	e8 81       	ld	r30, Y
 20c:	f9 81       	ldd	r31, Y+1	; 0x01
 20e:	00 84       	ldd	r0, Z+8	; 0x08
 210:	f1 85       	ldd	r31, Z+9	; 0x09
 212:	e0 2d       	mov	r30, r0
 214:	ce 01       	movw	r24, r28
 216:	b7 01       	movw	r22, r14
 218:	19 95       	eicall
 21a:	e8 01       	movw	r28, r16
 21c:	8b 89       	ldd	r24, Y+19	; 0x13
 21e:	9c 89       	ldd	r25, Y+20	; 0x14
 220:	dc 01       	movw	r26, r24
 222:	ed 91       	ld	r30, X+
 224:	fc 91       	ld	r31, X
 226:	06 80       	ldd	r0, Z+6	; 0x06
 228:	f7 81       	ldd	r31, Z+7	; 0x07
 22a:	e0 2d       	mov	r30, r0
 22c:	b7 01       	movw	r22, r14
 22e:	19 95       	eicall
 230:	c8 01       	movw	r24, r16
 232:	45 96       	adiw	r24, 0x15	; 21
 234:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>
 238:	8c 85       	ldd	r24, Y+12	; 0x0c
 23a:	8f 5f       	subi	r24, 0xFF	; 255
 23c:	8c 87       	std	Y+12, r24	; 0x0c
 23e:	e8 01       	movw	r28, r16
 240:	9c 85       	ldd	r25, Y+12	; 0x0c
 242:	8a 89       	ldd	r24, Y+18	; 0x12
 244:	98 17       	cp	r25, r24
 246:	00 f0       	brcs	.+0      	; 0x248 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x248>
 248:	8b 89       	ldd	r24, Y+19	; 0x13
 24a:	9c 89       	ldd	r25, Y+20	; 0x14
 24c:	dc 01       	movw	r26, r24
 24e:	ed 91       	ld	r30, X+
 250:	fc 91       	ld	r31, X
 252:	65 96       	adiw	r28, 0x15	; 21
 254:	00 84       	ldd	r0, Z+8	; 0x08
 256:	f1 85       	ldd	r31, Z+9	; 0x09
 258:	e0 2d       	mov	r30, r0
 25a:	be 01       	movw	r22, r28
 25c:	19 95       	eicall
 25e:	ce 01       	movw	r24, r28
 260:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream>
 264:	e8 01       	movw	r28, r16
 266:	8b 85       	ldd	r24, Y+11	; 0x0b
 268:	88 23       	and	r24, r24
 26a:	01 f0       	breq	.+0      	; 0x26c <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x26c>
 26c:	d6 01       	movw	r26, r12
 26e:	ed 91       	ld	r30, X+
 270:	fc 91       	ld	r31, X
 272:	06 80       	ldd	r0, Z+6	; 0x06
 274:	f7 81       	ldd	r31, Z+7	; 0x07
 276:	e0 2d       	mov	r30, r0
 278:	c6 01       	movw	r24, r12
 27a:	19 95       	eicall
 27c:	e8 01       	movw	r28, r16
 27e:	8d 81       	ldd	r24, Y+5	; 0x05
 280:	9e 81       	ldd	r25, Y+6	; 0x06
 282:	00 c0       	rjmp	.+0      	; 0x284 <_ZN19SendResponseSubTask14executeSubTaskEP6Stream+0x284>
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	1f 91       	pop	r17
 28e:	0f 91       	pop	r16
 290:	ff 90       	pop	r15
 292:	ef 90       	pop	r14
 294:	df 90       	pop	r13
 296:	cf 90       	pop	r12
 298:	08 95       	ret

Disassembly of section .text._ZN19SendResponseSubTaskC2EP17RestServerSubTaskP12PageRendererS3_bP9AnyBufferIhhE:

00000000 <_ZN19SendResponseSubTaskC1EP17RestServerSubTaskP12PageRendererS3_bP9AnyBufferIhhE>:
}

// =================================================

void SendResponseSubTask::setWork( bool _isGETHttpMethod , bool _sendResponseInJSON, bool _sendResponseAsServiceMetaDescription , ServiceDescription* _selectdServices , unsigned char _selectedServicesCount )
{
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
	static const PROGMEM prog_char functionName[] = "setWork";
	//static const char* prefix = "SendResponseSubTask:setWork():";

	isGETHttpMethod = _isGETHttpMethod;
   c:	ef 92       	push	r14
	sendResponseInJSON = _sendResponseInJSON;
   e:	ff 92       	push	r15
	sendResponseAsServiceMetaDescription = _sendResponseAsServiceMetaDescription;
  10:	0f 93       	push	r16
	selectdServices = _selectdServices;
  12:	cf 93       	push	r28
  14:	df 93       	push	r29
	selectedServicesCount = _selectedServicesCount;
  16:	ec 01       	movw	r28, r24

	if( sendResponseAsServiceMetaDescription ) sendResponseInJSON = true;
  18:	5b 01       	movw	r10, r22
  1a:	4a 01       	movw	r8, r20
  1c:	69 01       	movw	r12, r18
  1e:	20 e0       	ldi	r18, 0x00	; 0

	//all( p << prefix << "isGETHttpMethod = " << isGETHttpMethod << ", sendResponseInJSON = " << sendResponseInJSON << ", sendResponseAsServiceMetaDescription = " << sendResponseAsServiceMetaDescription << ", selectedServicesCount = " << selectedServicesCount << endl; )
	//all( wpln( "isGETHttpMethod = %u, sendResponseInJSON = %u, sendResponseAsServiceMetaDescription = %u, selectedServicesCount = %u" , isGETHttpMethod , sendResponseInJSON , sendResponseAsServiceMetaDescription , selectedServicesCount ) )
	aln( "isGETHttpMethod = %u, sendResponseInJSON = %u, sendResponseAsServiceMetaDescription = %u, selectedServicesCount = %u" , isGETHttpMethod , sendResponseInJSON , sendResponseAsServiceMetaDescription , selectedServicesCount )
  20:	30 e0       	ldi	r19, 0x00	; 0
  22:	fc 01       	movw	r30, r24
  24:	21 93       	st	Z+, r18
  26:	31 93       	st	Z+, r19
  28:	cf 01       	movw	r24, r30
  2a:	60 e0       	ldi	r22, 0x00	; 0
  2c:	70 e0       	ldi	r23, 0x00	; 0
  2e:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTaskC1EP17RestServerSubTaskP12PageRendererS3_bP9AnyBufferIhhE>
  32:	ce 01       	movw	r24, r28
  34:	45 96       	adiw	r24, 0x15	; 21
  36:	b7 01       	movw	r22, r14
  38:	40 e0       	ldi	r20, 0x00	; 0
  3a:	50 e0       	ldi	r21, 0x00	; 0
  3c:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTaskC1EP17RestServerSubTaskP12PageRendererS3_bP9AnyBufferIhhE>
  40:	be 82       	std	Y+6, r11	; 0x06
  42:	ad 82       	std	Y+5, r10	; 0x05
  44:	98 86       	std	Y+8, r9	; 0x08
  46:	8f 82       	std	Y+7, r8	; 0x07
  48:	da 86       	std	Y+10, r13	; 0x0a
  4a:	c9 86       	std	Y+9, r12	; 0x09
  4c:	0b 87       	std	Y+11, r16	; 0x0b
  4e:	df 91       	pop	r29
  50:	cf 91       	pop	r28
  52:	0f 91       	pop	r16
  54:	ff 90       	pop	r15
  56:	ef 90       	pop	r14
  58:	df 90       	pop	r13
  5a:	cf 90       	pop	r12
  5c:	bf 90       	pop	r11
  5e:	af 90       	pop	r10
  60:	9f 90       	pop	r9
  62:	8f 90       	pop	r8
  64:	08 95       	ret

Disassembly of section .text._ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh:

00000000 <_ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh>:
}

// =================================================

void SendResponseSubTask::setWork( bool _isGETHttpMethod , bool _sendResponseInJSON, bool _sendResponseAsServiceMetaDescription , ServiceDescription* _selectdServices , unsigned char _selectedServicesCount )
{
   0:	ef 92       	push	r14
   2:	0f 93       	push	r16
   4:	1f 93       	push	r17
   6:	cf 93       	push	r28
   8:	df 93       	push	r29
   a:	ec 01       	movw	r28, r24
	static const PROGMEM prog_char functionName[] = "setWork";
	//static const char* prefix = "SendResponseSubTask:setWork():";

	isGETHttpMethod = _isGETHttpMethod;
   c:	6d 87       	std	Y+13, r22	; 0x0d
	sendResponseInJSON = _sendResponseInJSON;
   e:	4f 87       	std	Y+15, r20	; 0x0f
	sendResponseAsServiceMetaDescription = _sendResponseAsServiceMetaDescription;
  10:	2e 87       	std	Y+14, r18	; 0x0e
	selectdServices = _selectdServices;
  12:	19 8b       	std	Y+17, r17	; 0x11
  14:	08 8b       	std	Y+16, r16	; 0x10
	selectedServicesCount = _selectedServicesCount;
  16:	ea 8a       	std	Y+18, r14	; 0x12

	if( sendResponseAsServiceMetaDescription ) sendResponseInJSON = true;
  18:	22 23       	and	r18, r18
  1a:	01 f0       	breq	.+0      	; 0x1c <_ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh+0x1c>
  1c:	81 e0       	ldi	r24, 0x01	; 1
  1e:	8f 87       	std	Y+15, r24	; 0x0f

	//all( p << prefix << "isGETHttpMethod = " << isGETHttpMethod << ", sendResponseInJSON = " << sendResponseInJSON << ", sendResponseAsServiceMetaDescription = " << sendResponseAsServiceMetaDescription << ", selectedServicesCount = " << selectedServicesCount << endl; )
	//all( wpln( "isGETHttpMethod = %u, sendResponseInJSON = %u, sendResponseAsServiceMetaDescription = %u, selectedServicesCount = %u" , isGETHttpMethod , sendResponseInJSON , sendResponseAsServiceMetaDescription , selectedServicesCount ) )
	aln( "isGETHttpMethod = %u, sendResponseInJSON = %u, sendResponseAsServiceMetaDescription = %u, selectedServicesCount = %u" , isGETHttpMethod , sendResponseInJSON , sendResponseAsServiceMetaDescription , selectedServicesCount )
  20:	8c 81       	ldd	r24, Y+4	; 0x04
  22:	8b 30       	cpi	r24, 0x0B	; 11
  24:	00 f4       	brcc	.+0      	; 0x26 <_ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh+0x26>
  26:	ce 01       	movw	r24, r28
  28:	02 96       	adiw	r24, 0x02	; 2
  2a:	60 e0       	ldi	r22, 0x00	; 0
  2c:	70 e0       	ldi	r23, 0x00	; 0
  2e:	40 e0       	ldi	r20, 0x00	; 0
  30:	50 e0       	ldi	r21, 0x00	; 0
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh>
  36:	8d b7       	in	r24, 0x3d	; 61
  38:	9e b7       	in	r25, 0x3e	; 62
  3a:	0a 97       	sbiw	r24, 0x0a	; 10
  3c:	0f b6       	in	r0, 0x3f	; 63
  3e:	f8 94       	cli
  40:	9e bf       	out	0x3e, r25	; 62
  42:	0f be       	out	0x3f, r0	; 63
  44:	8d bf       	out	0x3d, r24	; 61
  46:	ed b7       	in	r30, 0x3d	; 61
  48:	fe b7       	in	r31, 0x3e	; 62
  4a:	31 96       	adiw	r30, 0x01	; 1
  4c:	80 e0       	ldi	r24, 0x00	; 0
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	ad b7       	in	r26, 0x3d	; 61
  52:	be b7       	in	r27, 0x3e	; 62
  54:	12 96       	adiw	r26, 0x02	; 2
  56:	9c 93       	st	X, r25
  58:	8e 93       	st	-X, r24
  5a:	11 97       	sbiw	r26, 0x01	; 1
  5c:	8d 85       	ldd	r24, Y+13	; 0x0d
  5e:	82 83       	std	Z+2, r24	; 0x02
  60:	13 82       	std	Z+3, r1	; 0x03
  62:	8f 85       	ldd	r24, Y+15	; 0x0f
  64:	84 83       	std	Z+4, r24	; 0x04
  66:	15 82       	std	Z+5, r1	; 0x05
  68:	8e 85       	ldd	r24, Y+14	; 0x0e
  6a:	86 83       	std	Z+6, r24	; 0x06
  6c:	17 82       	std	Z+7, r1	; 0x07
  6e:	8a 89       	ldd	r24, Y+18	; 0x12
  70:	80 87       	std	Z+8, r24	; 0x08
  72:	11 86       	std	Z+9, r1	; 0x09
  74:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh>
  78:	ed b7       	in	r30, 0x3d	; 61
  7a:	fe b7       	in	r31, 0x3e	; 62
  7c:	38 96       	adiw	r30, 0x08	; 8
  7e:	0f b6       	in	r0, 0x3f	; 63
  80:	f8 94       	cli
  82:	fe bf       	out	0x3e, r31	; 62
  84:	0f be       	out	0x3f, r0	; 63
  86:	ed bf       	out	0x3d, r30	; 61
  88:	80 e0       	ldi	r24, 0x00	; 0
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	92 83       	std	Z+2, r25	; 0x02
  8e:	81 83       	std	Z+1, r24	; 0x01
  90:	0e 94 00 00 	call	0	; 0x0 <_ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh>
  94:	0f 90       	pop	r0
  96:	0f 90       	pop	r0

	currentPageRenderer = sendResponseInJSON ? jsonPageRenderer : htmlPageRenderer;
  98:	8f 85       	ldd	r24, Y+15	; 0x0f
  9a:	88 23       	and	r24, r24
  9c:	01 f0       	breq	.+0      	; 0x9e <_ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh+0x9e>
  9e:	89 85       	ldd	r24, Y+9	; 0x09
  a0:	9a 85       	ldd	r25, Y+10	; 0x0a
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <_ZN19SendResponseSubTask7setWorkEbbbP18ServiceDescriptionh+0xa4>
  a4:	8f 81       	ldd	r24, Y+7	; 0x07
  a6:	98 85       	ldd	r25, Y+8	; 0x08
  a8:	9c 8b       	std	Y+20, r25	; 0x14
  aa:	8b 8b       	std	Y+19, r24	; 0x13

	//if( sendResponseInJSON )
	//	currentPageRenderer = jsonPageRenderer;
	//else
	//	currentPageRenderer = htmlPageRenderer;
}
  ac:	df 91       	pop	r29
  ae:	cf 91       	pop	r28
  b0:	1f 91       	pop	r17
  b2:	0f 91       	pop	r16
  b4:	ef 90       	pop	r14
  b6:	08 95       	ret

SkipBytesUntilSequenceSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000054  2**0
                  ALLOC
  3 .stab         00000894  00000000  00000000  00000054  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003c6d  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN29SkipBytesUntilSequenceSubTask14getSubTaskNameEv 00000006  00000000  00000000  00004555  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN29SkipBytesUntilSequenceSubTask18resetInternalStateEv 00000002  00000000  00000000  0000455b  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream 00000048  00000000  00000000  0000455d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN29SkipBytesUntilSequenceSubTaskC2EP17RestServerSubTask 00000036  00000000  00000000  000045a5  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN29SkipBytesUntilSequenceSubTask29setStopSequenceAndNextSubTaskEPcbP17RestServerSubTask 0000000e  00000000  00000000  000045db  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN29SkipBytesUntilSequenceSubTask31setSkipBytesCountAndNextSubTaskEjP17RestServerSubTask 0000000e  00000000  00000000  000045e9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .rodata._ZTV29SkipBytesUntilSequenceSubTask 0000000a  00000000  00000000  000045f7  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 12 .rodata._ZTV17RestServerSubTask 0000000a  00000000  00000000  00004601  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .progmem.data 0000001e  00000000  00000000  0000460b  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA

Disassembly of section .text._ZN29SkipBytesUntilSequenceSubTask14getSubTaskNameEv:

00000000 <_ZN29SkipBytesUntilSequenceSubTask14getSubTaskNameEv>:
void SkipBytesUntilSequenceSubTask::setSkipBytesCountAndNextSubTask( unsigned int _skipBytesCount , RestServerSubTask* _nextSubTask )
{
	//workUsingSkipBytesCount = true;

	//skipBytesCount = _skipBytesCount;
	nextSubTask = _nextSubTask;
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Disassembly of section .text._ZN29SkipBytesUntilSequenceSubTask18resetInternalStateEv:

00000000 <_ZN29SkipBytesUntilSequenceSubTask18resetInternalStateEv>:
   0:	08 95       	ret

Disassembly of section .text._ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream:

00000000 <_ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28

	streamSkipBytes.resetInternalState( _skipBytesCount );
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8c 01       	movw	r16, r24
}
   c:	07 5f       	subi	r16, 0xF7	; 247
   e:	1f 4f       	sbci	r17, 0xFF	; 255
  10:	c8 01       	movw	r24, r16
  12:	0e 94 00 00 	call	0	; 0x0 <_ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream>
  16:	c8 01       	movw	r24, r16
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream>
  1c:	00 97       	sbiw	r24, 0x00	; 0
  1e:	01 f0       	breq	.+0      	; 0x20 <_ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream+0x20>
  20:	2f ef       	ldi	r18, 0xFF	; 255
  22:	8f 3f       	cpi	r24, 0xFF	; 255
  24:	92 07       	cpc	r25, r18
  26:	01 f0       	breq	.+0      	; 0x28 <_ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream+0x28>
  28:	81 30       	cpi	r24, 0x01	; 1
  2a:	91 05       	cpc	r25, r1
  2c:	01 f4       	brne	.+0      	; 0x2e <_ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream+0x2e>
  2e:	8f 81       	ldd	r24, Y+7	; 0x07
  30:	98 85       	ldd	r25, Y+8	; 0x08
  32:	00 c0       	rjmp	.+0      	; 0x34 <_ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream+0x34>
  34:	8d 81       	ldd	r24, Y+5	; 0x05
  36:	9e 81       	ldd	r25, Y+6	; 0x06
  38:	00 c0       	rjmp	.+0      	; 0x3a <_ZN29SkipBytesUntilSequenceSubTask14executeSubTaskEP6Stream+0x3a>
  3a:	80 e0       	ldi	r24, 0x00	; 0
  3c:	90 e0       	ldi	r25, 0x00	; 0
  3e:	df 91       	pop	r29
  40:	cf 91       	pop	r28
  42:	1f 91       	pop	r17
  44:	0f 91       	pop	r16
  46:	08 95       	ret

Disassembly of section .text._ZN29SkipBytesUntilSequenceSubTaskC2EP17RestServerSubTask:

00000000 <_ZN29SkipBytesUntilSequenceSubTaskC1EP17RestServerSubTask>:
void SkipBytesUntilSequenceSubTask::setSkipBytesCountAndNextSubTask( unsigned int _skipBytesCount , RestServerSubTask* _nextSubTask )
{
	//workUsingSkipBytesCount = true;

	//skipBytesCount = _skipBytesCount;
	nextSubTask = _nextSubTask;
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28

	streamSkipBytes.resetInternalState( _skipBytesCount );
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
}
   c:	20 e0       	ldi	r18, 0x00	; 0
   e:	30 e0       	ldi	r19, 0x00	; 0
  10:	fc 01       	movw	r30, r24
  12:	21 93       	st	Z+, r18
  14:	31 93       	st	Z+, r19
  16:	cf 01       	movw	r24, r30
  18:	60 e0       	ldi	r22, 0x00	; 0
  1a:	70 e0       	ldi	r23, 0x00	; 0
  1c:	0e 94 00 00 	call	0	; 0x0 <_ZN29SkipBytesUntilSequenceSubTaskC1EP17RestServerSubTask>
  20:	ce 01       	movw	r24, r28
  22:	09 96       	adiw	r24, 0x09	; 9
  24:	0e 94 00 00 	call	0	; 0x0 <_ZN29SkipBytesUntilSequenceSubTaskC1EP17RestServerSubTask>
  28:	1e 83       	std	Y+6, r17	; 0x06
  2a:	0d 83       	std	Y+5, r16	; 0x05
  2c:	df 91       	pop	r29
  2e:	cf 91       	pop	r28
  30:	1f 91       	pop	r17
  32:	0f 91       	pop	r16
  34:	08 95       	ret

Disassembly of section .text._ZN29SkipBytesUntilSequenceSubTask29setStopSequenceAndNextSubTaskEPcbP17RestServerSubTask:

00000000 <_ZN29SkipBytesUntilSequenceSubTask29setStopSequenceAndNextSubTaskEPcbP17RestServerSubTask>:
void SkipBytesUntilSequenceSubTask::setSkipBytesCountAndNextSubTask( unsigned int _skipBytesCount , RestServerSubTask* _nextSubTask )
{
	//workUsingSkipBytesCount = true;

	//skipBytesCount = _skipBytesCount;
	nextSubTask = _nextSubTask;
   0:	fc 01       	movw	r30, r24
   2:	30 87       	std	Z+8, r19	; 0x08
   4:	27 83       	std	Z+7, r18	; 0x07

	streamSkipBytes.resetInternalState( _skipBytesCount );
   6:	09 96       	adiw	r24, 0x09	; 9
   8:	0e 94 00 00 	call	0	; 0x0 <_ZN29SkipBytesUntilSequenceSubTask29setStopSequenceAndNextSubTaskEPcbP17RestServerSubTask>
}
   c:	08 95       	ret

Disassembly of section .text._ZN29SkipBytesUntilSequenceSubTask31setSkipBytesCountAndNextSubTaskEjP17RestServerSubTask:

00000000 <_ZN29SkipBytesUntilSequenceSubTask31setSkipBytesCountAndNextSubTaskEjP17RestServerSubTask>:
void SkipBytesUntilSequenceSubTask::setSkipBytesCountAndNextSubTask( unsigned int _skipBytesCount , RestServerSubTask* _nextSubTask )
{
	//workUsingSkipBytesCount = true;

	//skipBytesCount = _skipBytesCount;
	nextSubTask = _nextSubTask;
   0:	fc 01       	movw	r30, r24
   2:	50 87       	std	Z+8, r21	; 0x08
   4:	47 83       	std	Z+7, r20	; 0x07

	streamSkipBytes.resetInternalState( _skipBytesCount );
   6:	09 96       	adiw	r24, 0x09	; 9
   8:	0e 94 00 00 	call	0	; 0x0 <_ZN29SkipBytesUntilSequenceSubTask31setSkipBytesCountAndNextSubTaskEjP17RestServerSubTask>
}
   c:	08 95       	ret

TableHTMLPageRenderer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000060b  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000063f  2**0
                  ALLOC
  3 .stab         00000be8  00000000  00000000  00000640  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003adb  00000000  00000000  00001228  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN5Print5writeEPKc 00000022  00000000  00000000  00004d03  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text._ZN21TableHTMLPageRenderer22renderAfterRestServiceEP6Stream 0000000c  00000000  00000000  00004d25  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text._ZN21TableHTMLPageRenderer23renderBeforeRestServiceEP6Stream 0000002a  00000000  00000000  00004d31  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text._ZN21TableHTMLPageRenderer13renderPageTopEP6Stream 00000026  00000000  00000000  00004d5b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN21TableHTMLPageRenderer16renderHttpHeaderEP6Stream 00000024  00000000  00000000  00004d81  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN21TableHTMLPageRendererC2EPP18ServiceDescriptionhP15TimeMeasurement 0000001a  00000000  00000000  00004da5  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb 000000ac  00000000  00000000  00004dbf  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text._ZN21TableHTMLPageRenderer12generateHelpEP6Stream 00000176  00000000  00000000  00004e6b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text._ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream 00000058  00000000  00000000  00004fe1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .rodata._ZTV21TableHTMLPageRenderer 0000000e  00000000  00000000  00005039  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 15 .rodata._ZTV12PageRenderer 0000000e  00000000  00000000  00005047  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN5Print5writeEPKc:

00000000 <_ZN5Print5writeEPKc>:
}

// =================================================

void TableHTMLPageRenderer::renderPageBottom( Stream* stream )
{
   0:	db 01       	movw	r26, r22
   2:	0d 90       	ld	r0, X+
   4:	00 20       	and	r0, r0
   6:	01 f4       	brne	.+0      	; 0x8 <_ZN5Print5writeEPKc+0x8>
   8:	ad 01       	movw	r20, r26
   a:	41 50       	subi	r20, 0x01	; 1
   c:	50 40       	sbci	r21, 0x00	; 0
   e:	46 1b       	sub	r20, r22
	stream->write( "</table>" );
  10:	57 0b       	sbc	r21, r23
  12:	dc 01       	movw	r26, r24
  14:	ed 91       	ld	r30, X+
  16:	fc 91       	ld	r31, X
  18:	02 80       	ldd	r0, Z+2	; 0x02

	// ---------

	stream->write( "<hr />" );
  1a:	f3 81       	ldd	r31, Z+3	; 0x03
  1c:	e0 2d       	mov	r30, r0
  1e:	19 95       	eicall
  20:	08 95       	ret

Disassembly of section .text._ZN21TableHTMLPageRenderer22renderAfterRestServiceEP6Stream:

00000000 <_ZN21TableHTMLPageRenderer22renderAfterRestServiceEP6Stream>:
}

// =================================================

void TableHTMLPageRenderer::renderPageBottom( Stream* stream )
{
   0:	cb 01       	movw	r24, r22
   2:	60 e0       	ldi	r22, 0x00	; 0
   4:	70 e0       	ldi	r23, 0x00	; 0
   6:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer22renderAfterRestServiceEP6Stream>
   a:	08 95       	ret

Disassembly of section .text._ZN21TableHTMLPageRenderer23renderBeforeRestServiceEP6Stream:

00000000 <_ZN21TableHTMLPageRenderer23renderBeforeRestServiceEP6Stream>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	cb 01       	movw	r24, r22
   8:	2f 81       	ldd	r18, Y+7	; 0x07
   a:	22 23       	and	r18, r18
   c:	01 f0       	breq	.+0      	; 0xe <_ZN21TableHTMLPageRenderer23renderBeforeRestServiceEP6Stream+0xe>
   e:	60 e0       	ldi	r22, 0x00	; 0
	stream->write( "</table>" );
  10:	70 e0       	ldi	r23, 0x00	; 0
  12:	00 c0       	rjmp	.+0      	; 0x14 <_ZN21TableHTMLPageRenderer23renderBeforeRestServiceEP6Stream+0x14>
  14:	60 e0       	ldi	r22, 0x00	; 0
  16:	70 e0       	ldi	r23, 0x00	; 0
  18:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer23renderBeforeRestServiceEP6Stream>

	// ---------

	stream->write( "<hr />" );
  1c:	8f 81       	ldd	r24, Y+7	; 0x07
  1e:	91 e0       	ldi	r25, 0x01	; 1
  20:	89 27       	eor	r24, r25
  22:	8f 83       	std	Y+7, r24	; 0x07
  24:	df 91       	pop	r29

	generateHelp( stream );
  26:	cf 91       	pop	r28
  28:	08 95       	ret

Disassembly of section .text._ZN21TableHTMLPageRenderer13renderPageTopEP6Stream:

00000000 <_ZN21TableHTMLPageRenderer13renderPageTopEP6Stream>:
}

// =================================================

void TableHTMLPageRenderer::renderPageBottom( Stream* stream )
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	d6 2f       	mov	r29, r22
   6:	c7 2f       	mov	r28, r23
   8:	86 2f       	mov	r24, r22
   a:	97 2f       	mov	r25, r23
   c:	60 e0       	ldi	r22, 0x00	; 0
   e:	70 e0       	ldi	r23, 0x00	; 0
	stream->write( "</table>" );
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer13renderPageTopEP6Stream>
  14:	8d 2f       	mov	r24, r29
  16:	9c 2f       	mov	r25, r28
  18:	60 e0       	ldi	r22, 0x00	; 0

	// ---------

	stream->write( "<hr />" );
  1a:	70 e0       	ldi	r23, 0x00	; 0
  1c:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer13renderPageTopEP6Stream>
  20:	df 91       	pop	r29
  22:	cf 91       	pop	r28
  24:	08 95       	ret

Disassembly of section .text._ZN21TableHTMLPageRenderer16renderHttpHeaderEP6Stream:

00000000 <_ZN21TableHTMLPageRenderer16renderHttpHeaderEP6Stream>:
}

// =================================================

void TableHTMLPageRenderer::renderPageBottom( Stream* stream )
{
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	eb 01       	movw	r28, r22
   6:	fc 01       	movw	r30, r24
   8:	85 81       	ldd	r24, Z+5	; 0x05
   a:	96 81       	ldd	r25, Z+6	; 0x06
   c:	00 97       	sbiw	r24, 0x00	; 0
   e:	01 f0       	breq	.+0      	; 0x10 <_ZN21TableHTMLPageRenderer16renderHttpHeaderEP6Stream+0x10>
	stream->write( "</table>" );
  10:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer16renderHttpHeaderEP6Stream>
  14:	ce 01       	movw	r24, r28
  16:	60 e0       	ldi	r22, 0x00	; 0
  18:	70 e0       	ldi	r23, 0x00	; 0

	// ---------

	stream->write( "<hr />" );
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer16renderHttpHeaderEP6Stream>
  1e:	df 91       	pop	r29
  20:	cf 91       	pop	r28
  22:	08 95       	ret

Disassembly of section .text._ZN21TableHTMLPageRendererC2EPP18ServiceDescriptionhP15TimeMeasurement:

00000000 <_ZN21TableHTMLPageRendererC1EPP18ServiceDescriptionhP15TimeMeasurement>:
}

// =================================================

void TableHTMLPageRenderer::renderPageBottom( Stream* stream )
{
   0:	fc 01       	movw	r30, r24
   2:	80 e0       	ldi	r24, 0x00	; 0
   4:	90 e0       	ldi	r25, 0x00	; 0
   6:	91 83       	std	Z+1, r25	; 0x01
   8:	80 83       	st	Z, r24
   a:	73 83       	std	Z+3, r23	; 0x03
   c:	62 83       	std	Z+2, r22	; 0x02
   e:	44 83       	std	Z+4, r20	; 0x04
	stream->write( "</table>" );
  10:	36 83       	std	Z+6, r19	; 0x06
  12:	25 83       	std	Z+5, r18	; 0x05
  14:	81 e0       	ldi	r24, 0x01	; 1
  16:	87 83       	std	Z+7, r24	; 0x07
  18:	08 95       	ret

Disassembly of section .text._ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb:

00000000 <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb>:
}

// =================================================

void TableHTMLPageRenderer::renderPageBottom( Stream* stream )
{
   0:	bf 92       	push	r11
   2:	cf 92       	push	r12
   4:	df 92       	push	r13
   6:	ef 92       	push	r14
   8:	ff 92       	push	r15
   a:	0f 93       	push	r16
   c:	1f 93       	push	r17
   e:	cf 93       	push	r28
	stream->write( "</table>" );
  10:	df 93       	push	r29
  12:	7c 01       	movw	r14, r24
  14:	16 2f       	mov	r17, r22
  16:	07 2f       	mov	r16, r23
  18:	b4 2e       	mov	r11, r20

	// ---------

	stream->write( "<hr />" );
  1a:	c0 e0       	ldi	r28, 0x00	; 0
  1c:	d0 e0       	ldi	r29, 0x00	; 0
  1e:	cc 24       	eor	r12, r12
  20:	dd 24       	eor	r13, r13
  22:	00 c0       	rjmp	.+0      	; 0x24 <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb+0x24>
  24:	d7 01       	movw	r26, r14

	generateHelp( stream );
  26:	12 96       	adiw	r26, 0x02	; 2
  28:	8d 91       	ld	r24, X+
  2a:	9c 91       	ld	r25, X
  2c:	13 97       	sbiw	r26, 0x03	; 3

	stream->write( "<hr />" );
  2e:	8c 0f       	add	r24, r28
  30:	9d 1f       	adc	r25, r29
  32:	dc 01       	movw	r26, r24
  34:	ed 91       	ld	r30, X+

	stream->write( "<table width='100%'><tr><td style='text-align:right;'><font size='-1'>Artur Stanek 2012</font></td></tr></table>" );
  36:	fc 91       	ld	r31, X
  38:	11 97       	sbiw	r26, 0x01	; 1
  3a:	01 90       	ld	r0, Z+
  3c:	f0 81       	ld	r31, Z
  3e:	e0 2d       	mov	r30, r0

	stream->write( "</body></html>" );
  40:	85 81       	ldd	r24, Z+5	; 0x05
  42:	bb 20       	and	r11, r11
  44:	01 f0       	breq	.+0      	; 0x46 <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb+0x46>
  46:	88 23       	and	r24, r24
  48:	01 f4       	brne	.+0      	; 0x4a <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb+0x4a>
	//stream->write( "\r\n\r\n" );
	//stream->write( "\r\n\r\n" );
	//stream->write( "\r\n\r\n" );

	//stream->write( "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nConnection: close\r\nContent-length: 0\r\n\r\n" );
}
  4a:	00 c0       	rjmp	.+0      	; 0x4c <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb+0x4c>
  4c:	88 23       	and	r24, r24
  4e:	01 f0       	breq	.+0      	; 0x50 <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb+0x50>
  50:	81 2f       	mov	r24, r17
  52:	90 2f       	mov	r25, r16
  54:	60 e0       	ldi	r22, 0x00	; 0
  56:	70 e0       	ldi	r23, 0x00	; 0
  58:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb>
  5c:	d7 01       	movw	r26, r14
  5e:	12 96       	adiw	r26, 0x02	; 2
  60:	ed 91       	ld	r30, X+
  62:	fc 91       	ld	r31, X
  64:	13 97       	sbiw	r26, 0x03	; 3
  66:	ec 0f       	add	r30, r28
  68:	fd 1f       	adc	r31, r29
  6a:	01 90       	ld	r0, Z+
  6c:	f0 81       	ld	r31, Z
  6e:	e0 2d       	mov	r30, r0
  70:	01 90       	ld	r0, Z+
  72:	f0 81       	ld	r31, Z
  74:	e0 2d       	mov	r30, r0
  76:	63 81       	ldd	r22, Z+3	; 0x03
  78:	74 81       	ldd	r23, Z+4	; 0x04
  7a:	81 2f       	mov	r24, r17
  7c:	90 2f       	mov	r25, r16
  7e:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb>
  82:	08 94       	sec
  84:	c1 1c       	adc	r12, r1
  86:	d1 1c       	adc	r13, r1
  88:	22 96       	adiw	r28, 0x02	; 2
  8a:	f7 01       	movw	r30, r14
  8c:	84 81       	ldd	r24, Z+4	; 0x04
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	02 97       	sbiw	r24, 0x02	; 2
  92:	c8 16       	cp	r12, r24
  94:	d9 06       	cpc	r13, r25
  96:	00 f0       	brcs	.+0      	; 0x98 <_ZN21TableHTMLPageRenderer48generateReadOnlyOrUpdateableServicesNamesForLinkEP6Streamb+0x98>
  98:	df 91       	pop	r29
  9a:	cf 91       	pop	r28
  9c:	1f 91       	pop	r17
  9e:	0f 91       	pop	r16
  a0:	ff 90       	pop	r15
  a2:	ef 90       	pop	r14
  a4:	df 90       	pop	r13
  a6:	cf 90       	pop	r12
  a8:	bf 90       	pop	r11
  aa:	08 95       	ret

Disassembly of section .text._ZN21TableHTMLPageRenderer12generateHelpEP6Stream:

00000000 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>:
}

// =================================================

void TableHTMLPageRenderer::renderPageBottom( Stream* stream )
{
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
	stream->write( "</table>" );
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	8c 01       	movw	r16, r24
  16:	eb 01       	movw	r28, r22
  18:	cb 01       	movw	r24, r22

	// ---------

	stream->write( "<hr />" );
  1a:	60 e0       	ldi	r22, 0x00	; 0
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  22:	ce 01       	movw	r24, r28
  24:	60 e0       	ldi	r22, 0x00	; 0

	generateHelp( stream );
  26:	70 e0       	ldi	r23, 0x00	; 0
  28:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  2c:	ce 01       	movw	r24, r28

	stream->write( "<hr />" );
  2e:	60 e0       	ldi	r22, 0x00	; 0
  30:	70 e0       	ldi	r23, 0x00	; 0
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>

	stream->write( "<table width='100%'><tr><td style='text-align:right;'><font size='-1'>Artur Stanek 2012</font></td></tr></table>" );
  36:	80 e0       	ldi	r24, 0x00	; 0
  38:	e8 2e       	mov	r14, r24
  3a:	80 e0       	ldi	r24, 0x00	; 0
  3c:	f8 2e       	mov	r15, r24
  3e:	ce 01       	movw	r24, r28

	stream->write( "</body></html>" );
  40:	b7 01       	movw	r22, r14
  42:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  46:	c8 01       	movw	r24, r16
  48:	be 01       	movw	r22, r28
	//stream->write( "\r\n\r\n" );
	//stream->write( "\r\n\r\n" );
	//stream->write( "\r\n\r\n" );

	//stream->write( "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nConnection: close\r\nContent-length: 0\r\n\r\n" );
}
  4a:	41 e0       	ldi	r20, 0x01	; 1
  4c:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  50:	20 e0       	ldi	r18, 0x00	; 0
  52:	a2 2e       	mov	r10, r18
  54:	20 e0       	ldi	r18, 0x00	; 0
  56:	b2 2e       	mov	r11, r18
  58:	ce 01       	movw	r24, r28
  5a:	b5 01       	movw	r22, r10
  5c:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  60:	ce 01       	movw	r24, r28
  62:	b7 01       	movw	r22, r14
  64:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  68:	c8 01       	movw	r24, r16
  6a:	be 01       	movw	r22, r28
  6c:	40 e0       	ldi	r20, 0x00	; 0
  6e:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  72:	ce 01       	movw	r24, r28
  74:	60 e0       	ldi	r22, 0x00	; 0
  76:	70 e0       	ldi	r23, 0x00	; 0
  78:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  7c:	ce 01       	movw	r24, r28
  7e:	60 e0       	ldi	r22, 0x00	; 0
  80:	70 e0       	ldi	r23, 0x00	; 0
  82:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	e3 2e       	mov	r14, r19
  8a:	30 e0       	ldi	r19, 0x00	; 0
  8c:	f3 2e       	mov	r15, r19
  8e:	ce 01       	movw	r24, r28
  90:	b7 01       	movw	r22, r14
  92:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  96:	c8 01       	movw	r24, r16
  98:	be 01       	movw	r22, r28
  9a:	41 e0       	ldi	r20, 0x01	; 1
  9c:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  a0:	ce 01       	movw	r24, r28
  a2:	b5 01       	movw	r22, r10
  a4:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  a8:	ce 01       	movw	r24, r28
  aa:	b7 01       	movw	r22, r14
  ac:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  b0:	c8 01       	movw	r24, r16
  b2:	be 01       	movw	r22, r28
  b4:	40 e0       	ldi	r20, 0x00	; 0
  b6:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  ba:	40 e0       	ldi	r20, 0x00	; 0
  bc:	c4 2e       	mov	r12, r20
  be:	40 e0       	ldi	r20, 0x00	; 0
  c0:	d4 2e       	mov	r13, r20
  c2:	ce 01       	movw	r24, r28
  c4:	b6 01       	movw	r22, r12
  c6:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  ca:	ce 01       	movw	r24, r28
  cc:	60 e0       	ldi	r22, 0x00	; 0
  ce:	70 e0       	ldi	r23, 0x00	; 0
  d0:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  d4:	ce 01       	movw	r24, r28
  d6:	60 e0       	ldi	r22, 0x00	; 0
  d8:	70 e0       	ldi	r23, 0x00	; 0
  da:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	e5 2e       	mov	r14, r21
  e2:	50 e0       	ldi	r21, 0x00	; 0
  e4:	f5 2e       	mov	r15, r21
  e6:	ce 01       	movw	r24, r28
  e8:	b7 01       	movw	r22, r14
  ea:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  ee:	c8 01       	movw	r24, r16
  f0:	be 01       	movw	r22, r28
  f2:	41 e0       	ldi	r20, 0x01	; 1
  f4:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
  f8:	ce 01       	movw	r24, r28
  fa:	b5 01       	movw	r22, r10
  fc:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 100:	ce 01       	movw	r24, r28
 102:	b7 01       	movw	r22, r14
 104:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 108:	c8 01       	movw	r24, r16
 10a:	be 01       	movw	r22, r28
 10c:	40 e0       	ldi	r20, 0x00	; 0
 10e:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 112:	ce 01       	movw	r24, r28
 114:	b6 01       	movw	r22, r12
 116:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 11a:	ce 01       	movw	r24, r28
 11c:	60 e0       	ldi	r22, 0x00	; 0
 11e:	70 e0       	ldi	r23, 0x00	; 0
 120:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 124:	ce 01       	movw	r24, r28
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 12e:	ce 01       	movw	r24, r28
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	70 e0       	ldi	r23, 0x00	; 0
 134:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 138:	00 e0       	ldi	r16, 0x00	; 0
 13a:	10 e0       	ldi	r17, 0x00	; 0
 13c:	ce 01       	movw	r24, r28
 13e:	b8 01       	movw	r22, r16
 140:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 144:	ce 01       	movw	r24, r28
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 14e:	ce 01       	movw	r24, r28
 150:	b8 01       	movw	r22, r16
 152:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 156:	ce 01       	movw	r24, r28
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	70 e0       	ldi	r23, 0x00	; 0
 15c:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer12generateHelpEP6Stream>
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	1f 91       	pop	r17
 166:	0f 91       	pop	r16
 168:	ff 90       	pop	r15
 16a:	ef 90       	pop	r14
 16c:	df 90       	pop	r13
 16e:	cf 90       	pop	r12
 170:	bf 90       	pop	r11
 172:	af 90       	pop	r10
 174:	08 95       	ret

Disassembly of section .text._ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream:

00000000 <_ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream>:
}

// =================================================

void TableHTMLPageRenderer::renderPageBottom( Stream* stream )
{
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	8c 01       	movw	r16, r24
   e:	7b 01       	movw	r14, r22
	stream->write( "</table>" );
  10:	cb 01       	movw	r24, r22
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e0       	ldi	r23, 0x00	; 0
  16:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream>

	// ---------

	stream->write( "<hr />" );
  1a:	c0 e0       	ldi	r28, 0x00	; 0
  1c:	d0 e0       	ldi	r29, 0x00	; 0
  1e:	c7 01       	movw	r24, r14
  20:	be 01       	movw	r22, r28
  22:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream>

	generateHelp( stream );
  26:	c8 01       	movw	r24, r16
  28:	b7 01       	movw	r22, r14
  2a:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream>

	stream->write( "<hr />" );
  2e:	c7 01       	movw	r24, r14
  30:	be 01       	movw	r22, r28
  32:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream>

	stream->write( "<table width='100%'><tr><td style='text-align:right;'><font size='-1'>Artur Stanek 2012</font></td></tr></table>" );
  36:	c7 01       	movw	r24, r14
  38:	60 e0       	ldi	r22, 0x00	; 0
  3a:	70 e0       	ldi	r23, 0x00	; 0
  3c:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream>

	stream->write( "</body></html>" );
  40:	c7 01       	movw	r24, r14
  42:	60 e0       	ldi	r22, 0x00	; 0
  44:	70 e0       	ldi	r23, 0x00	; 0
  46:	0e 94 00 00 	call	0	; 0x0 <_ZN21TableHTMLPageRenderer16renderPageBottomEP6Stream>
	//stream->write( "\r\n\r\n" );
	//stream->write( "\r\n\r\n" );
	//stream->write( "\r\n\r\n" );

	//stream->write( "HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nConnection: close\r\nContent-length: 0\r\n\r\n" );
}
  4a:	df 91       	pop	r29
  4c:	cf 91       	pop	r28
  4e:	1f 91       	pop	r17
  50:	0f 91       	pop	r16
  52:	ff 90       	pop	r15
  54:	ef 90       	pop	r14
  56:	08 95       	ret

TableHTMLRestServiceRenderer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001db  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000020f  2**0
                  ALLOC
  3 .stab         00000b58  00000000  00000000  00000210  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00003752  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .text._ZN28TableHTMLRestServiceRenderer23renderBeforeRestServiceEP6Stream 00000002  00000000  00000000  000044ba  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text._ZN28TableHTMLRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream 00000002  00000000  00000000  000044bc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text._ZN28TableHTMLRestServiceRenderer22renderAfterRestServiceEP6Stream 00000002  00000000  00000000  000044be  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text._ZN5Print5writeEPKc 00000022  00000000  00000000  000044c0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text._ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService 00000358  00000000  00000000  000044e2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text._ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService 00000096  00000000  00000000  0000483a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text._ZN28TableHTMLRestServiceRendererC2Eb 0000000e  00000000  00000000  000048d0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .rodata._ZTV28TableHTMLRestServiceRenderer 0000000e  00000000  00000000  000048de  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
 13 .rodata._ZTV19RestServiceRenderer 0000000e  00000000  00000000  000048ec  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text._ZN28TableHTMLRestServiceRenderer23renderBeforeRestServiceEP6Stream:

00000000 <_ZN28TableHTMLRestServiceRenderer23renderBeforeRestServiceEP6Stream>:

#include "TableHTMLRestServiceRenderer.h"

// =================================================

TableHTMLRestServiceRenderer::TableHTMLRestServiceRenderer( bool _useGETHttpMethodInForms )
   0:	08 95       	ret

Disassembly of section .text._ZN28TableHTMLRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream:

00000000 <_ZN28TableHTMLRestServiceRenderer34renderSpaceBetweenRestServicePatrsEP6Stream>:
   0:	08 95       	ret

Disassembly of section .text._ZN28TableHTMLRestServiceRenderer22renderAfterRestServiceEP6Stream:

00000000 <_ZN28TableHTMLRestServiceRenderer22renderAfterRestServiceEP6Stream>:
   0:	08 95       	ret

Disassembly of section .text._ZN5Print5writeEPKc:

00000000 <_ZN5Print5writeEPKc>:
   0:	db 01       	movw	r26, r22
   2:	0d 90       	ld	r0, X+
   4:	00 20       	and	r0, r0
   6:	01 f4       	brne	.+0      	; 0x8 <_ZN5Print5writeEPKc+0x8>
   8:	ad 01       	movw	r20, r26
{
	useGETHttpMethodInForms = _useGETHttpMethodInForms;
   a:	41 50       	subi	r20, 0x01	; 1
}
   c:	50 40       	sbci	r21, 0x00	; 0
   e:	46 1b       	sub	r20, r22
  10:	57 0b       	sbc	r21, r23
  12:	dc 01       	movw	r26, r24
  14:	ed 91       	ld	r30, X+
  16:	fc 91       	ld	r31, X
  18:	02 80       	ldd	r0, Z+2	; 0x02
  1a:	f3 81       	ldd	r31, Z+3	; 0x03
  1c:	e0 2d       	mov	r30, r0
  1e:	19 95       	eicall
  20:	08 95       	ret

Disassembly of section .text._ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService:

00000000 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>:

#include "TableHTMLRestServiceRenderer.h"

// =================================================

TableHTMLRestServiceRenderer::TableHTMLRestServiceRenderer( bool _useGETHttpMethodInForms )
   0:	df 92       	push	r13
   2:	ef 92       	push	r14
   4:	ff 92       	push	r15
   6:	0f 93       	push	r16
   8:	1f 93       	push	r17
{
	useGETHttpMethodInForms = _useGETHttpMethodInForms;
   a:	cf 93       	push	r28
}
   c:	df 93       	push	r29
   e:	7c 01       	movw	r14, r24
  10:	eb 01       	movw	r28, r22
  12:	8a 01       	movw	r16, r20
  14:	cb 01       	movw	r24, r22
  16:	60 e0       	ldi	r22, 0x00	; 0
  18:	70 e0       	ldi	r23, 0x00	; 0
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  1e:	d8 01       	movw	r26, r16
  20:	15 96       	adiw	r26, 0x05	; 5
  22:	8c 91       	ld	r24, X
  24:	15 97       	sbiw	r26, 0x05	; 5
  26:	88 23       	and	r24, r24
  28:	01 f4       	brne	.+0      	; 0x2a <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x2a>
  2a:	ce 01       	movw	r24, r28
  2c:	60 e0       	ldi	r22, 0x00	; 0
  2e:	70 e0       	ldi	r23, 0x00	; 0
  30:	00 c0       	rjmp	.+0      	; 0x32 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x32>
  32:	81 30       	cpi	r24, 0x01	; 1
  34:	01 f4       	brne	.+0      	; 0x36 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x36>
  36:	d8 01       	movw	r26, r16
  38:	ed 91       	ld	r30, X+
  3a:	fc 91       	ld	r31, X
  3c:	02 80       	ldd	r0, Z+2	; 0x02
  3e:	f3 81       	ldd	r31, Z+3	; 0x03
  40:	e0 2d       	mov	r30, r0
  42:	c8 01       	movw	r24, r16
  44:	be 01       	movw	r22, r28
  46:	d7 01       	movw	r26, r14
  48:	12 96       	adiw	r26, 0x02	; 2
  4a:	4c 91       	ld	r20, X
  4c:	19 95       	eicall
  4e:	00 c0       	rjmp	.+0      	; 0x50 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x50>
  50:	82 30       	cpi	r24, 0x02	; 2
  52:	01 f4       	brne	.+0      	; 0x54 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x54>
  54:	ce 01       	movw	r24, r28
  56:	60 e0       	ldi	r22, 0x00	; 0
  58:	70 e0       	ldi	r23, 0x00	; 0
  5a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  5e:	f7 01       	movw	r30, r14
  60:	82 81       	ldd	r24, Z+2	; 0x02
  62:	88 23       	and	r24, r24
  64:	01 f0       	breq	.+0      	; 0x66 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x66>
  66:	60 e0       	ldi	r22, 0x00	; 0
  68:	70 e0       	ldi	r23, 0x00	; 0
  6a:	00 c0       	rjmp	.+0      	; 0x6c <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x6c>
  6c:	60 e0       	ldi	r22, 0x00	; 0
  6e:	70 e0       	ldi	r23, 0x00	; 0
  70:	ce 01       	movw	r24, r28
  72:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  76:	ce 01       	movw	r24, r28
  78:	60 e0       	ldi	r22, 0x00	; 0
  7a:	70 e0       	ldi	r23, 0x00	; 0
  7c:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  80:	ce 01       	movw	r24, r28
  82:	60 e0       	ldi	r22, 0x00	; 0
  84:	70 e0       	ldi	r23, 0x00	; 0
  86:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  8a:	d8 01       	movw	r26, r16
  8c:	13 96       	adiw	r26, 0x03	; 3
  8e:	6d 91       	ld	r22, X+
  90:	7c 91       	ld	r23, X
  92:	14 97       	sbiw	r26, 0x04	; 4
  94:	ce 01       	movw	r24, r28
  96:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  9a:	ce 01       	movw	r24, r28
  9c:	60 e0       	ldi	r22, 0x00	; 0
  9e:	70 e0       	ldi	r23, 0x00	; 0
  a0:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  a4:	ce 01       	movw	r24, r28
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	70 e0       	ldi	r23, 0x00	; 0
  aa:	00 c0       	rjmp	.+0      	; 0xac <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0xac>
  ac:	83 30       	cpi	r24, 0x03	; 3
  ae:	01 f0       	breq	.+0      	; 0xb0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0xb0>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0xb2>
  b2:	d8 01       	movw	r26, r16
  b4:	ed 91       	ld	r30, X+
  b6:	fc 91       	ld	r31, X
  b8:	04 80       	ldd	r0, Z+4	; 0x04
  ba:	f5 81       	ldd	r31, Z+5	; 0x05
  bc:	e0 2d       	mov	r30, r0
  be:	c8 01       	movw	r24, r16
  c0:	19 95       	eicall
  c2:	d8 2e       	mov	r13, r24
  c4:	ce 01       	movw	r24, r28
  c6:	60 e0       	ldi	r22, 0x00	; 0
  c8:	70 e0       	ldi	r23, 0x00	; 0
  ca:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  ce:	f7 01       	movw	r30, r14
  d0:	82 81       	ldd	r24, Z+2	; 0x02
  d2:	88 23       	and	r24, r24
  d4:	01 f0       	breq	.+0      	; 0xd6 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0xd6>
  d6:	60 e0       	ldi	r22, 0x00	; 0
  d8:	70 e0       	ldi	r23, 0x00	; 0
  da:	00 c0       	rjmp	.+0      	; 0xdc <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0xdc>
  dc:	60 e0       	ldi	r22, 0x00	; 0
  de:	70 e0       	ldi	r23, 0x00	; 0
  e0:	ce 01       	movw	r24, r28
  e2:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  e6:	ce 01       	movw	r24, r28
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	70 e0       	ldi	r23, 0x00	; 0
  ec:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  f0:	ce 01       	movw	r24, r28
  f2:	60 e0       	ldi	r22, 0x00	; 0
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
  fa:	d8 01       	movw	r26, r16
  fc:	13 96       	adiw	r26, 0x03	; 3
  fe:	6d 91       	ld	r22, X+
 100:	7c 91       	ld	r23, X
 102:	14 97       	sbiw	r26, 0x04	; 4
 104:	ce 01       	movw	r24, r28
 106:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 10a:	ce 01       	movw	r24, r28
 10c:	60 e0       	ldi	r22, 0x00	; 0
 10e:	70 e0       	ldi	r23, 0x00	; 0
 110:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 114:	dd 20       	and	r13, r13
 116:	01 f0       	breq	.+0      	; 0x118 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x118>
 118:	60 e0       	ldi	r22, 0x00	; 0
 11a:	70 e0       	ldi	r23, 0x00	; 0
 11c:	00 c0       	rjmp	.+0      	; 0x11e <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x11e>
 11e:	60 e0       	ldi	r22, 0x00	; 0
 120:	70 e0       	ldi	r23, 0x00	; 0
 122:	ce 01       	movw	r24, r28
 124:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 128:	ce 01       	movw	r24, r28
 12a:	60 e0       	ldi	r22, 0x00	; 0
 12c:	70 e0       	ldi	r23, 0x00	; 0
 12e:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 132:	ce 01       	movw	r24, r28
 134:	60 e0       	ldi	r22, 0x00	; 0
 136:	70 e0       	ldi	r23, 0x00	; 0
 138:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 13c:	dd 20       	and	r13, r13
 13e:	01 f0       	breq	.+0      	; 0x140 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x140>
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	70 e0       	ldi	r23, 0x00	; 0
 144:	00 c0       	rjmp	.+0      	; 0x146 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x146>
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	00 c0       	rjmp	.+0      	; 0x14c <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x14c>
 14c:	84 30       	cpi	r24, 0x04	; 4
 14e:	01 f0       	breq	.+0      	; 0x150 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x150>
 150:	00 c0       	rjmp	.+0      	; 0x152 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x152>
 152:	d8 01       	movw	r26, r16
 154:	ed 91       	ld	r30, X+
 156:	fc 91       	ld	r31, X
 158:	04 80       	ldd	r0, Z+4	; 0x04
 15a:	f5 81       	ldd	r31, Z+5	; 0x05
 15c:	e0 2d       	mov	r30, r0
 15e:	c8 01       	movw	r24, r16
 160:	19 95       	eicall
 162:	d8 2e       	mov	r13, r24
 164:	ce 01       	movw	r24, r28
 166:	60 e0       	ldi	r22, 0x00	; 0
 168:	70 e0       	ldi	r23, 0x00	; 0
 16a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 16e:	f7 01       	movw	r30, r14
 170:	82 81       	ldd	r24, Z+2	; 0x02
 172:	88 23       	and	r24, r24
 174:	01 f0       	breq	.+0      	; 0x176 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x176>
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	00 c0       	rjmp	.+0      	; 0x17c <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x17c>
 17c:	60 e0       	ldi	r22, 0x00	; 0
 17e:	70 e0       	ldi	r23, 0x00	; 0
 180:	ce 01       	movw	r24, r28
 182:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 186:	ce 01       	movw	r24, r28
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	70 e0       	ldi	r23, 0x00	; 0
 18c:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 190:	ce 01       	movw	r24, r28
 192:	60 e0       	ldi	r22, 0x00	; 0
 194:	70 e0       	ldi	r23, 0x00	; 0
 196:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 19a:	d8 01       	movw	r26, r16
 19c:	13 96       	adiw	r26, 0x03	; 3
 19e:	6d 91       	ld	r22, X+
 1a0:	7c 91       	ld	r23, X
 1a2:	14 97       	sbiw	r26, 0x04	; 4
 1a4:	ce 01       	movw	r24, r28
 1a6:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 1aa:	ce 01       	movw	r24, r28
 1ac:	60 e0       	ldi	r22, 0x00	; 0
 1ae:	70 e0       	ldi	r23, 0x00	; 0
 1b0:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 1b4:	dd 20       	and	r13, r13
 1b6:	01 f0       	breq	.+0      	; 0x1b8 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x1b8>
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x1be>
 1be:	60 e0       	ldi	r22, 0x00	; 0
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	ce 01       	movw	r24, r28
 1c4:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 1c8:	ce 01       	movw	r24, r28
 1ca:	60 e0       	ldi	r22, 0x00	; 0
 1cc:	70 e0       	ldi	r23, 0x00	; 0
 1ce:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 1d2:	ce 01       	movw	r24, r28
 1d4:	60 e0       	ldi	r22, 0x00	; 0
 1d6:	70 e0       	ldi	r23, 0x00	; 0
 1d8:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 1dc:	dd 20       	and	r13, r13
 1de:	01 f0       	breq	.+0      	; 0x1e0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x1e0>
 1e0:	60 e0       	ldi	r22, 0x00	; 0
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x1e6>
 1e6:	60 e0       	ldi	r22, 0x00	; 0
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	ce 01       	movw	r24, r28
 1ec:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 1f0:	ce 01       	movw	r24, r28
 1f2:	60 e0       	ldi	r22, 0x00	; 0
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 1fa:	ce 01       	movw	r24, r28
 1fc:	60 e0       	ldi	r22, 0x00	; 0
 1fe:	70 e0       	ldi	r23, 0x00	; 0
 200:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 204:	ce 01       	movw	r24, r28
 206:	60 e0       	ldi	r22, 0x00	; 0
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	00 c0       	rjmp	.+0      	; 0x20c <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x20c>
 20c:	86 30       	cpi	r24, 0x06	; 6
 20e:	01 f0       	breq	.+0      	; 0x210 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x210>
 210:	00 c0       	rjmp	.+0      	; 0x212 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x212>
 212:	ce 01       	movw	r24, r28
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	70 e0       	ldi	r23, 0x00	; 0
 218:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 21c:	f7 01       	movw	r30, r14
 21e:	82 81       	ldd	r24, Z+2	; 0x02
 220:	88 23       	and	r24, r24
 222:	01 f0       	breq	.+0      	; 0x224 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x224>
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	70 e0       	ldi	r23, 0x00	; 0
 228:	00 c0       	rjmp	.+0      	; 0x22a <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x22a>
 22a:	60 e0       	ldi	r22, 0x00	; 0
 22c:	70 e0       	ldi	r23, 0x00	; 0
 22e:	ce 01       	movw	r24, r28
 230:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 234:	ce 01       	movw	r24, r28
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	70 e0       	ldi	r23, 0x00	; 0
 23a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 23e:	ce 01       	movw	r24, r28
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 248:	d8 01       	movw	r26, r16
 24a:	13 96       	adiw	r26, 0x03	; 3
 24c:	6d 91       	ld	r22, X+
 24e:	7c 91       	ld	r23, X
 250:	14 97       	sbiw	r26, 0x04	; 4
 252:	ce 01       	movw	r24, r28
 254:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 258:	ce 01       	movw	r24, r28
 25a:	60 e0       	ldi	r22, 0x00	; 0
 25c:	70 e0       	ldi	r23, 0x00	; 0
 25e:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 262:	ce 01       	movw	r24, r28
 264:	60 e0       	ldi	r22, 0x00	; 0
 266:	70 e0       	ldi	r23, 0x00	; 0
 268:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 26c:	ce 01       	movw	r24, r28
 26e:	60 e0       	ldi	r22, 0x00	; 0
 270:	70 e0       	ldi	r23, 0x00	; 0
 272:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 276:	d8 01       	movw	r26, r16
 278:	ed 91       	ld	r30, X+
 27a:	fc 91       	ld	r31, X
 27c:	04 84       	ldd	r0, Z+12	; 0x0c
 27e:	f5 85       	ldd	r31, Z+13	; 0x0d
 280:	e0 2d       	mov	r30, r0
 282:	c8 01       	movw	r24, r16
 284:	19 95       	eicall
 286:	bc 01       	movw	r22, r24
 288:	ce 01       	movw	r24, r28
 28a:	4a e0       	ldi	r20, 0x0A	; 10
 28c:	50 e0       	ldi	r21, 0x00	; 0
 28e:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 292:	ce 01       	movw	r24, r28
 294:	60 e0       	ldi	r22, 0x00	; 0
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 29c:	d8 01       	movw	r26, r16
 29e:	ed 91       	ld	r30, X+
 2a0:	fc 91       	ld	r31, X
 2a2:	06 84       	ldd	r0, Z+14	; 0x0e
 2a4:	f7 85       	ldd	r31, Z+15	; 0x0f
 2a6:	e0 2d       	mov	r30, r0
 2a8:	c8 01       	movw	r24, r16
 2aa:	19 95       	eicall
 2ac:	bc 01       	movw	r22, r24
 2ae:	ce 01       	movw	r24, r28
 2b0:	4a e0       	ldi	r20, 0x0A	; 10
 2b2:	50 e0       	ldi	r21, 0x00	; 0
 2b4:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 2b8:	ce 01       	movw	r24, r28
 2ba:	60 e0       	ldi	r22, 0x00	; 0
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x2c0>
 2c0:	85 30       	cpi	r24, 0x05	; 5
 2c2:	01 f4       	brne	.+0      	; 0x2c4 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x2c4>
 2c4:	ce 01       	movw	r24, r28
 2c6:	60 e0       	ldi	r22, 0x00	; 0
 2c8:	70 e0       	ldi	r23, 0x00	; 0
 2ca:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 2ce:	f7 01       	movw	r30, r14
 2d0:	82 81       	ldd	r24, Z+2	; 0x02
 2d2:	88 23       	and	r24, r24
 2d4:	01 f0       	breq	.+0      	; 0x2d6 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x2d6>
 2d6:	60 e0       	ldi	r22, 0x00	; 0
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x2dc>
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	70 e0       	ldi	r23, 0x00	; 0
 2e0:	ce 01       	movw	r24, r28
 2e2:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 2e6:	ce 01       	movw	r24, r28
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	70 e0       	ldi	r23, 0x00	; 0
 2ec:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 2f0:	ce 01       	movw	r24, r28
 2f2:	60 e0       	ldi	r22, 0x00	; 0
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 2fa:	d8 01       	movw	r26, r16
 2fc:	13 96       	adiw	r26, 0x03	; 3
 2fe:	6d 91       	ld	r22, X+
 300:	7c 91       	ld	r23, X
 302:	14 97       	sbiw	r26, 0x04	; 4
 304:	ce 01       	movw	r24, r28
 306:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 30a:	ce 01       	movw	r24, r28
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	70 e0       	ldi	r23, 0x00	; 0
 310:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 314:	ce 01       	movw	r24, r28
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	00 c0       	rjmp	.+0      	; 0x31c <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService+0x31c>
 31c:	ce 01       	movw	r24, r28
 31e:	60 e0       	ldi	r22, 0x00	; 0
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 326:	ce 01       	movw	r24, r28
 328:	f8 01       	movw	r30, r16
 32a:	65 81       	ldd	r22, Z+5	; 0x05
 32c:	4a e0       	ldi	r20, 0x0A	; 10
 32e:	50 e0       	ldi	r21, 0x00	; 0
 330:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 334:	ce 01       	movw	r24, r28
 336:	60 e0       	ldi	r22, 0x00	; 0
 338:	70 e0       	ldi	r23, 0x00	; 0
 33a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 33e:	ce 01       	movw	r24, r28
 340:	60 e0       	ldi	r22, 0x00	; 0
 342:	70 e0       	ldi	r23, 0x00	; 0
 344:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer17renderValueSetterEP6StreamP11RestService>
 348:	df 91       	pop	r29
 34a:	cf 91       	pop	r28
 34c:	1f 91       	pop	r17
 34e:	0f 91       	pop	r16
 350:	ff 90       	pop	r15
 352:	ef 90       	pop	r14
 354:	df 90       	pop	r13
 356:	08 95       	ret

Disassembly of section .text._ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService:

00000000 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>:

#include "TableHTMLRestServiceRenderer.h"

// =================================================

TableHTMLRestServiceRenderer::TableHTMLRestServiceRenderer( bool _useGETHttpMethodInForms )
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
{
	useGETHttpMethodInForms = _useGETHttpMethodInForms;
   a:	1f 93       	push	r17
}
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	eb 01       	movw	r28, r22
  12:	8a 01       	movw	r16, r20
  14:	cb 01       	movw	r24, r22
  16:	60 e0       	ldi	r22, 0x00	; 0
  18:	70 e0       	ldi	r23, 0x00	; 0
  1a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  1e:	ce 01       	movw	r24, r28
  20:	d8 01       	movw	r26, r16
  22:	12 96       	adiw	r26, 0x02	; 2
  24:	6c 91       	ld	r22, X
  26:	4a e0       	ldi	r20, 0x0A	; 10
  28:	50 e0       	ldi	r21, 0x00	; 0
  2a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  2e:	80 e0       	ldi	r24, 0x00	; 0
  30:	c8 2e       	mov	r12, r24
  32:	80 e0       	ldi	r24, 0x00	; 0
  34:	d8 2e       	mov	r13, r24
  36:	ce 01       	movw	r24, r28
  38:	b6 01       	movw	r22, r12
  3a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  3e:	90 e0       	ldi	r25, 0x00	; 0
  40:	e9 2e       	mov	r14, r25
  42:	90 e0       	ldi	r25, 0x00	; 0
  44:	f9 2e       	mov	r15, r25
  46:	ce 01       	movw	r24, r28
  48:	b7 01       	movw	r22, r14
  4a:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  4e:	f8 01       	movw	r30, r16
  50:	63 81       	ldd	r22, Z+3	; 0x03
  52:	74 81       	ldd	r23, Z+4	; 0x04
  54:	ce 01       	movw	r24, r28
  56:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  5a:	ce 01       	movw	r24, r28
  5c:	b6 01       	movw	r22, r12
  5e:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  62:	ce 01       	movw	r24, r28
  64:	b7 01       	movw	r22, r14
  66:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  6a:	d8 01       	movw	r26, r16
  6c:	ed 91       	ld	r30, X+
  6e:	fc 91       	ld	r31, X
  70:	01 90       	ld	r0, Z+
  72:	f0 81       	ld	r31, Z
  74:	e0 2d       	mov	r30, r0
  76:	c8 01       	movw	r24, r16
  78:	be 01       	movw	r22, r28
  7a:	19 95       	eicall
  7c:	ce 01       	movw	r24, r28
  7e:	b6 01       	movw	r22, r12
  80:	0e 94 00 00 	call	0	; 0x0 <_ZN28TableHTMLRestServiceRenderer14renderGetValueEP6StreamP11RestService>
  84:	df 91       	pop	r29
  86:	cf 91       	pop	r28
  88:	1f 91       	pop	r17
  8a:	0f 91       	pop	r16
  8c:	ff 90       	pop	r15
  8e:	ef 90       	pop	r14
  90:	df 90       	pop	r13
  92:	cf 90       	pop	r12
  94:	08 95       	ret

Disassembly of section .text._ZN28TableHTMLRestServiceRendererC2Eb:

00000000 <_ZN28TableHTMLRestServiceRendererC1Eb>:

#include "TableHTMLRestServiceRenderer.h"

// =================================================

TableHTMLRestServiceRenderer::TableHTMLRestServiceRenderer( bool _useGETHttpMethodInForms )
   0:	fc 01       	movw	r30, r24
   2:	80 e0       	ldi	r24, 0x00	; 0
   4:	90 e0       	ldi	r25, 0x00	; 0
   6:	91 83       	std	Z+1, r25	; 0x01
   8:	80 83       	st	Z, r24
{
	useGETHttpMethodInForms = _useGETHttpMethodInForms;
   a:	62 83       	std	Z+2, r22	; 0x02
}
   c:	08 95       	ret

_BasicHTMLPageRenderer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000004a0  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING

_BasicHTMLRestServiceRenderer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000004ae  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING

_BasicValueSetterHTMLGenerator.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000004b0  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING

_EmptyRestService.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      00000496  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING

_ReadHttpPathSubTask.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      0000049c  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING

_RestUpdateableService.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000004a0  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING

_SettableRestUpdateableService.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .stab         0000018c  00000000  00000000  00000034  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  4 .stabstr      000004b0  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
